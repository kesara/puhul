18c18
< <meta content="xml2rfc 3.15.2" name="generator">
---
> <meta content="xml2rfc 3.19.1" name="generator">
24,29c24,27
<   xml2rfc 3.15.2
<     Python 3.9.14
<     appdirs 1.4.4
<     ConfigArgParse 1.5.3
<     google-i18n-address 2.5.1
<     html5lib 1.1
---
>   xml2rfc 3.19.1
>     Python 3.11.7
>     ConfigArgParse 1.7
>     google-i18n-address 3.1.0
32,37c30,35
<     lxml 4.9.0
<     MarkupSafe 2.1.1
<     pycountry 22.3.5
<     PyYAML 6.0
<     requests 2.28.0
<     setuptools 44.1.1
---
>     lxml 4.9.4
>     platformdirs 4.1.0
>     pycountry 23.12.11
>     PyYAML 6.0.1
>     requests 2.31.0
>     setuptools 65.5.0
39,40c37
<     wcwidth 0.2.5
<     weasyprint 56.1
---
>     wcwidth 0.2.13
42c39
< <link href="rfc9320.xml" rel="alternate" type="application/rfc+xml">
---
> <link href="rfc/rfc9320.xml" rel="alternate" type="application/rfc+xml">
61a59,64
> :root {
>   --font-sans: 'Noto Sans', Arial, Helvetica, sans-serif;
>   --font-serif: 'Noto Serif', 'Times', 'Times New Roman', serif;
>   --font-mono: 'Roboto Mono', Courier, 'Courier New', monospace;
> }
> 
64d66
<   width: extend-to-zoom;
79c81
<   font-family: 'Noto Sans', Arial, Helvetica, sans-serif;
---
>   font-family: var(--font-sans);
81a84
>   overflow-wrap: break-word;
167a171,179
> svg[font-family~="serif" i], svg [font-family~="serif" i] {
>   font-family: var(--font-serif);
> }
> svg[font-family~="sans-serif" i], svg [font-family~="sans-serif" i] {
>   font-family: var(--font-sans);
> }
> svg[font-family~="monospace" i], svg [font-family~="monospace" i] {
>   font-family: var(--font-mono);
> }
263c275
<   font-family: 'Roboto Mono', monospace;
---
>   font-family: var(--font-mono);
302a315,317
> blockquote > *:last-child {
>   margin-bottom: 0;
> }
500c515
<   font-family: "Noto Sans",Arial,Helvetica,sans-serif;
---
>   font-family: var(--font-sans);
640d654
< 
663c677
<   pre.breakable {
---
>   .breakable pre {
838c852
< pre.sourcecode,
---
> .sourcecode pre,
1174c1188
< dd > div:first-child > pre.sourcecode,
---
> dd > div.sourcecode:first-child,
1188c1202
< li > p:last-of-type {
---
> li > p:last-of-type:only-child {
1192a1207
> <link href="https://datatracker.ietf.org/doc/draft-ietf-detnet-bounded-latency-10" rel="prev">
1195c1210
<   <link href="https://datatracker.ietf.org/doc/draft-ietf-detnet-bounded-latency-10" rel="prev">
---
>   <script type="application/javascript">async function addMetadata(){try{const e=document.styleSheets[0].cssRules;for(let t=0;t<e.length;t++)if(/#identifiers/.exec(e[t].selectorText)){const a=e[t].cssText.replace("#identifiers","#external-updates");document.styleSheets[0].insertRule(a,document.styleSheets[0].cssRules.length)}}catch(e){console.log(e)}const e=document.getElementById("external-metadata");if(e)try{var t,a="",o=function(e){const t=document.getElementsByTagName("meta");for(let a=0;a<t.length;a++)if(t[a].getAttribute("name")===e)return t[a].getAttribute("content");return""}("rfc.number");if(o){t="https://www.rfc-editor.org/rfc/rfc"+o+".json";try{const e=await fetch(t);a=await e.json()}catch(e){t=document.URL.indexOf("html")>=0?document.URL.replace(/html$/,"json"):document.URL+".json";const o=await fetch(t);a=await o.json()}}if(!a)return;e.style.display="block";const s="",d="https://datatracker.ietf.org/doc",n="https://datatracker.ietf.org/ipr/search",c="https://www.rfc-editor.org/info",l=a.doc_id.toLowerCase(),i=a.doc_id.slice(0,3).toLowerCase(),f=a.doc_id.slice(3).replace(/^0+/,""),u={status:"Status",obsoletes:"Obsoletes",obsoleted_by:"Obsoleted By",updates:"Updates",updated_by:"Updated By",see_also:"See Also",errata_url:"Errata"};let h="<dl style='overflow:hidden' id='external-updates'>";["status","obsoletes","obsoleted_by","updates","updated_by","see_also","errata_url"].forEach(e=>{if("status"==e){a[e]=a[e].toLowerCase();var t=a[e].split(" "),o=t.length,w="",p=1;for(let e=0;e<o;e++)p<o?w=w+r(t[e])+" ":w+=r(t[e]),p++;a[e]=w}else if("obsoletes"==e||"obsoleted_by"==e||"updates"==e||"updated_by"==e){var g,m="",b=1;g=a[e].length;for(let t=0;t<g;t++)a[e][t]&&(a[e][t]=String(a[e][t]).toLowerCase(),m=b<g?m+"<a href='"+s+"/rfc/".concat(a[e][t])+"'>"+a[e][t].slice(3)+"</a>, ":m+"<a href='"+s+"/rfc/".concat(a[e][t])+"'>"+a[e][t].slice(3)+"</a>",b++);a[e]=m}else if("see_also"==e){var y,L="",C=1;y=a[e].length;for(let t=0;t<y;t++)if(a[e][t]){a[e][t]=String(a[e][t]);var _=a[e][t].slice(0,3),v=a[e][t].slice(3).replace(/^0+/,"");L=C<y?"RFC"!=_?L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+_+" "+v+"</a>, ":L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+v+"</a>, ":"RFC"!=_?L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+_+" "+v+"</a>":L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+v+"</a>",C++}a[e]=L}else if("errata_url"==e){var R="";R=a[e]?R+"<a href='"+a[e]+"'>Errata exist</a> | <a href='"+d+"/"+l+"'>Datatracker</a>| <a href='"+n+"/?"+i+"="+f+"&submit="+i+"'>IPR</a> | <a href='"+c+"/"+l+"'>Info page</a>":"<a href='"+d+"/"+l+"'>Datatracker</a> | <a href='"+n+"/?"+i+"="+f+"&submit="+i+"'>IPR</a> | <a href='"+c+"/"+l+"'>Info page</a>",a[e]=R}""!=a[e]?"Errata"==u[e]?h+=`<dt>More info:</dt><dd>${a[e]}</dd>`:h+=`<dt>${u[e]}:</dt><dd>${a[e]}</dd>`:"Errata"==u[e]&&(h+=`<dt>More info:</dt><dd>${a[e]}</dd>`)}),h+="</dl>",e.innerHTML=h}catch(e){console.log(e)}else console.log("Could not locate metadata <div> element");function r(e){return e.charAt(0).toUpperCase()+e.slice(1)}}window.removeEventListener("load",addMetadata),window.addEventListener("load",addMetadata);</script>
1198c1213
< <script src="https://www.rfc-editor.org/js/metadata.min.js"></script>
---
> <script src="metadata.min.js"></script>
1474c1489
<         <dd style="margin-left: 1.5em" id="section-2-2.2">TrafficSpecification, as defined in <span><a href="https://www.rfc-editor.org/rfc/rfc9016#section-5.5" class="relref">Section 5.5</a> of [<a href="#RFC9016" class="cite xref">RFC9016</a>]</span>.<a href="#section-2-2.2" class="pilcrow">¶</a>
---
>         <dd style="margin-left: 1.5em" id="section-2-2.2">TrafficSpecification, as defined in <span><a href="https://rfc-editor.org/rfc/rfc9016#section-5.5" class="relref">Section 5.5</a> of [<a href="#RFC9016" class="cite xref">RFC9016</a>]</span>.<a href="#section-2-2.2" class="pilcrow">¶</a>
2081c2096
<             Based on the timing model described in <a href="#fig_timing_model" class="auto internal xref">Figure 1</a>, contention occurs only at the output port of a DetNet transit node; therefore, the focus of the rest of this subsection is on the regulator and queuing subsystem in the output port of a DetNet transit node. The input flows are identified using the information in (<span><a href="https://www.rfc-editor.org/rfc/rfc8939#section-5.1" class="relref">Section 5.1</a> of [<a href="#RFC8939" class="cite xref">RFC8939</a>]</span>). Then, they are aggregated into eight macro-flows based
---
>             Based on the timing model described in <a href="#fig_timing_model" class="auto internal xref">Figure 1</a>, contention occurs only at the output port of a DetNet transit node; therefore, the focus of the rest of this subsection is on the regulator and queuing subsystem in the output port of a DetNet transit node. The input flows are identified using the information in (<span><a href="https://rfc-editor.org/rfc/rfc8939#section-5.1" class="relref">Section 5.1</a> of [<a href="#RFC8939" class="cite xref">RFC8939</a>]</span>). Then, they are aggregated into eight macro-flows based
2255c2270
<         This section provides an example application of the timing model presented in this document to control the admission of a DetNet flow on a DetNet-enabled IP network. Consider <a href="#fig_ip_detnet_simple" class="auto internal xref">Figure 5</a>, taken from <span><a href="https://www.rfc-editor.org/rfc/rfc8939#section-3" class="relref">Section 3</a> of [<a href="#RFC8939" class="cite xref">RFC8939</a>]</span>, which shows a simple IP network:<a href="#section-7-1" class="pilcrow">¶</a></p>
---
>         This section provides an example application of the timing model presented in this document to control the admission of a DetNet flow on a DetNet-enabled IP network. Consider <a href="#fig_ip_detnet_simple" class="auto internal xref">Figure 5</a>, taken from <span><a href="https://rfc-editor.org/rfc/rfc8939#section-3" class="relref">Section 3</a> of [<a href="#RFC8939" class="cite xref">RFC8939</a>]</span>, which shows a simple IP network:<a href="#section-7-1" class="pilcrow">¶</a></p>
2267c2282
<                 The relay nodes 1 and 2 implement credit-based shapers with asynchronous traffic shaping, as in <a href="#TSNwithATSmodel" class="auto internal xref">Section 6.4</a>. They also perform the aggregation and mapping of IP DetNet flows to TSN streams (<span><a href="https://www.rfc-editor.org/rfc/rfc9023#section-4.4" class="relref">Section 4.4</a> of [<a href="#RFC9023" class="cite xref">RFC9023</a>]</span>).<a href="#section-7-2.4" class="pilcrow">¶</a>
---
>                 The relay nodes 1 and 2 implement credit-based shapers with asynchronous traffic shaping, as in <a href="#TSNwithATSmodel" class="auto internal xref">Section 6.4</a>. They also perform the aggregation and mapping of IP DetNet flows to TSN streams (<span><a href="https://rfc-editor.org/rfc/rfc9023#section-4.4" class="relref">Section 4.4</a> of [<a href="#RFC9023" class="cite xref">RFC9023</a>]</span>).<a href="#section-7-2.4" class="pilcrow">¶</a>
