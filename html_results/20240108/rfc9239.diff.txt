15c15
< <meta content="xml2rfc 3.12.5" name="generator">
---
> <meta content="xml2rfc 3.19.0" name="generator">
25,43c25,38
<   xml2rfc 3.12.5
<     Python 3.6.15
<     appdirs 1.4.4
<     ConfigArgParse 1.4.1
<     google-i18n-address 2.4.0
<     html5lib 1.0.1
<     intervaltree 3.0.2
<     Jinja2 2.11.3
<     kitchen 1.2.6
<     lxml 4.4.2
<     MarkupSafe 2.0.1
<     pycairo 1.15.1
<     pycountry 19.8.18
<     pyflakes 2.1.1
<     PyYAML 5.4.1
<     requests 2.24.0
<     setuptools 40.5.0
<     six 1.14.0
<     WeasyPrint 52.5
---
>   xml2rfc 3.19.0
>     Python 3.11.7
>     ConfigArgParse 1.7
>     google-i18n-address 3.1.0
>     intervaltree 3.1.0
>     Jinja2 3.1.2
>     lxml 5.0.1
>     platformdirs 4.1.0
>     pycountry 23.12.11
>     PyYAML 6.0.1
>     requests 2.31.0
>     setuptools 65.5.0
>     six 1.16.0
>     wcwidth 0.2.13
45c40
< <link href="rfc9239.xml" rel="alternate" type="application/rfc+xml">
---
> <link href="rfc/rfc9239.xml" rel="alternate" type="application/rfc+xml">
55c50
<   commented changes found necssary during the development of the v3
---
>   commented changes found necessary during the development of the v3
64a60,65
> :root {
>   --font-sans: 'Noto Sans', Arial, Helvetica, sans-serif;
>   --font-serif: 'Noto Serif', 'Times', 'Times New Roman', serif;
>   --font-mono: 'Roboto Mono', Courier, 'Courier New', monospace;
> }
> 
67d67
<   width: extend-to-zoom;
82c82
<   font-family: 'Noto Sans', Arial, Helvetica, sans-serif;
---
>   font-family: var(--font-sans);
84a85
>   overflow-wrap: break-word;
170a172,180
> svg[font-family~="serif" i], svg [font-family~="serif" i] {
>   font-family: var(--font-serif);
> }
> svg[font-family~="sans-serif" i], svg [font-family~="sans-serif" i] {
>   font-family: var(--font-sans);
> }
> svg[font-family~="monospace" i], svg [font-family~="monospace" i] {
>   font-family: var(--font-mono);
> }
185,188d194
<   border: none;
<   /* this isn't optimal, but it's an existence proof.  PrinceXML doesn't
<      support flexbox yet.
<   */
189a196
>   border: none;
267c274
< tt, code, pre, code {
---
> tt, code, pre {
269c276
<   font-family: 'Roboto Mono', monospace;
---
>   font-family: var(--font-mono);
308a316,318
> blockquote > *:last-child {
>   margin-bottom: 0;
> }
506c516
<   font-family: "Noto Sans",Arial,Helvetica,sans-serif;
---
>   font-family: var(--font-sans);
646d655
< 
669c678
<   pre.breakable {
---
>   .breakable pre {
739c748
<   /* The follwing is commented out here, but set appropriately by in code, as
---
>   /* The following is commented out here, but set appropriately by in code, as
839c848
< tt, code, pre, code {
---
> tt, code, pre {
844c853
< pre.sourcecode,
---
> .sourcecode pre,
880c889
< /* Make the alternative author contact informatio look less like just another
---
> /* Make the alternative author contact information look less like just another
1061a1071
>   .artwork > pre,
1076c1086
< and increase the contrast between border and odd row background sligthtly */
---
> and increase the contrast between border and odd row background slightly */
1082a1093,1095
> tr {
>   break-inside: avoid;
> }
1133c1146
< /* Text in compact lists should not get extra bottim margin space,
---
> /* Text in compact lists should not get extra bottom margin space,
1158c1171
< /* Tweak the comact list text */
---
> /* Tweak the compact list text */
1176c1189
< dd > div:first-child > pre.sourcecode,
---
> dd > div.sourcecode:first-child,
1190c1203
< li > p:last-of-type {
---
> li > p:last-of-type:only-child {
1194a1208
> <link href="https://datatracker.ietf.org/doc/draft-ietf-dispatch-javascript-mjs-17" rel="prev">
1197c1211
<   <link href="https://datatracker.ietf.org/doc/draft-ietf-dispatch-javascript-mjs-17" rel="prev">
---
>   <script type="application/javascript">async function addMetadata(){try{const e=document.styleSheets[0].cssRules;for(let t=0;t<e.length;t++)if(/#identifiers/.exec(e[t].selectorText)){const a=e[t].cssText.replace("#identifiers","#external-updates");document.styleSheets[0].insertRule(a,document.styleSheets[0].cssRules.length)}}catch(e){console.log(e)}const e=document.getElementById("external-metadata");if(e)try{var t,a="",o=function(e){const t=document.getElementsByTagName("meta");for(let a=0;a<t.length;a++)if(t[a].getAttribute("name")===e)return t[a].getAttribute("content");return""}("rfc.number");if(o){t="https://www.rfc-editor.org/rfc/rfc"+o+".json";try{const e=await fetch(t);a=await e.json()}catch(e){t=document.URL.indexOf("html")>=0?document.URL.replace(/html$/,"json"):document.URL+".json";const o=await fetch(t);a=await o.json()}}if(!a)return;e.style.display="block";const s="",d="https://datatracker.ietf.org/doc",n="https://datatracker.ietf.org/ipr/search",c="https://www.rfc-editor.org/info",l=a.doc_id.toLowerCase(),i=a.doc_id.slice(0,3).toLowerCase(),f=a.doc_id.slice(3).replace(/^0+/,""),u={status:"Status",obsoletes:"Obsoletes",obsoleted_by:"Obsoleted By",updates:"Updates",updated_by:"Updated By",see_also:"See Also",errata_url:"Errata"};let h="<dl style='overflow:hidden' id='external-updates'>";["status","obsoletes","obsoleted_by","updates","updated_by","see_also","errata_url"].forEach(e=>{if("status"==e){a[e]=a[e].toLowerCase();var t=a[e].split(" "),o=t.length,w="",p=1;for(let e=0;e<o;e++)p<o?w=w+r(t[e])+" ":w+=r(t[e]),p++;a[e]=w}else if("obsoletes"==e||"obsoleted_by"==e||"updates"==e||"updated_by"==e){var g,m="",b=1;g=a[e].length;for(let t=0;t<g;t++)a[e][t]&&(a[e][t]=String(a[e][t]).toLowerCase(),m=b<g?m+"<a href='"+s+"/rfc/".concat(a[e][t])+"'>"+a[e][t].slice(3)+"</a>, ":m+"<a href='"+s+"/rfc/".concat(a[e][t])+"'>"+a[e][t].slice(3)+"</a>",b++);a[e]=m}else if("see_also"==e){var y,L="",C=1;y=a[e].length;for(let t=0;t<y;t++)if(a[e][t]){a[e][t]=String(a[e][t]);var _=a[e][t].slice(0,3),v=a[e][t].slice(3).replace(/^0+/,"");L=C<y?"RFC"!=_?L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+_+" "+v+"</a>, ":L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+v+"</a>, ":"RFC"!=_?L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+_+" "+v+"</a>":L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+v+"</a>",C++}a[e]=L}else if("errata_url"==e){var R="";R=a[e]?R+"<a href='"+a[e]+"'>Errata exist</a> | <a href='"+d+"/"+l+"'>Datatracker</a>| <a href='"+n+"/?"+i+"="+f+"&submit="+i+"'>IPR</a> | <a href='"+c+"/"+l+"'>Info page</a>":"<a href='"+d+"/"+l+"'>Datatracker</a> | <a href='"+n+"/?"+i+"="+f+"&submit="+i+"'>IPR</a> | <a href='"+c+"/"+l+"'>Info page</a>",a[e]=R}""!=a[e]?"Errata"==u[e]?h+=`<dt>More info:</dt><dd>${a[e]}</dd>`:h+=`<dt>${u[e]}:</dt><dd>${a[e]}</dd>`:"Errata"==u[e]&&(h+=`<dt>More info:</dt><dd>${a[e]}</dd>`)}),h+="</dl>",e.innerHTML=h}catch(e){console.log(e)}else console.log("Could not locate metadata <div> element");function r(e){return e.charAt(0).toUpperCase()+e.slice(1)}}window.removeEventListener("load",addMetadata),window.addEventListener("load",addMetadata);</script>
1199,1200c1213,1214
< <body>
< <script src="https://www.rfc-editor.org/js/metadata.min.js"></script>
---
> <body class="xml2rfc">
> <script src="metadata.min.js"></script>
1317c1331
<             <p id="section-toc.1-1.1.1" class="keepWithNext"><a href="#section-1" class="xref">1</a>.  <a href="#name-introduction" class="xref">Introduction</a></p>
---
>             <p id="section-toc.1-1.1.1" class="keepWithNext"><a href="#section-1" class="auto internal xref">1</a>.  <a href="#name-introduction" class="internal xref">Introduction</a></p>
1320c1334
<                 <p id="section-toc.1-1.1.2.1.1" class="keepWithNext"><a href="#section-1.1" class="xref">1.1</a>.  <a href="#name-terminology" class="xref">Terminology</a></p>
---
>                 <p id="section-toc.1-1.1.2.1.1" class="keepWithNext"><a href="#section-1.1" class="auto internal xref">1.1</a>.  <a href="#name-terminology" class="internal xref">Terminology</a></p>
1325c1339
<             <p id="section-toc.1-1.2.1" class="keepWithNext"><a href="#section-2" class="xref">2</a>.  <a href="#name-compatibility" class="xref">Compatibility</a></p>
---
>             <p id="section-toc.1-1.2.1" class="keepWithNext"><a href="#section-2" class="auto internal xref">2</a>.  <a href="#name-compatibility" class="internal xref">Compatibility</a></p>
1328c1342
<             <p id="section-toc.1-1.3.1"><a href="#section-3" class="xref">3</a>.  <a href="#name-modules" class="xref">Modules</a></p>
---
>             <p id="section-toc.1-1.3.1"><a href="#section-3" class="auto internal xref">3</a>.  <a href="#name-modules" class="internal xref">Modules</a></p>
1331c1345
<             <p id="section-toc.1-1.4.1"><a href="#section-4" class="xref">4</a>.  <a href="#name-encoding" class="xref">Encoding</a></p>
---
>             <p id="section-toc.1-1.4.1"><a href="#section-4" class="auto internal xref">4</a>.  <a href="#name-encoding" class="internal xref">Encoding</a></p>
1334c1348
<                 <p id="section-toc.1-1.4.2.1.1"><a href="#section-4.1" class="xref">4.1</a>.  <a href="#name-charset-parameter" class="xref">Charset Parameter</a></p>
---
>                 <p id="section-toc.1-1.4.2.1.1"><a href="#section-4.1" class="auto internal xref">4.1</a>.  <a href="#name-charset-parameter" class="internal xref">Charset Parameter</a></p>
1337c1351
<                 <p id="section-toc.1-1.4.2.2.1"><a href="#section-4.2" class="xref">4.2</a>.  <a href="#name-character-encoding-scheme-d" class="xref">Character Encoding Scheme Detection</a></p>
---
>                 <p id="section-toc.1-1.4.2.2.1"><a href="#section-4.2" class="auto internal xref">4.2</a>.  <a href="#name-character-encoding-scheme-d" class="internal xref">Character Encoding Scheme Detection</a></p>
1340c1354
<                 <p id="section-toc.1-1.4.2.3.1"><a href="#section-4.3" class="xref">4.3</a>.  <a href="#name-character-encoding-scheme-e" class="xref">Character Encoding Scheme Error Handling</a></p>
---
>                 <p id="section-toc.1-1.4.2.3.1"><a href="#section-4.3" class="auto internal xref">4.3</a>.  <a href="#name-character-encoding-scheme-e" class="internal xref">Character Encoding Scheme Error Handling</a></p>
1345c1359
<             <p id="section-toc.1-1.5.1"><a href="#section-5" class="xref">5</a>.  <a href="#name-security-considerations" class="xref">Security Considerations</a></p>
---
>             <p id="section-toc.1-1.5.1"><a href="#section-5" class="auto internal xref">5</a>.  <a href="#name-security-considerations" class="internal xref">Security Considerations</a></p>
1348c1362
<             <p id="section-toc.1-1.6.1"><a href="#section-6" class="xref">6</a>.  <a href="#name-iana-considerations" class="xref">IANA Considerations</a></p>
---
>             <p id="section-toc.1-1.6.1"><a href="#section-6" class="auto internal xref">6</a>.  <a href="#name-iana-considerations" class="internal xref">IANA Considerations</a></p>
1351c1365
<                 <p id="section-toc.1-1.6.2.1.1"><a href="#section-6.1" class="xref">6.1</a>.  <a href="#name-common-javascript-media-typ" class="xref">Common JavaScript Media Types</a></p>
---
>                 <p id="section-toc.1-1.6.2.1.1"><a href="#section-6.1" class="auto internal xref">6.1</a>.  <a href="#name-common-javascript-media-typ" class="internal xref">Common JavaScript Media Types</a></p>
1354c1368
<                     <p id="section-toc.1-1.6.2.1.2.1.1"><a href="#section-6.1.1" class="xref">6.1.1</a>.  <a href="#name-text-javascript" class="xref">text/javascript</a></p>
---
>                     <p id="section-toc.1-1.6.2.1.2.1.1"><a href="#section-6.1.1" class="auto internal xref">6.1.1</a>.  <a href="#name-text-javascript" class="internal xref">text/javascript</a></p>
1359c1373
<                 <p id="section-toc.1-1.6.2.2.1"><a href="#section-6.2" class="xref">6.2</a>.  <a href="#name-historic-javascript-media-t" class="xref">Historic JavaScript Media Types</a></p>
---
>                 <p id="section-toc.1-1.6.2.2.1"><a href="#section-6.2" class="auto internal xref">6.2</a>.  <a href="#name-historic-javascript-media-t" class="internal xref">Historic JavaScript Media Types</a></p>
1362c1376
<                     <p id="section-toc.1-1.6.2.2.2.1.1"><a href="#section-6.2.1" class="xref">6.2.1</a>.  <a href="#name-text-ecmascript" class="xref">text/ecmascript</a></p>
---
>                     <p id="section-toc.1-1.6.2.2.2.1.1"><a href="#section-6.2.1" class="auto internal xref">6.2.1</a>.  <a href="#name-text-ecmascript" class="internal xref">text/ecmascript</a></p>
1369c1383
<             <p id="section-toc.1-1.7.1"><a href="#section-7" class="xref">7</a>.  <a href="#name-references" class="xref">References</a></p>
---
>             <p id="section-toc.1-1.7.1"><a href="#section-7" class="auto internal xref">7</a>.  <a href="#name-references" class="internal xref">References</a></p>
1372c1386
<                 <p id="section-toc.1-1.7.2.1.1"><a href="#section-7.1" class="xref">7.1</a>.  <a href="#name-normative-references" class="xref">Normative References</a></p>
---
>                 <p id="section-toc.1-1.7.2.1.1"><a href="#section-7.1" class="auto internal xref">7.1</a>.  <a href="#name-normative-references" class="internal xref">Normative References</a></p>
1375c1389
<                 <p id="section-toc.1-1.7.2.2.1"><a href="#section-7.2" class="xref">7.2</a>.  <a href="#name-informative-references" class="xref">Informative References</a></p>
---
>                 <p id="section-toc.1-1.7.2.2.1"><a href="#section-7.2" class="auto internal xref">7.2</a>.  <a href="#name-informative-references" class="internal xref">Informative References</a></p>
1380c1394
<             <p id="section-toc.1-1.8.1"><a href="#appendix-A" class="xref">Appendix A</a>.  <a href="#name-changes-from-rfc-4329" class="xref">Changes from RFC 4329</a></p>
---
>             <p id="section-toc.1-1.8.1"><a href="#appendix-A" class="auto internal xref">Appendix A</a>.  <a href="#name-changes-from-rfc-4329" class="internal xref">Changes from RFC 4329</a></p>
1383c1397
<             <p id="section-toc.1-1.9.1"><a href="#appendix-B" class="xref"></a><a href="#name-acknowledgements" class="xref">Acknowledgements</a></p>
---
>             <p id="section-toc.1-1.9.1"><a href="#appendix-B" class="auto internal xref"></a><a href="#name-acknowledgements" class="internal xref">Acknowledgements</a></p>
1386c1400
<             <p id="section-toc.1-1.10.1"><a href="#appendix-C" class="xref"></a><a href="#name-authors-addresses" class="xref">Authors' Addresses</a></p>
---
>             <p id="section-toc.1-1.10.1"><a href="#appendix-C" class="auto internal xref"></a><a href="#name-authors-addresses" class="internal xref">Authors' Addresses</a></p>
1397,1398c1411,1412
< <p id="section-1-1">This memo describes media types for the JavaScript and ECMAScript programming languages.  Refer to the sections "Introduction" and "Overview" in <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span> for background information on these languages.  This document updates the descriptions and registrations for these media types to reflect existing usage on the Internet, and it provides up-to-date security considerations.<a href="#section-1-1" class="pilcrow">¶</a></p>
< <p id="section-1-2">This document replaces the media type registrations in <span>[<a href="#RFC4329" class="xref">RFC4329</a>]</span> and updates the requirements for implementations using those media types defined in <span>[<a href="#RFC4329" class="xref">RFC4329</a>]</span> based on current existing practices. As a consequence, this document obsoletes <span>[<a href="#RFC4329" class="xref">RFC4329</a>]</span>.<a href="#section-1-2" class="pilcrow">¶</a></p>
---
> <p id="section-1-1">This memo describes media types for the JavaScript and ECMAScript programming languages.  Refer to the sections "Introduction" and "Overview" in <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span> for background information on these languages.  This document updates the descriptions and registrations for these media types to reflect existing usage on the Internet, and it provides up-to-date security considerations.<a href="#section-1-1" class="pilcrow">¶</a></p>
> <p id="section-1-2">This document replaces the media type registrations in <span>[<a href="#RFC4329" class="cite xref">RFC4329</a>]</span> and updates the requirements for implementations using those media types defined in <span>[<a href="#RFC4329" class="cite xref">RFC4329</a>]</span> based on current existing practices. As a consequence, this document obsoletes <span>[<a href="#RFC4329" class="cite xref">RFC4329</a>]</span>.<a href="#section-1-2" class="pilcrow">¶</a></p>
1411c1425
< <span>[<a href="#RFC2119" class="xref">RFC2119</a>]</span> <span>[<a href="#RFC8174" class="xref">RFC8174</a>]</span> when, and only
---
> <span>[<a href="#RFC2119" class="cite xref">RFC2119</a>]</span> <span>[<a href="#RFC8174" class="cite xref">RFC8174</a>]</span> when, and only
1424c1438
< <p id="section-2-2">The types defined in this document are applicable to scripts written in <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span>. New editions of <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span> are subjected to strong obligations of backward compatibility, imposed by the standardization process of Ecma International's Technical Committee 39 (TC39). As a result, JavaScript code based on an earlier edition is generally compatible with a JavaScript engine adhering to a later edition. The few exceptions to this are documented in <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span> in the section "Additions and Changes That Introduce Incompatibilities with Prior Editions". JavaScript developers commonly use feature detection to ensure that modern JavaScript features are only used when available in the current environment. Later editions of <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span> are not directly addressed in this document, although it is expected that implementations will behave as if applicability were extended to them. This document does not address other extensions to <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span> or scripts written in other languages.<a href="#section-2-2" class="pilcrow">¶</a></p>
---
> <p id="section-2-2">The types defined in this document are applicable to scripts written in <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span>. New editions of <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span> are subjected to strong obligations of backward compatibility, imposed by the standardization process of Ecma International's Technical Committee 39 (TC39). As a result, JavaScript code based on an earlier edition is generally compatible with a JavaScript engine adhering to a later edition. The few exceptions to this are documented in <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span> in the section "Additions and Changes That Introduce Incompatibilities with Prior Editions". JavaScript developers commonly use feature detection to ensure that modern JavaScript features are only used when available in the current environment. Later editions of <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span> are not directly addressed in this document, although it is expected that implementations will behave as if applicability were extended to them. This document does not address other extensions to <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span> or scripts written in other languages.<a href="#section-2-2" class="pilcrow">¶</a></p>
1426,1427c1440,1441
< <p id="section-2-4">This document does not define how fragment identifiers in resource identifiers <span>[<a href="#RFC3986" class="xref">RFC3986</a>]</span> <span>[<a href="#RFC3987" class="xref">RFC3987</a>]</span> for documents labeled with one of the media types defined in this document are resolved.  An update of this document may define processing of fragment identifiers.<a href="#section-2-4" class="pilcrow">¶</a></p>
< <p id="section-2-5">Note that this use of the "text" media type tree willfully does not align with its original intent per <span>[<a href="#RFC2045" class="xref">RFC2045</a>]</span>. The reason for this is historical. <span>[<a href="#RFC4329" class="xref">RFC4329</a>]</span> registered both the text/* and application/* types, marking the text/* types obsolete. This was done to encourage people toward application/*, matching the guidance in <span>[<a href="#RFC4288" class="xref">RFC4288</a>]</span>, the predecessor to <span>[<a href="#RFC6838" class="xref">RFC6838</a>]</span>. Since then, however, the industry widely adopted text/* anyway. The definitions in this document reflect the current state of implementation across the JavaScript ecosystem, in web browsers and other environments such as Node.js alike, in order to guarantee backward compatibility with existing applications as much as possible. Future registrations should not view this as a repeatable precedent.<a href="#section-2-5" class="pilcrow">¶</a></p>
---
> <p id="section-2-4">This document does not define how fragment identifiers in resource identifiers <span>[<a href="#RFC3986" class="cite xref">RFC3986</a>]</span> <span>[<a href="#RFC3987" class="cite xref">RFC3987</a>]</span> for documents labeled with one of the media types defined in this document are resolved.  An update of this document may define processing of fragment identifiers.<a href="#section-2-4" class="pilcrow">¶</a></p>
> <p id="section-2-5">Note that this use of the "text" media type tree willfully does not align with its original intent per <span>[<a href="#RFC2045" class="cite xref">RFC2045</a>]</span>. The reason for this is historical. <span>[<a href="#RFC4329" class="cite xref">RFC4329</a>]</span> registered both the text/* and application/* types, marking the text/* types obsolete. This was done to encourage people toward application/*, matching the guidance in <span>[<a href="#RFC4288" class="cite xref">RFC4288</a>]</span>, the predecessor to <span>[<a href="#RFC6838" class="cite xref">RFC6838</a>]</span>. Since then, however, the industry widely adopted text/* anyway. The definitions in this document reflect the current state of implementation across the JavaScript ecosystem, in web browsers and other environments such as Node.js alike, in order to guarantee backward compatibility with existing applications as much as possible. Future registrations should not view this as a repeatable precedent.<a href="#section-2-5" class="pilcrow">¶</a></p>
1435c1449
< <p id="section-3-1">In order to formalize support for modular programs, <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span> (starting with the 6th Edition) defines two top-level goal symbols (or roots to the abstract syntax tree) for the ECMAScript grammar: Module and Script.  The Script goal represents the original structure where the code executes in the global scope, while the Module goal represents the module system built into ECMAScript starting with the 6th Edition.  See the section "ECMAScript Language: Scripts and Modules" in <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span> for details.<a href="#section-3-1" class="pilcrow">¶</a></p>
---
> <p id="section-3-1">In order to formalize support for modular programs, <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span> (starting with the 6th Edition) defines two top-level goal symbols (or roots to the abstract syntax tree) for the ECMAScript grammar: Module and Script.  The Script goal represents the original structure where the code executes in the global scope, while the Module goal represents the module system built into ECMAScript starting with the 6th Edition.  See the section "ECMAScript Language: Scripts and Modules" in <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span> for details.<a href="#section-3-1" class="pilcrow">¶</a></p>
1437c1451
< <p id="section-3-3">Ecma International's Technical Committee 39 (TC39), the standards body in charge of ECMAScript, has determined that media types are outside of their scope of work <span>[<a href="#TC39-MIME-ISSUE" class="xref">TC39-MIME-ISSUE</a>]</span>.<a href="#section-3-3" class="pilcrow">¶</a></p>
---
> <p id="section-3-3">Ecma International's Technical Committee 39 (TC39), the standards body in charge of ECMAScript, has determined that media types are outside of their scope of work <span>[<a href="#TC39-MIME-ISSUE" class="cite xref">TC39-MIME-ISSUE</a>]</span>.<a href="#section-3-3" class="pilcrow">¶</a></p>
1446c1460
< <p id="section-4-1">Refer to <span>[<a href="#RFC6365" class="xref">RFC6365</a>]</span> for a discussion of terminology used in this section.  Source text (as defined in the section "Source Text" in <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span>) can be binary source text.  Binary source text is a textual data object that represents source text encoded using a character encoding scheme.  A textual data object is a whole text protocol message or a whole text document, or a part of it, that is treated separately for purposes of external storage and retrieval.  An implementation's internal representation of source text is not considered binary source text.<a href="#section-4-1" class="pilcrow">¶</a></p>
---
> <p id="section-4-1">Refer to <span>[<a href="#RFC6365" class="cite xref">RFC6365</a>]</span> for a discussion of terminology used in this section.  Source text (as defined in the section "Source Text" in <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span>) can be binary source text.  Binary source text is a textual data object that represents source text encoded using a character encoding scheme.  A textual data object is a whole text protocol message or a whole text document, or a part of it, that is treated separately for purposes of external storage and retrieval.  An implementation's internal representation of source text is not considered binary source text.<a href="#section-4-1" class="pilcrow">¶</a></p>
1448c1462
< <p id="section-4-3">In order to ensure interoperability and align with widespread implementation practices, the charset parameter is optional rather than required, despite the recommendation in <span><a href="#RFC6838" class="xref">BCP 13</a> [<a href="#RFC6838" class="xref">RFC6838</a>]</span> for text/* types.<a href="#section-4-3" class="pilcrow">¶</a></p>
---
> <p id="section-4-3">In order to ensure interoperability and align with widespread implementation practices, the charset parameter is optional rather than required, despite the recommendation in <span><a href="#RFC6838" class="internal xref">BCP 13</a> [<a href="#RFC6838" class="cite xref">RFC6838</a>]</span> for text/* types.<a href="#section-4-3" class="pilcrow">¶</a></p>
1450c1464
< <p id="section-4-5">Implementations that support binary source text <span class="bcp14">MUST</span> support binary source text encoded using the UTF-8 <span>[<a href="#RFC3629" class="xref">RFC3629</a>]</span> character encoding scheme.  Module goal sources <span class="bcp14">MUST</span> be encoded as UTF-8; all other encodings will fail.  Source goal sources <span class="bcp14">SHOULD</span> be encoded as UTF-8; other character encoding schemes <span class="bcp14">MAY</span> be supported but are discouraged.  Whether U+FEFF is processed as a Byte Order Mark (BOM) signature or not depends on the host environment and is not defined by this document.<a href="#section-4-5" class="pilcrow">¶</a></p>
---
> <p id="section-4-5">Implementations that support binary source text <span class="bcp14">MUST</span> support binary source text encoded using the UTF-8 <span>[<a href="#RFC3629" class="cite xref">RFC3629</a>]</span> character encoding scheme.  Module goal sources <span class="bcp14">MUST</span> be encoded as UTF-8; all other encodings will fail.  Source goal sources <span class="bcp14">SHOULD</span> be encoded as UTF-8; other character encoding schemes <span class="bcp14">MAY</span> be supported but are discouraged.  Whether U+FEFF is processed as a Byte Order Mark (BOM) signature or not depends on the host environment and is not defined by this document.<a href="#section-4-5" class="pilcrow">¶</a></p>
1456c1470
< <p id="section-4.1-1">The charset parameter provides a means to specify the character encoding scheme of binary source text.  If present, the value of the charset parameter <span class="bcp14">MUST</span> be a registered charset <span>[<a href="#CHARSETS" class="xref">CHARSETS</a>]</span> and is considered valid if it matches the mime-charset production defined in <span><a href="https://www.rfc-editor.org/rfc/rfc2978#section-2.3" class="relref">Section 2.3</a> of [<a href="#RFC2978" class="xref">RFC2978</a>]</span>.<a href="#section-4.1-1" class="pilcrow">¶</a></p>
---
> <p id="section-4.1-1">The charset parameter provides a means to specify the character encoding scheme of binary source text.  If present, the value of the charset parameter <span class="bcp14">MUST</span> be a registered charset <span>[<a href="#CHARSETS" class="cite xref">CHARSETS</a>]</span> and is considered valid if it matches the mime-charset production defined in <span><a href="https://rfc-editor.org/rfc/rfc2978#section-2.3" class="relref">Section 2.3</a> of [<a href="#RFC2978" class="cite xref">RFC2978</a>]</span>.<a href="#section-4.1-1" class="pilcrow">¶</a></p>
1510c1524
< <p id="section-4.3-1">Binary source text that is not properly encoded for the determined character encoding can pose a security risk, as discussed in <a href="#security-considerations" class="xref">Section 5</a>.  That said, because of the varied and complex environments scripts are executed in, most of the error handling specifics are left to the processors.  The following are broad guidelines that processors follow.<a href="#section-4.3-1" class="pilcrow">¶</a></p>
---
> <p id="section-4.3-1">Binary source text that is not properly encoded for the determined character encoding can pose a security risk, as discussed in <a href="#security-considerations" class="auto internal xref">Section 5</a>.  That said, because of the varied and complex environments scripts are executed in, most of the error handling specifics are left to the processors.  The following are broad guidelines that processors follow.<a href="#section-4.3-1" class="pilcrow">¶</a></p>
1522,1524c1536,1538
< <p id="section-5-1">Refer to <span>[<a href="#RFC3552" class="xref">RFC3552</a>]</span> for a discussion of terminology used in this section.  Examples in this section and discussions of interactions of host environments with scripts, modules, and extensions to <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span> are to be understood as non-exhaustive and of a purely illustrative nature.<a href="#section-5-1" class="pilcrow">¶</a></p>
< <p id="section-5-2">The programming language defined in <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span> is not intended to be computationally self-sufficient; rather, it is expected that the computational environment provides facilities to programs to enable specific functionality.  Such facilities constitute unknown factors and are thus not defined by this document.<a href="#section-5-2" class="pilcrow">¶</a></p>
< <p id="section-5-3">Derived programming languages are permitted to include additional functionality that is not described in <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span>; such functionality constitutes an unknown factor and is thus not defined by this document.  In particular, extensions to <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span> defined for the JavaScript programming language are not discussed in this document.<a href="#section-5-3" class="pilcrow">¶</a></p>
---
> <p id="section-5-1">Refer to <span>[<a href="#RFC3552" class="cite xref">RFC3552</a>]</span> for a discussion of terminology used in this section.  Examples in this section and discussions of interactions of host environments with scripts, modules, and extensions to <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span> are to be understood as non-exhaustive and of a purely illustrative nature.<a href="#section-5-1" class="pilcrow">¶</a></p>
> <p id="section-5-2">The programming language defined in <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span> is not intended to be computationally self-sufficient; rather, it is expected that the computational environment provides facilities to programs to enable specific functionality.  Such facilities constitute unknown factors and are thus not defined by this document.<a href="#section-5-2" class="pilcrow">¶</a></p>
> <p id="section-5-3">Derived programming languages are permitted to include additional functionality that is not described in <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span>; such functionality constitutes an unknown factor and is thus not defined by this document.  In particular, extensions to <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span> defined for the JavaScript programming language are not discussed in this document.<a href="#section-5-3" class="pilcrow">¶</a></p>
1526c1540
< <p id="section-5-5">Module scripts in ECMAScript can request the fetching and processing of additional scripts; this is called "importing". Implementations that support modules need to process imported sources in the same way as scripts. See the section "ECMAScript Language: Scripts and Modules" in <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span> for details. Further, there may be additional privacy and security concerns, depending on the location(s) the original script and its imported modules are obtained from. For instance, a script obtained from "host-a.example" could request to import a script from "host-b.example", which could expose information about the executing environment (e.g., IP address) to "host-b.example".<a href="#section-5-5" class="pilcrow">¶</a></p>
---
> <p id="section-5-5">Module scripts in ECMAScript can request the fetching and processing of additional scripts; this is called "importing". Implementations that support modules need to process imported sources in the same way as scripts. See the section "ECMAScript Language: Scripts and Modules" in <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span> for details. Further, there may be additional privacy and security concerns, depending on the location(s) the original script and its imported modules are obtained from. For instance, a script obtained from "host-a.example" could request to import a script from "host-b.example", which could expose information about the executing environment (e.g., IP address) to "host-b.example".<a href="#section-5-5" class="pilcrow">¶</a></p>
1528c1542
< <p id="section-5-7">For example, scripts embedded in application/xhtml+xml <span>[<a href="#RFC3236" class="xref">RFC3236</a>]</span> documents could be enabled through the host environment to manipulate the document instance, which could cause the retrieval of remote resources; security considerations regarding retrieval of remote resources of the embedding document would apply in this case.<a href="#section-5-7" class="pilcrow">¶</a></p>
---
> <p id="section-5-7">For example, scripts embedded in application/xhtml+xml <span>[<a href="#RFC3236" class="cite xref">RFC3236</a>]</span> documents could be enabled through the host environment to manipulate the document instance, which could cause the retrieval of remote resources; security considerations regarding retrieval of remote resources of the embedding document would apply in this case.<a href="#section-5-7" class="pilcrow">¶</a></p>
1530,1531c1544,1545
< <p id="section-5-9">The programming language defined in <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span> does include facilities to loop, cause computationally complex operations, or consume large amounts of memory; this includes, but is not limited to, facilities that allow dynamically generated source text to be executed (e.g., the eval() function); uncontrolled execution of such features can cause denial of service, which implementations <span class="bcp14">MUST</span> protect against.<a href="#section-5-9" class="pilcrow">¶</a></p>
< <p id="section-5-10">With the addition of SharedArrayBuffer objects in ECMAScript version 8, it could be possible to implement a high-resolution timer, which could lead to certain types of timing and side-channel attacks (e.g., <span>[<a href="#SPECTRE" class="xref">SPECTRE</a>]</span>).  Implementations can take steps to mitigate this concern, such as disabling or removing support for SharedArrayBuffer objects, or can take additional steps to ensure that this shared memory is only accessible between execution contexts that have some form of mutual trust.<a href="#section-5-10" class="pilcrow">¶</a></p>
---
> <p id="section-5-9">The programming language defined in <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span> does include facilities to loop, cause computationally complex operations, or consume large amounts of memory; this includes, but is not limited to, facilities that allow dynamically generated source text to be executed (e.g., the eval() function); uncontrolled execution of such features can cause denial of service, which implementations <span class="bcp14">MUST</span> protect against.<a href="#section-5-9" class="pilcrow">¶</a></p>
> <p id="section-5-10">With the addition of SharedArrayBuffer objects in ECMAScript version 8, it could be possible to implement a high-resolution timer, which could lead to certain types of timing and side-channel attacks (e.g., <span>[<a href="#SPECTRE" class="cite xref">SPECTRE</a>]</span>).  Implementations can take steps to mitigate this concern, such as disabling or removing support for SharedArrayBuffer objects, or can take additional steps to ensure that this shared memory is only accessible between execution contexts that have some form of mutual trust.<a href="#section-5-10" class="pilcrow">¶</a></p>
1534,1537c1548,1551
< <p id="section-5-13">Implementations are required to support the UTF-8 character encoding scheme; the security considerations of <span>[<a href="#RFC3629" class="xref">RFC3629</a>]</span> apply.  Additional character encoding schemes may be supported; support for such schemes is subject to the security considerations of those schemes.<a href="#section-5-13" class="pilcrow">¶</a></p>
< <p id="section-5-14">Source text is expected to be in Unicode Normalization Form C. Scripts and implementations <span class="bcp14">MUST</span> consider security implications of unnormalized source text and data.  For a detailed discussion of such implications, refer to the security considerations in <span>[<a href="#RFC3629" class="xref">RFC3629</a>]</span>.<a href="#section-5-14" class="pilcrow">¶</a></p>
< <p id="section-5-15">Scripts can be executed in an environment that is vulnerable to code injection attacks.  For example, a Common Gateway Interface (CGI) script <span>[<a href="#RFC3875" class="xref">RFC3875</a>]</span> echoing user input could allow the inclusion of untrusted scripts that could be executed in an otherwise trusted environment.  This threat scenario is subject to security considerations that are out of the scope of this document.<a href="#section-5-15" class="pilcrow">¶</a></p>
< <p id="section-5-16">The "data" resource identifier scheme <span>[<a href="#RFC2397" class="xref">RFC2397</a>]</span>, in combination with the types defined in this document, could be used to cause execution of untrusted scripts through the inclusion of untrusted resource identifiers in otherwise trusted content.  Security considerations of <span>[<a href="#RFC2397" class="xref">RFC2397</a>]</span> apply.<a href="#section-5-16" class="pilcrow">¶</a></p>
---
> <p id="section-5-13">Implementations are required to support the UTF-8 character encoding scheme; the security considerations of <span>[<a href="#RFC3629" class="cite xref">RFC3629</a>]</span> apply.  Additional character encoding schemes may be supported; support for such schemes is subject to the security considerations of those schemes.<a href="#section-5-13" class="pilcrow">¶</a></p>
> <p id="section-5-14">Source text is expected to be in Unicode Normalization Form C. Scripts and implementations <span class="bcp14">MUST</span> consider security implications of unnormalized source text and data.  For a detailed discussion of such implications, refer to the security considerations in <span>[<a href="#RFC3629" class="cite xref">RFC3629</a>]</span>.<a href="#section-5-14" class="pilcrow">¶</a></p>
> <p id="section-5-15">Scripts can be executed in an environment that is vulnerable to code injection attacks.  For example, a Common Gateway Interface (CGI) script <span>[<a href="#RFC3875" class="cite xref">RFC3875</a>]</span> echoing user input could allow the inclusion of untrusted scripts that could be executed in an otherwise trusted environment.  This threat scenario is subject to security considerations that are out of the scope of this document.<a href="#section-5-15" class="pilcrow">¶</a></p>
> <p id="section-5-16">The "data" resource identifier scheme <span>[<a href="#RFC2397" class="cite xref">RFC2397</a>]</span>, in combination with the types defined in this document, could be used to cause execution of untrusted scripts through the inclusion of untrusted resource identifiers in otherwise trusted content.  Security considerations of <span>[<a href="#RFC2397" class="cite xref">RFC2397</a>]</span> apply.<a href="#section-5-16" class="pilcrow">¶</a></p>
1547,1548c1561,1562
< <p id="section-6-2">For both categories, the "Published specification" entry for the media types is updated to reference <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span>. In addition, a new file extension of .mjs has been added to the list of file extensions with the restriction that contents should be parsed using the Module goal. Finally, the <span>[<a href="#HTML" class="xref">HTML</a>]</span> specification uses "text/javascript" as the default media type of ECMAScript when preparing script tags; therefore, "text/javascript" intended usage has been moved from OBSOLETE to COMMON.<a href="#section-6-2" class="pilcrow">¶</a></p>
< <p id="section-6-3">These changes have been reflected in the IANA "Media Types" registry in accordance with <span>[<a href="#RFC6838" class="xref">RFC6838</a>]</span>. All registrations will point to this document as the reference. The outdated note stating that the "text/javascript" media type has been "OBSOLETED in favor of application/javascript" has been removed. The outdated note stating that the "text/ecmascript" media type has been "OBSOLETED in favor of application/ecmascript" has been removed. IANA has added the note "OBSOLETED in favor of text/javascript" to all registrations except "text/javascript"; that is, this note has been added to the "text/ecmascript", "application/javascript", and "application/ecmascript" registrations.<a href="#section-6-3" class="pilcrow">¶</a></p>
---
> <p id="section-6-2">For both categories, the "Published specification" entry for the media types is updated to reference <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span>. In addition, a new file extension of .mjs has been added to the list of file extensions with the restriction that contents should be parsed using the Module goal. Finally, the <span>[<a href="#HTML" class="cite xref">HTML</a>]</span> specification uses "text/javascript" as the default media type of ECMAScript when preparing script tags; therefore, "text/javascript" intended usage has been moved from OBSOLETE to COMMON.<a href="#section-6-2" class="pilcrow">¶</a></p>
> <p id="section-6-3">These changes have been reflected in the IANA "Media Types" registry in accordance with <span>[<a href="#RFC6838" class="cite xref">RFC6838</a>]</span>. All registrations will point to this document as the reference. The outdated note stating that the "text/javascript" media type has been "OBSOLETED in favor of application/javascript" has been removed. The outdated note stating that the "text/ecmascript" media type has been "OBSOLETED in favor of application/ecmascript" has been removed. IANA has added the note "OBSOLETED in favor of text/javascript" to all registrations except "text/javascript"; that is, this note has been added to the "text/ecmascript", "application/javascript", and "application/ecmascript" registrations.<a href="#section-6-3" class="pilcrow">¶</a></p>
1560c1574
< <p id="section-6-6">Note that these are grandfathered media types registered as per <span><a href="https://www.rfc-editor.org/rfc/rfc6838#appendix-A" class="relref">Appendix A</a> of [<a href="#RFC6838" class="xref">RFC6838</a>]</span>. These registrations predate <span><a href="#RFC6648" class="xref">BCP 178</a> [<a href="#RFC6648" class="xref">RFC6648</a>]</span>, which they violate, and are only included in this document for backward compatibility.<a href="#section-6-6" class="pilcrow">¶</a></p>
---
> <p id="section-6-6">Note that these are grandfathered media types registered as per <span><a href="https://rfc-editor.org/rfc/rfc6838#appendix-A" class="relref">Appendix A</a> of [<a href="#RFC6838" class="cite xref">RFC6838</a>]</span>. These registrations predate <span><a href="#RFC6648" class="internal xref">BCP 178</a> [<a href="#RFC6648" class="cite xref">RFC6648</a>]</span>, which they violate, and are only included in this document for backward compatibility.<a href="#section-6-6" class="pilcrow">¶</a></p>
1593c1607
<               charset. See <a href="#charset-parameter" class="xref">Section 4.1</a> of RFC 9239.<a href="#section-6.1.1-1.8" class="pilcrow">¶</a>
---
>               charset. See <a href="#charset-parameter" class="auto internal xref">Section 4.1</a> of RFC 9239.<a href="#section-6.1.1-1.8" class="pilcrow">¶</a>
1605c1619
<               See <a href="#security-considerations" class="xref">Section 5</a> of RFC 9239.<a href="#section-6.1.1-1.12" class="pilcrow">¶</a>
---
>               See <a href="#security-considerations" class="auto internal xref">Section 5</a> of RFC 9239.<a href="#section-6.1.1-1.12" class="pilcrow">¶</a>
1611c1625
<               It is expected that implementations will behave as if this registration applies to later editions of <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span>, and its published specification references may be updated accordingly from time to time. Although this expectation is unusual among media type registrations, it matches widespread industry conventions. See <a href="#compatibility" class="xref">Section 2</a> of RFC 9239.<a href="#section-6.1.1-1.14" class="pilcrow">¶</a>
---
>               It is expected that implementations will behave as if this registration applies to later editions of <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span>, and its published specification references may be updated accordingly from time to time. Although this expectation is unusual among media type registrations, it matches widespread industry conventions. See <a href="#compatibility" class="auto internal xref">Section 2</a> of RFC 9239.<a href="#section-6.1.1-1.14" class="pilcrow">¶</a>
1617c1631
<               <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span><a href="#section-6.1.1-1.16" class="pilcrow">¶</a>
---
>               <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span><a href="#section-6.1.1-1.16" class="pilcrow">¶</a>
1663c1677
<               See the Authors' Addresses sections of RFC 9239 and <span>[<a href="#RFC4329" class="xref">RFC4329</a>]</span>.<a href="#section-6.1.1-3.2" class="pilcrow">¶</a>
---
>               See the Authors' Addresses sections of RFC 9239 and <span>[<a href="#RFC4329" class="cite xref">RFC4329</a>]</span>.<a href="#section-6.1.1-3.2" class="pilcrow">¶</a>
1675c1689
<               The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span>.<a href="#section-6.1.1-3.6" class="pilcrow">¶</a>
---
>               The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span>.<a href="#section-6.1.1-3.6" class="pilcrow">¶</a>
1681c1695
<               See the Authors' Addresses sections of RFC 9239 and <span>[<a href="#RFC4329" class="xref">RFC4329</a>]</span>.<a href="#section-6.1.1-3.8" class="pilcrow">¶</a>
---
>               See the Authors' Addresses sections of RFC 9239 and <span>[<a href="#RFC4329" class="cite xref">RFC4329</a>]</span>.<a href="#section-6.1.1-3.8" class="pilcrow">¶</a>
1728c1742
<               charset. See <a href="#charset-parameter" class="xref">Section 4.1</a> of RFC 9239.<a href="#section-6.2.1-1.8" class="pilcrow">¶</a>
---
>               charset. See <a href="#charset-parameter" class="auto internal xref">Section 4.1</a> of RFC 9239.<a href="#section-6.2.1-1.8" class="pilcrow">¶</a>
1740c1754
<               See <a href="#security-considerations" class="xref">Section 5</a> of RFC 9239.<a href="#section-6.2.1-1.12" class="pilcrow">¶</a>
---
>               See <a href="#security-considerations" class="auto internal xref">Section 5</a> of RFC 9239.<a href="#section-6.2.1-1.12" class="pilcrow">¶</a>
1746c1760
<               It is expected that implementations will behave as if this registration applies to later editions of <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span>, and its published specification references may be updated accordingly from time to time. Although this expectation is unusual among media type registrations, it matches widespread industry conventions. See <a href="#compatibility" class="xref">Section 2</a> of RFC 9239.<a href="#section-6.2.1-1.14" class="pilcrow">¶</a>
---
>               It is expected that implementations will behave as if this registration applies to later editions of <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span>, and its published specification references may be updated accordingly from time to time. Although this expectation is unusual among media type registrations, it matches widespread industry conventions. See <a href="#compatibility" class="auto internal xref">Section 2</a> of RFC 9239.<a href="#section-6.2.1-1.14" class="pilcrow">¶</a>
1752c1766
<               <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span><a href="#section-6.2.1-1.16" class="pilcrow">¶</a>
---
>               <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span><a href="#section-6.2.1-1.16" class="pilcrow">¶</a>
1798c1812
<               See the Authors' Addresses sections of RFC 9239 and <span>[<a href="#RFC4329" class="xref">RFC4329</a>]</span>.<a href="#section-6.2.1-3.2" class="pilcrow">¶</a>
---
>               See the Authors' Addresses sections of RFC 9239 and <span>[<a href="#RFC4329" class="cite xref">RFC4329</a>]</span>.<a href="#section-6.2.1-3.2" class="pilcrow">¶</a>
1810c1824
<               This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <span>[<a href="#ECMA-262" class="xref">ECMA-262</a>]</span>.<a href="#section-6.2.1-3.6" class="pilcrow">¶</a>
---
>               This media type is obsolete; current implementations should use text/javascript as the only JavaScript/ECMAScript media type. The .mjs file extension signals that the file represents a JavaScript module. Execution environments that rely on file extensions to determine how to process inputs parse .mjs files using the Module grammar of <span>[<a href="#ECMA-262" class="cite xref">ECMA-262</a>]</span>.<a href="#section-6.2.1-3.6" class="pilcrow">¶</a>
1816c1830
<               See the Authors' Addresses sections of RFC 9239 and <span>[<a href="#RFC4329" class="xref">RFC4329</a>]</span>.<a href="#section-6.2.1-3.8" class="pilcrow">¶</a>
---
>               See the Authors' Addresses sections of RFC 9239 and <span>[<a href="#RFC4329" class="cite xref">RFC4329</a>]</span>.<a href="#section-6.2.1-3.8" class="pilcrow">¶</a>
