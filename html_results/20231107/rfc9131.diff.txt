14c14
< <meta content="xml2rfc 3.10.0" name="generator">
---
> <meta content="xml2rfc 3.18.2" name="generator">
21,38c21,34
<   xml2rfc 3.10.0
<     Python 3.6.10
<     appdirs 1.4.4
<     ConfigArgParse 1.2.3
<     google-i18n-address 2.3.5
<     html5lib 1.0.1
<     intervaltree 3.0.2
<     Jinja2 2.11.2
<     kitchen 1.2.6
<     lxml 4.4.2
<     pycairo 1.19.0
<     pycountry 19.8.18
<     pyflakes 2.1.1
<     PyYAML 5.3.1
<     requests 2.22.0
<     setuptools 40.6.2
<     six 1.14.0
<     WeasyPrint 51
---
>   xml2rfc 3.18.2
>     Python 3.11.6
>     ConfigArgParse 1.7
>     google-i18n-address 3.1.0
>     intervaltree 3.1.0
>     Jinja2 3.1.2
>     lxml 4.9.3
>     platformdirs 3.11.0
>     pycountry 22.3.5
>     PyYAML 6.0.1
>     requests 2.31.0
>     setuptools 65.5.0
>     six 1.16.0
>     wcwidth 0.2.9
40c36
< <link href="rfc9131.xml" rel="alternate" type="application/rfc+xml">
---
> <link href="rfc/rfc9131.xml" rel="alternate" type="application/rfc+xml">
50c46
<   commented changes found necssary during the development of the v3
---
>   commented changes found necessary during the development of the v3
59a56,61
> :root {
>   --font-sans: 'Noto Sans', Arial, Helvetica, sans-serif;
>   --font-serif: 'Noto Serif', 'Times', 'Times New Roman', serif;
>   --font-mono: 'Roboto Mono', Courier, 'Courier New', monospace;
> }
> 
62d63
<   width: extend-to-zoom;
77c78
<   font-family: 'Noto Sans', Arial, Helvetica, sans-serif;
---
>   font-family: var(--font-sans);
79a81
>   overflow-wrap: break-word;
165a168,176
> svg[font-family~="serif" i], svg [font-family~="serif" i] {
>   font-family: var(--font-serif);
> }
> svg[font-family~="sans-serif" i], svg [font-family~="sans-serif" i] {
>   font-family: var(--font-sans);
> }
> svg[font-family~="monospace" i], svg [font-family~="monospace" i] {
>   font-family: var(--font-mono);
> }
180,183d190
<   border: none;
<   /* this isn't optimal, but it's an existence proof.  PrinceXML doesn't
<      support flexbox yet.
<   */
184a192
>   border: none;
252c260,261
< a[href].selfRef {
---
> a[href].selfRef,
> .iref + a[href].internal {
262c271
< tt, code, pre, code {
---
> tt, code, pre {
264c273
<   font-family: 'Roboto Mono', monospace;
---
>   font-family: var(--font-mono);
303a313,315
> blockquote > *:last-child {
>   margin-bottom: 0;
> }
501c513
<   font-family: "Noto Sans",Arial,Helvetica,sans-serif;
---
>   font-family: var(--font-sans);
641d652
< 
663a675,677
>   .breakable pre {
>     break-inside: auto;
>   }
731c745
<   /* The follwing is commented out here, but set appropriately by in code, as
---
>   /* The following is commented out here, but set appropriately by in code, as
831c845
< tt, code, pre, code {
---
> tt, code, pre {
836c850
< pre.sourcecode,
---
> .sourcecode pre,
872c886
< /* Make the alternative author contact informatio look less like just another
---
> /* Make the alternative author contact information look less like just another
1053a1068
>   .artwork > pre,
1068c1083
< and increase the contrast between border and odd row background sligthtly */
---
> and increase the contrast between border and odd row background slightly */
1074a1090,1092
> tr {
>   break-inside: avoid;
> }
1125c1143
< /* Text in compact lists should not get extra bottim margin space,
---
> /* Text in compact lists should not get extra bottom margin space,
1150c1168
< /* Tweak the comact list text */
---
> /* Tweak the compact list text */
1168c1186
< dd > div:first-child > pre.sourcecode,
---
> dd > div.sourcecode:first-child,
1182c1200
< li > p:last-of-type {
---
> li > p:last-of-type:only-child {
1186a1205
> <link href="https://datatracker.ietf.org/doc/draft-ietf-6man-grand-07" rel="prev">
1189c1208
<   <link href="https://datatracker.ietf.org/doc/draft-ietf-6man-grand-07" rel="prev">
---
>   <script type="application/javascript">async function addMetadata(){try{const e=document.styleSheets[0].cssRules;for(let t=0;t<e.length;t++)if(/#identifiers/.exec(e[t].selectorText)){const a=e[t].cssText.replace("#identifiers","#external-updates");document.styleSheets[0].insertRule(a,document.styleSheets[0].cssRules.length)}}catch(e){console.log(e)}const e=document.getElementById("external-metadata");if(e)try{var t,a="",o=function(e){const t=document.getElementsByTagName("meta");for(let a=0;a<t.length;a++)if(t[a].getAttribute("name")===e)return t[a].getAttribute("content");return""}("rfc.number");if(o){t="https://www.rfc-editor.org/rfc/rfc"+o+".json";try{const e=await fetch(t);a=await e.json()}catch(e){t=document.URL.indexOf("html")>=0?document.URL.replace(/html$/,"json"):document.URL+".json";const o=await fetch(t);a=await o.json()}}if(!a)return;e.style.display="block";const s="",d="https://datatracker.ietf.org/doc",n="https://datatracker.ietf.org/ipr/search",c="https://www.rfc-editor.org/info",l=a.doc_id.toLowerCase(),i=a.doc_id.slice(0,3).toLowerCase(),f=a.doc_id.slice(3).replace(/^0+/,""),u={status:"Status",obsoletes:"Obsoletes",obsoleted_by:"Obsoleted By",updates:"Updates",updated_by:"Updated By",see_also:"See Also",errata_url:"Errata"};let h="<dl style='overflow:hidden' id='external-updates'>";["status","obsoletes","obsoleted_by","updates","updated_by","see_also","errata_url"].forEach(e=>{if("status"==e){a[e]=a[e].toLowerCase();var t=a[e].split(" "),o=t.length,w="",p=1;for(let e=0;e<o;e++)p<o?w=w+r(t[e])+" ":w+=r(t[e]),p++;a[e]=w}else if("obsoletes"==e||"obsoleted_by"==e||"updates"==e||"updated_by"==e){var g,m="",b=1;g=a[e].length;for(let t=0;t<g;t++)a[e][t]&&(a[e][t]=String(a[e][t]).toLowerCase(),m=b<g?m+"<a href='"+s+"/rfc/".concat(a[e][t])+"'>"+a[e][t].slice(3)+"</a>, ":m+"<a href='"+s+"/rfc/".concat(a[e][t])+"'>"+a[e][t].slice(3)+"</a>",b++);a[e]=m}else if("see_also"==e){var y,L="",C=1;y=a[e].length;for(let t=0;t<y;t++)if(a[e][t]){a[e][t]=String(a[e][t]);var _=a[e][t].slice(0,3),v=a[e][t].slice(3).replace(/^0+/,"");L=C<y?"RFC"!=_?L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+_+" "+v+"</a>, ":L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+v+"</a>, ":"RFC"!=_?L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+_+" "+v+"</a>":L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+v+"</a>",C++}a[e]=L}else if("errata_url"==e){var R="";R=a[e]?R+"<a href='"+a[e]+"'>Errata exist</a> | <a href='"+d+"/"+l+"'>Datatracker</a>| <a href='"+n+"/?"+i+"="+f+"&submit="+i+"'>IPR</a> | <a href='"+c+"/"+l+"'>Info page</a>":"<a href='"+d+"/"+l+"'>Datatracker</a> | <a href='"+n+"/?"+i+"="+f+"&submit="+i+"'>IPR</a> | <a href='"+c+"/"+l+"'>Info page</a>",a[e]=R}""!=a[e]?"Errata"==u[e]?h+=`<dt>More info:</dt><dd>${a[e]}</dd>`:h+=`<dt>${u[e]}:</dt><dd>${a[e]}</dd>`:"Errata"==u[e]&&(h+=`<dt>More info:</dt><dd>${a[e]}</dd>`)}),h+="</dl>",e.innerHTML=h}catch(e){console.log(e)}else console.log("Could not locate metadata <div> element");function r(e){return e.charAt(0).toUpperCase()+e.slice(1)}}window.removeEventListener("load",addMetadata),window.addEventListener("load",addMetadata);</script>
1191,1192c1210,1211
< <body>
< <script src="https://www.rfc-editor.org/js/metadata.min.js"></script>
---
> <body class="xml2rfc">
> <script src="metadata.min.js"></script>
1286c1305
<             <p id="section-toc.1-1.1.1" class="keepWithNext"><a href="#section-1" class="xref">1</a>.  <a href="#name-introduction" class="xref">Introduction</a></p>
---
>             <p id="section-toc.1-1.1.1" class="keepWithNext"><a href="#section-1" class="auto internal xref">1</a>.  <a href="#name-introduction" class="internal xref">Introduction</a></p>
1289c1308
<                 <p id="section-toc.1-1.1.2.1.1" class="keepWithNext"><a href="#section-1.1" class="xref">1.1</a>.  <a href="#name-requirements-language" class="xref">Requirements Language</a></p>
---
>                 <p id="section-toc.1-1.1.2.1.1" class="keepWithNext"><a href="#section-1.1" class="auto internal xref">1.1</a>.  <a href="#name-requirements-language" class="internal xref">Requirements Language</a></p>
1292c1311
<                 <p id="section-toc.1-1.1.2.2.1" class="keepWithNext"><a href="#section-1.2" class="xref">1.2</a>.  <a href="#name-terminology" class="xref">Terminology</a></p>
---
>                 <p id="section-toc.1-1.1.2.2.1" class="keepWithNext"><a href="#section-1.2" class="auto internal xref">1.2</a>.  <a href="#name-terminology" class="internal xref">Terminology</a></p>
1297c1316
<             <p id="section-toc.1-1.2.1"><a href="#section-2" class="xref">2</a>.  <a href="#name-problem-statement" class="xref">Problem Statement</a></p>
---
>             <p id="section-toc.1-1.2.1"><a href="#section-2" class="auto internal xref">2</a>.  <a href="#name-problem-statement" class="internal xref">Problem Statement</a></p>
1300c1319
<             <p id="section-toc.1-1.3.1"><a href="#section-3" class="xref">3</a>.  <a href="#name-solution-requirements" class="xref">Solution Requirements</a></p>
---
>             <p id="section-toc.1-1.3.1"><a href="#section-3" class="auto internal xref">3</a>.  <a href="#name-solution-requirements" class="internal xref">Solution Requirements</a></p>
1303c1322
<             <p id="section-toc.1-1.4.1"><a href="#section-4" class="xref">4</a>.  <a href="#name-changes-to-neighbor-discove" class="xref">Changes to Neighbor Discovery</a></p>
---
>             <p id="section-toc.1-1.4.1"><a href="#section-4" class="auto internal xref">4</a>.  <a href="#name-changes-to-neighbor-discove" class="internal xref">Changes to Neighbor Discovery</a></p>
1306c1325
<                 <p id="section-toc.1-1.4.2.1.1"><a href="#section-4.1" class="xref">4.1</a>.  <a href="#name-nodes-sending-gratuitous-ne" class="xref">Nodes Sending Gratuitous Neighbor Advertisements</a></p>
---
>                 <p id="section-toc.1-1.4.2.1.1"><a href="#section-4.1" class="auto internal xref">4.1</a>.  <a href="#name-nodes-sending-gratuitous-ne" class="internal xref">Nodes Sending Gratuitous Neighbor Advertisements</a></p>
1309c1328
<                 <p id="section-toc.1-1.4.2.2.1"><a href="#section-4.2" class="xref">4.2</a>.  <a href="#name-routers-creating-cache-entr" class="xref">Routers Creating Cache Entries upon Receiving Unsolicited Neighbor Advertisements</a></p>
---
>                 <p id="section-toc.1-1.4.2.2.1"><a href="#section-4.2" class="auto internal xref">4.2</a>.  <a href="#name-routers-creating-cache-entr" class="internal xref">Routers Creating Cache Entries upon Receiving Unsolicited Neighbor Advertisements</a></p>
1314c1333
<             <p id="section-toc.1-1.5.1"><a href="#section-5" class="xref">5</a>.  <a href="#name-avoiding-disruption" class="xref">Avoiding Disruption</a></p>
---
>             <p id="section-toc.1-1.5.1"><a href="#section-5" class="auto internal xref">5</a>.  <a href="#name-avoiding-disruption" class="internal xref">Avoiding Disruption</a></p>
1317c1336
<                 <p id="section-toc.1-1.5.2.1.1"><a href="#section-5.1" class="xref">5.1</a>.  <a href="#name-neighbor-cache-entry-exists" class="xref">Neighbor Cache Entry Exists in Any State Other Than INCOMPLETE</a></p>
---
>                 <p id="section-toc.1-1.5.2.1.1"><a href="#section-5.1" class="auto internal xref">5.1</a>.  <a href="#name-neighbor-cache-entry-exists" class="internal xref">Neighbor Cache Entry Exists in Any State Other Than INCOMPLETE</a></p>
1320c1339
<                 <p id="section-toc.1-1.5.2.2.1"><a href="#section-5.2" class="xref">5.2</a>.  <a href="#name-neighbor-cache-entry-is-in-" class="xref">Neighbor Cache Entry Is in INCOMPLETE State</a></p>
---
>                 <p id="section-toc.1-1.5.2.2.1"><a href="#section-5.2" class="auto internal xref">5.2</a>.  <a href="#name-neighbor-cache-entry-is-in-" class="internal xref">Neighbor Cache Entry Is in INCOMPLETE State</a></p>
1323c1342
<                 <p id="section-toc.1-1.5.2.3.1"><a href="#section-5.3" class="xref">5.3</a>.  <a href="#name-neighbor-cache-entry-does-n" class="xref">Neighbor Cache Entry Does Not Exist</a></p>
---
>                 <p id="section-toc.1-1.5.2.3.1"><a href="#section-5.3" class="auto internal xref">5.3</a>.  <a href="#name-neighbor-cache-entry-does-n" class="internal xref">Neighbor Cache Entry Does Not Exist</a></p>
1326c1345
<                     <p id="section-toc.1-1.5.2.3.2.1.1"><a href="#section-5.3.1" class="xref">5.3.1</a>.  <a href="#name-the-rightful-owner-is-not-s" class="xref">The Rightful Owner Is Not Sending Packets from the Address</a></p>
---
>                     <p id="section-toc.1-1.5.2.3.2.1.1"><a href="#section-5.3.1" class="auto internal xref">5.3.1</a>.  <a href="#name-the-rightful-owner-is-not-s" class="internal xref">The Rightful Owner Is Not Sending Packets from the Address</a></p>
1329c1348
<                     <p id="section-toc.1-1.5.2.3.2.2.1"><a href="#section-5.3.2" class="xref">5.3.2</a>.  <a href="#name-the-rightful-owner-has-star" class="xref">The Rightful Owner Has Started Sending Packets from the Address</a></p>
---
>                     <p id="section-toc.1-1.5.2.3.2.2.1"><a href="#section-5.3.2" class="auto internal xref">5.3.2</a>.  <a href="#name-the-rightful-owner-has-star" class="internal xref">The Rightful Owner Has Started Sending Packets from the Address</a></p>
1336c1355
<             <p id="section-toc.1-1.6.1"><a href="#section-6" class="xref">6</a>.  <a href="#name-modifications-to-rfc-mandat" class="xref">Modifications to RFC-Mandated Behavior</a></p>
---
>             <p id="section-toc.1-1.6.1"><a href="#section-6" class="auto internal xref">6</a>.  <a href="#name-modifications-to-rfc-mandat" class="internal xref">Modifications to RFC-Mandated Behavior</a></p>
1339c1358
<                 <p id="section-toc.1-1.6.2.1.1"><a href="#section-6.1" class="xref">6.1</a>.  <a href="#name-modification-to-rfc-4861-ne" class="xref">Modification to RFC 4861 (Neighbor Discovery for IP version 6 (IPv6))</a></p>
---
>                 <p id="section-toc.1-1.6.2.1.1"><a href="#section-6.1" class="auto internal xref">6.1</a>.  <a href="#name-modification-to-rfc-4861-ne" class="internal xref">Modification to RFC 4861 (Neighbor Discovery for IP version 6 (IPv6))</a></p>
1342c1361
<                     <p id="section-toc.1-1.6.2.1.2.1.1"><a href="#section-6.1.1" class="xref">6.1.1</a>.  <a href="#name-modification-to-section-725" class="xref">Modification to Section 7.2.5 of RFC 4861</a></p>
---
>                     <p id="section-toc.1-1.6.2.1.2.1.1"><a href="#section-6.1.1" class="auto internal xref">6.1.1</a>.  <a href="#name-modification-to-section-725" class="internal xref">Modification to Section 7.2.5 of RFC 4861</a></p>
1345c1364
<                     <p id="section-toc.1-1.6.2.1.2.2.1"><a href="#section-6.1.2" class="xref">6.1.2</a>.  <a href="#name-modification-to-section-726" class="xref">Modification to Section 7.2.6 of RFC 4861</a></p>
---
>                     <p id="section-toc.1-1.6.2.1.2.2.1"><a href="#section-6.1.2" class="auto internal xref">6.1.2</a>.  <a href="#name-modification-to-section-726" class="internal xref">Modification to Section 7.2.6 of RFC 4861</a></p>
1352c1371
<             <p id="section-toc.1-1.7.1"><a href="#section-7" class="xref">7</a>.  <a href="#name-solution-limitations" class="xref">Solution Limitations</a></p>
---
>             <p id="section-toc.1-1.7.1"><a href="#section-7" class="auto internal xref">7</a>.  <a href="#name-solution-limitations" class="internal xref">Solution Limitations</a></p>
1355c1374
<             <p id="section-toc.1-1.8.1"><a href="#section-8" class="xref">8</a>.  <a href="#name-solutions-considered-but-di" class="xref">Solutions Considered but Discarded</a></p>
---
>             <p id="section-toc.1-1.8.1"><a href="#section-8" class="auto internal xref">8</a>.  <a href="#name-solutions-considered-but-di" class="internal xref">Solutions Considered but Discarded</a></p>
1358c1377
<                 <p id="section-toc.1-1.8.2.1.1"><a href="#section-8.1" class="xref">8.1</a>.  <a href="#name-do-nothing" class="xref">Do Nothing</a></p>
---
>                 <p id="section-toc.1-1.8.2.1.1"><a href="#section-8.1" class="auto internal xref">8.1</a>.  <a href="#name-do-nothing" class="internal xref">Do Nothing</a></p>
1361c1380
<                 <p id="section-toc.1-1.8.2.2.1"><a href="#section-8.2" class="xref">8.2</a>.  <a href="#name-change-to-the-registration-" class="xref">Change to the Registration-Based Neighbor Discovery</a></p>
---
>                 <p id="section-toc.1-1.8.2.2.1"><a href="#section-8.2" class="auto internal xref">8.2</a>.  <a href="#name-change-to-the-registration-" class="internal xref">Change to the Registration-Based Neighbor Discovery</a></p>
1364c1383
<                 <p id="section-toc.1-1.8.2.3.1"><a href="#section-8.3" class="xref">8.3</a>.  <a href="#name-host-sending-ns-to-the-rout" class="xref">Host Sending NS to the Router Address from Its GUA</a></p>
---
>                 <p id="section-toc.1-1.8.2.3.1"><a href="#section-8.3" class="auto internal xref">8.3</a>.  <a href="#name-host-sending-ns-to-the-rout" class="internal xref">Host Sending NS to the Router Address from Its GUA</a></p>
1367c1386
<                 <p id="section-toc.1-1.8.2.4.1"><a href="#section-8.4" class="xref">8.4</a>.  <a href="#name-host-sending-router-solicit" class="xref">Host Sending Router Solicitation from Its GUA</a></p>
---
>                 <p id="section-toc.1-1.8.2.4.1"><a href="#section-8.4" class="auto internal xref">8.4</a>.  <a href="#name-host-sending-router-solicit" class="internal xref">Host Sending Router Solicitation from Its GUA</a></p>
1370c1389
<                 <p id="section-toc.1-1.8.2.5.1"><a href="#section-8.5" class="xref">8.5</a>.  <a href="#name-routers-populating-their-ca" class="xref">Routers Populating Their Caches by Gleaning from Neighbor Discovery Packets</a></p>
---
>                 <p id="section-toc.1-1.8.2.5.1"><a href="#section-8.5" class="auto internal xref">8.5</a>.  <a href="#name-routers-populating-their-ca" class="internal xref">Routers Populating Their Caches by Gleaning from Neighbor Discovery Packets</a></p>
1373c1392
<                 <p id="section-toc.1-1.8.2.6.1"><a href="#section-8.6" class="xref">8.6</a>.  <a href="#name-initiating-host-to-router-c" class="xref">Initiating Host-to-Router Communication</a></p>
---
>                 <p id="section-toc.1-1.8.2.6.1"><a href="#section-8.6" class="auto internal xref">8.6</a>.  <a href="#name-initiating-host-to-router-c" class="internal xref">Initiating Host-to-Router Communication</a></p>
1376c1395
<                 <p id="section-toc.1-1.8.2.7.1"><a href="#section-8.7" class="xref">8.7</a>.  <a href="#name-making-the-probing-logic-on" class="xref">Making the Probing Logic on Hosts More Robust</a></p>
---
>                 <p id="section-toc.1-1.8.2.7.1"><a href="#section-8.7" class="auto internal xref">8.7</a>.  <a href="#name-making-the-probing-logic-on" class="internal xref">Making the Probing Logic on Hosts More Robust</a></p>
1379c1398
<                 <p id="section-toc.1-1.8.2.8.1"><a href="#section-8.8" class="xref">8.8</a>.  <a href="#name-increasing-the-buffer-size-" class="xref">Increasing the Buffer Size on Routers</a></p>
---
>                 <p id="section-toc.1-1.8.2.8.1"><a href="#section-8.8" class="auto internal xref">8.8</a>.  <a href="#name-increasing-the-buffer-size-" class="internal xref">Increasing the Buffer Size on Routers</a></p>
1382c1401
<                 <p id="section-toc.1-1.8.2.9.1"><a href="#section-8.9" class="xref">8.9</a>.  <a href="#name-transit-data-plane-traffic-" class="xref">Transit Data Plane Traffic from a New Address to Trigger Address Resolution</a></p>
---
>                 <p id="section-toc.1-1.8.2.9.1"><a href="#section-8.9" class="auto internal xref">8.9</a>.  <a href="#name-transit-data-plane-traffic-" class="internal xref">Transit Data Plane Traffic from a New Address to Trigger Address Resolution</a></p>
1387c1406
<             <p id="section-toc.1-1.9.1"><a href="#section-9" class="xref">9</a>.  <a href="#name-iana-considerations" class="xref">IANA Considerations</a></p>
---
>             <p id="section-toc.1-1.9.1"><a href="#section-9" class="auto internal xref">9</a>.  <a href="#name-iana-considerations" class="internal xref">IANA Considerations</a></p>
1390c1409
<             <p id="section-toc.1-1.10.1"><a href="#section-10" class="xref">10</a>. <a href="#name-security-considerations" class="xref">Security Considerations</a></p>
---
>             <p id="section-toc.1-1.10.1"><a href="#section-10" class="auto internal xref">10</a>. <a href="#name-security-considerations" class="internal xref">Security Considerations</a></p>
1393c1412
<             <p id="section-toc.1-1.11.1"><a href="#section-11" class="xref">11</a>. <a href="#name-references" class="xref">References</a></p>
---
>             <p id="section-toc.1-1.11.1"><a href="#section-11" class="auto internal xref">11</a>. <a href="#name-references" class="internal xref">References</a></p>
1396c1415
<                 <p id="section-toc.1-1.11.2.1.1"><a href="#section-11.1" class="xref">11.1</a>.  <a href="#name-normative-references" class="xref">Normative References</a></p>
---
>                 <p id="section-toc.1-1.11.2.1.1"><a href="#section-11.1" class="auto internal xref">11.1</a>.  <a href="#name-normative-references" class="internal xref">Normative References</a></p>
1399c1418
<                 <p id="section-toc.1-1.11.2.2.1"><a href="#section-11.2" class="xref">11.2</a>.  <a href="#name-informative-references" class="xref">Informative References</a></p>
---
>                 <p id="section-toc.1-1.11.2.2.1"><a href="#section-11.2" class="auto internal xref">11.2</a>.  <a href="#name-informative-references" class="internal xref">Informative References</a></p>
1404c1423
<             <p id="section-toc.1-1.12.1"><a href="#appendix-A" class="xref"></a><a href="#name-acknowledgements" class="xref">Acknowledgements</a></p>
---
>             <p id="section-toc.1-1.12.1"><a href="#appendix-A" class="auto internal xref"></a><a href="#name-acknowledgements" class="internal xref">Acknowledgements</a></p>
1407c1426
<             <p id="section-toc.1-1.13.1"><a href="#appendix-B" class="xref"></a><a href="#name-authors-address" class="xref">Author's Address</a></p>
---
>             <p id="section-toc.1-1.13.1"><a href="#appendix-B" class="auto internal xref"></a><a href="#name-authors-address" class="internal xref">Author's Address</a></p>
1419c1438
<                           The Neighbor Discovery state machine defined in  <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span> assumes that communications between IPv6 nodes are, in most cases, bidirectional and if a node A is trying to communicate to its neighbor, node B, the return traffic flows could be expected.  So, when node A starts the address resolution process, the target node B would also create an entry containing A's IPv6 and link-layer addresses in its Neighbor Cache. That entry will be used for sending the return traffic to A.<a href="#section-1-1" class="pilcrow">¶</a></p>
---
>                           The Neighbor Discovery state machine defined in  <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span> assumes that communications between IPv6 nodes are, in most cases, bidirectional and if a node A is trying to communicate to its neighbor, node B, the return traffic flows could be expected.  So, when node A starts the address resolution process, the target node B would also create an entry containing A's IPv6 and link-layer addresses in its Neighbor Cache. That entry will be used for sending the return traffic to A.<a href="#section-1-1" class="pilcrow">¶</a></p>
1421c1440
<                           In particular, <span><a href="https://www.rfc-editor.org/rfc/rfc4861#section-7.2.5" class="relref">Section 7.2.5</a> of [<a href="#RFC4861" class="xref">RFC4861</a>]</span> states:<a href="#section-1-2" class="pilcrow">¶</a></p>
---
>                           In particular, <span><a href="https://rfc-editor.org/rfc/rfc4861#section-7.2.5" class="relref">Section 7.2.5</a> of [<a href="#RFC4861" class="cite xref">RFC4861</a>]</span> states:<a href="#section-1-2" class="pilcrow">¶</a></p>
1430c1449
<                                   While waiting for the resolution to complete, routers only keep a very small number of packets in the queue, as recommended in <span><a href="https://www.rfc-editor.org/rfc/rfc4861#section-7.2.2" class="relref">Section 7.2.2</a> of [<a href="#RFC4861" class="xref">RFC4861</a>]</span>.
---
>                                   While waiting for the resolution to complete, routers only keep a very small number of packets in the queue, as recommended in <span><a href="https://rfc-editor.org/rfc/rfc4861#section-7.2.2" class="relref">Section 7.2.2</a> of [<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>.
1434,1435c1453,1454
< This document updates the Neighbor Discovery protocol <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span> to avoid packet loss in the scenario described above.
< <a href="#changes" class="xref">Section 4</a> discusses the changes and analyzes the potential impact, while normative changes to <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span> are specified in <a href="#RFC_UPD" class="xref">Section 6</a>.<a href="#section-1-5" class="pilcrow">¶</a></p>
---
> This document updates the Neighbor Discovery protocol <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span> to avoid packet loss in the scenario described above.
> <a href="#changes" class="auto internal xref">Section 4</a> discusses the changes and analyzes the potential impact, while normative changes to <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span> are specified in <a href="#RFC_UPD" class="auto internal xref">Section 6</a>.<a href="#section-1-5" class="pilcrow">¶</a></p>
1447c1466
<        <span>[<a href="#RFC2119" class="xref">RFC2119</a>]</span> <span>[<a href="#RFC8174" class="xref">RFC8174</a>]</span> when, and only
---
>        <span>[<a href="#RFC2119" class="cite xref">RFC2119</a>]</span> <span>[<a href="#RFC8174" class="cite xref">RFC8174</a>]</span> when, and only
1456c1475
<           <dd style="margin-left: 1.5em" id="section-1.2-1.2">A device that implements IP <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span>.<a href="#section-1.2-1.2" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-1.2-1.2">A device that implements IP <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>.<a href="#section-1.2-1.2" class="pilcrow">¶</a>
1460c1479
<           <dd style="margin-left: 1.5em" id="section-1.2-1.4">Any node that is not a router <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span>.<a href="#section-1.2-1.4" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-1.2-1.4">Any node that is not a router <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>.<a href="#section-1.2-1.4" class="pilcrow">¶</a>
1464c1483
<           <dd style="margin-left: 1.5em" id="section-1.2-1.6">Neighbor Discovery <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span>.<a href="#section-1.2-1.6" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-1.2-1.6">Neighbor Discovery <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>.<a href="#section-1.2-1.6" class="pilcrow">¶</a>
1468c1487
<           <dd style="margin-left: 1.5em" id="section-1.2-1.8">Neighbor Cache <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span>. The Neighbor Cache entry can be in one of five states, as described in <span><a href="https://www.rfc-editor.org/rfc/rfc4861#section-7.3.2" class="relref">Section 7.3.2</a> of [<a href="#RFC4861" class="xref">RFC4861</a>]</span>: INCOMPLETE, REACHABLE, STALE, DELAY, or PROBE.<a href="#section-1.2-1.8" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-1.2-1.8">Neighbor Cache <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>. The Neighbor Cache entry can be in one of five states, as described in <span><a href="https://rfc-editor.org/rfc/rfc4861#section-7.3.2" class="relref">Section 7.3.2</a> of [<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>: INCOMPLETE, REACHABLE, STALE, DELAY, or PROBE.<a href="#section-1.2-1.8" class="pilcrow">¶</a>
1472c1491
<           <dd style="margin-left: 1.5em" id="section-1.2-1.10">IPv6 Stateless Address Autoconfiguration <span>[<a href="#RFC4862" class="xref">RFC4862</a>]</span>.<a href="#section-1.2-1.10" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-1.2-1.10">IPv6 Stateless Address Autoconfiguration <span>[<a href="#RFC4862" class="cite xref">RFC4862</a>]</span>.<a href="#section-1.2-1.10" class="pilcrow">¶</a>
1476c1495
<           <dd style="margin-left: 1.5em" id="section-1.2-1.12">Neighbor Solicitation <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span>.<a href="#section-1.2-1.12" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-1.2-1.12">Neighbor Solicitation <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>.<a href="#section-1.2-1.12" class="pilcrow">¶</a>
1480c1499
<           <dd style="margin-left: 1.5em" id="section-1.2-1.14">Neighbor Advertisement <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span>.<a href="#section-1.2-1.14" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-1.2-1.14">Neighbor Advertisement <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>.<a href="#section-1.2-1.14" class="pilcrow">¶</a>
1484c1503
<           <dd style="margin-left: 1.5em" id="section-1.2-1.16">Router Solicitation <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span>.<a href="#section-1.2-1.16" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-1.2-1.16">Router Solicitation <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>.<a href="#section-1.2-1.16" class="pilcrow">¶</a>
1488c1507
<           <dd style="margin-left: 1.5em" id="section-1.2-1.18">Router Advertisement  <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span>.<a href="#section-1.2-1.18" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-1.2-1.18">Router Advertisement  <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>.<a href="#section-1.2-1.18" class="pilcrow">¶</a>
1492c1511
<           <dd style="margin-left: 1.5em" id="section-1.2-1.20">Source Link-Layer Address Option. An option in the ND packets containing the link-layer address of the sender of the packet <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span>.<a href="#section-1.2-1.20" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-1.2-1.20">Source Link-Layer Address Option. An option in the ND packets containing the link-layer address of the sender of the packet <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>.<a href="#section-1.2-1.20" class="pilcrow">¶</a>
1496c1515
<           <dd style="margin-left: 1.5em" id="section-1.2-1.22">Target Link-Layer Address Option. An option in the ND packets containing the link-layer address of the target <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span>.<a href="#section-1.2-1.22" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-1.2-1.22">Target Link-Layer Address Option. An option in the ND packets containing the link-layer address of the target <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>.<a href="#section-1.2-1.22" class="pilcrow">¶</a>
1500c1519
<           <dd style="margin-left: 1.5em" id="section-1.2-1.24">Global Unicast Address <span>[<a href="#RFC4291" class="xref">RFC4291</a>]</span>.<a href="#section-1.2-1.24" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-1.2-1.24">Global Unicast Address <span>[<a href="#RFC4291" class="cite xref">RFC4291</a>]</span>.<a href="#section-1.2-1.24" class="pilcrow">¶</a>
1504c1523
<           <dd style="margin-left: 1.5em" id="section-1.2-1.26">Duplicate Address Detection <span>[<a href="#RFC4862" class="xref">RFC4862</a>]</span>.<a href="#section-1.2-1.26" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-1.2-1.26">Duplicate Address Detection <span>[<a href="#RFC4862" class="cite xref">RFC4862</a>]</span>.<a href="#section-1.2-1.26" class="pilcrow">¶</a>
1508c1527
<           <dd style="margin-left: 1.5em" id="section-1.2-1.28">An address assigned to an interface whose uniqueness has been verified using DAD and whose use by upper-layer protocols is unrestricted <span>[<a href="#RFC4862" class="xref">RFC4862</a>]</span>. Preferred addresses may be used as the source address of packets sent from the interface.<a href="#section-1.2-1.28" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-1.2-1.28">An address assigned to an interface whose uniqueness has been verified using DAD and whose use by upper-layer protocols is unrestricted <span>[<a href="#RFC4862" class="cite xref">RFC4862</a>]</span>. Preferred addresses may be used as the source address of packets sent from the interface.<a href="#section-1.2-1.28" class="pilcrow">¶</a>
1512c1531
<           <dd style="margin-left: 1.5em" id="section-1.2-1.30">A modification of DAD <span>[<a href="#RFC4429" class="xref">RFC4429</a>]</span>.<a href="#section-1.2-1.30" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-1.2-1.30">A modification of DAD <span>[<a href="#RFC4429" class="cite xref">RFC4429</a>]</span>.<a href="#section-1.2-1.30" class="pilcrow">¶</a>
1544,1545c1563,1564
<                 As the router does not have any cache entry for the host's global address yet, the router starts the Neighbor Discovery process by creating an INCOMPLETE cache entry and then sending a Neighbor Solicitation to the solicited-node multicast address (<span><a href="https://www.rfc-editor.org/rfc/rfc4861#section-7.3.2" class="relref">Section 7.3.2</a> of [<a href="#RFC4861" class="xref">RFC4861</a>]</span>).
<                 As per <span><a href="https://www.rfc-editor.org/rfc/rfc4861#section-7.2.2" class="relref">Section 7.2.2</a> of [<a href="#RFC4861" class="xref">RFC4861</a>]</span>,
---
>                 As the router does not have any cache entry for the host's global address yet, the router starts the Neighbor Discovery process by creating an INCOMPLETE cache entry and then sending a Neighbor Solicitation to the solicited-node multicast address (<span><a href="https://rfc-editor.org/rfc/rfc4861#section-7.3.2" class="relref">Section 7.3.2</a> of [<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>).
>                 As per <span><a href="https://rfc-editor.org/rfc/rfc4861#section-7.2.2" class="relref">Section 7.2.2</a> of [<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>,
1557c1576
<                                   However, the same sequence of events happens when the host starts using a new global address previously unseen by the router, such as a new privacy address <span>[<a href="#RFC8981" class="xref">RFC8981</a>]</span> or if the router's Neighbor Cache has been flushed.<a href="#section-2-3" class="pilcrow">¶</a></p>
---
>                                   However, the same sequence of events happens when the host starts using a new global address previously unseen by the router, such as a new privacy address <span>[<a href="#RFC8981" class="cite xref">RFC8981</a>]</span> or if the router's Neighbor Cache has been flushed.<a href="#section-2-3" class="pilcrow">¶</a></p>
1559c1578
<                           While in dual-stack networks this problem might be hidden by Happy Eyeballs <span>[<a href="#RFC8305" class="xref">RFC8305</a>]</span>, it manifests quite clearly in IPv6-only environments, especially wireless environments, leading to poor user experience and contributing to a negative perception of IPv6-only solutions as unstable and non-deployable.<a href="#section-2-4" class="pilcrow">¶</a></p>
---
>                           While in dual-stack networks this problem might be hidden by Happy Eyeballs <span>[<a href="#RFC8305" class="cite xref">RFC8305</a>]</span>, it manifests quite clearly in IPv6-only environments, especially wireless environments, leading to poor user experience and contributing to a negative perception of IPv6-only solutions as unstable and non-deployable.<a href="#section-2-4" class="pilcrow">¶</a></p>
1584c1603
<                         In addition, the solution must not exacerbate issues described in <span>[<a href="#RFC6583" class="xref">RFC6583</a>]</span> and needs to be compatible with the recommendations provided in <span>[<a href="#RFC6583" class="xref">RFC6583</a>]</span>.<a href="#section-3-3" class="pilcrow">¶</a></p>
---
>                         In addition, the solution must not exacerbate issues described in <span>[<a href="#RFC6583" class="cite xref">RFC6583</a>]</span> and needs to be compatible with the recommendations provided in <span>[<a href="#RFC6583" class="cite xref">RFC6583</a>]</span>.<a href="#section-3-3" class="pilcrow">¶</a></p>
1603c1622
<     Normative changes are specified in <a href="#RFC_UPD" class="xref">Section 6</a>.<a href="#section-4-3" class="pilcrow">¶</a></p>
---
>     Normative changes are specified in <a href="#RFC_UPD" class="auto internal xref">Section 6</a>.<a href="#section-4-3" class="pilcrow">¶</a></p>
1610c1629
<                               <span><a href="https://www.rfc-editor.org/rfc/rfc4861#section-7.2.6" class="relref">Section 7.2.6</a> of [<a href="#RFC4861" class="xref">RFC4861</a>]</span> discusses using unsolicited Neighbor 
---
>                               <span><a href="https://rfc-editor.org/rfc/rfc4861#section-7.2.6" class="relref">Section 7.2.6</a> of [<a href="#RFC4861" class="cite xref">RFC4861</a>]</span> discusses using unsolicited Neighbor 
1615c1634
<                               To minimize potential disruption in the case of duplicate addresses, the node should not set the Override flag for a preferred address and must not set the Override flag if the address is in the Optimistic state <span>[<a href="#RFC4429" class="xref">RFC4429</a>]</span>.<a href="#section-4.1-2" class="pilcrow">¶</a></p>
---
>                               To minimize potential disruption in the case of duplicate addresses, the node should not set the Override flag for a preferred address and must not set the Override flag if the address is in the Optimistic state <span>[<a href="#RFC4429" class="cite xref">RFC4429</a>]</span>.<a href="#section-4.1-2" class="pilcrow">¶</a></p>
1618c1637
<                               If the link-layer devices are performing Multicast Listener Discovery (MLD) snooping <span>[<a href="#RFC4541" class="xref">RFC4541</a>]</span>, then those unsolicited NAs will only be sent to routers on the given network segment/link, instead of being flooded to all nodes.<a href="#section-4.1-3" class="pilcrow">¶</a></p>
---
>                               If the link-layer devices are performing Multicast Listener Discovery (MLD) snooping <span>[<a href="#RFC4541" class="cite xref">RFC4541</a>]</span>, then those unsolicited NAs will only be sent to routers on the given network segment/link, instead of being flooded to all nodes.<a href="#section-4.1-3" class="pilcrow">¶</a></p>
1631c1650
<                               <span><a href="https://www.rfc-editor.org/rfc/rfc4861#section-7.2.5" class="relref">Section 7.2.5</a> of [<a href="#RFC4861" class="xref">RFC4861</a>]</span> states:<a href="#section-4.2-1" class="pilcrow">¶</a></p>
---
>                               <span><a href="https://rfc-editor.org/rfc/rfc4861#section-7.2.5" class="relref">Section 7.2.5</a> of [<a href="#RFC4861" class="cite xref">RFC4861</a>]</span> states:<a href="#section-4.2-1" class="pilcrow">¶</a></p>
1642c1661
<    target") is valid for on-link host-to-host communication but, as discussed in <a href="#Introduction" class="xref">Section 1</a>, 
---
>    target") is valid for on-link host-to-host communication but, as discussed in <a href="#Introduction" class="auto internal xref">Section 1</a>, 
1646,1647c1665,1666
<                                       This document updates <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span> so that routers create a new Neighbor Cache entry upon receiving an unsolicited Neighbor Advertisement for an address that does not already have a Neighbor Cache entry.
<                                               These changes do not modify the router behavior specified in <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span> for the scenario when the corresponding Neighbor Cache entry already exists.<a href="#section-4.2-4" class="pilcrow">¶</a></p>
---
>                                       This document updates <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span> so that routers create a new Neighbor Cache entry upon receiving an unsolicited Neighbor Advertisement for an address that does not already have a Neighbor Cache entry.
>                                               These changes do not modify the router behavior specified in <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span> for the scenario when the corresponding Neighbor Cache entry already exists.<a href="#section-4.2-4" class="pilcrow">¶</a></p>
1659c1678
<                                     If nodes following the recommendations in this document are using the DAD mechanism defined in <span>[<a href="#RFC4862" class="xref">RFC4862</a>]</span>, they would send unsolicited NAs as soon as the address changes state from tentative to preferred (after its uniqueness has been verified).
---
>                                     If nodes following the recommendations in this document are using the DAD mechanism defined in <span>[<a href="#RFC4862" class="cite xref">RFC4862</a>]</span>, they would send unsolicited NAs as soon as the address changes state from tentative to preferred (after its uniqueness has been verified).
1661c1680
<                                             <span><a href="https://www.rfc-editor.org/rfc/rfc4429#section-2.2" class="relref">Section 2.2</a> of [<a href="#RFC4429" class="xref">RFC4429</a>]</span> discusses measures to ensure that ND packets from the Optimistic Address do not override any existing Neighbor Cache entries, as it would cause interruption of the rightful address owner's traffic in the case of an address conflict.
---
>                                             <span><a href="https://rfc-editor.org/rfc/rfc4429#section-2.2" class="relref">Section 2.2</a> of [<a href="#RFC4429" class="cite xref">RFC4429</a>]</span> discusses measures to ensure that ND packets from the Optimistic Address do not override any existing Neighbor Cache entries, as it would cause interruption of the rightful address owner's traffic in the case of an address conflict.
1666,1667c1685,1686
<                                     This document uses the term "the rightful owner", as the same terminology is used in <span>[<a href="#RFC4429" class="xref">RFC4429</a>]</span>.
< The analysis assumes that the host performs DAD, as <span><a href="https://www.rfc-editor.org/rfc/rfc4862#section-5.4" class="relref">Section 5.4</a> of [<a href="#RFC4862" class="xref">RFC4862</a>]</span> requires that DAD <span class="bcp14">MUST</span> be performed on all unicast
---
>                                     This document uses the term "the rightful owner", as the same terminology is used in <span>[<a href="#RFC4429" class="cite xref">RFC4429</a>]</span>.
> The analysis assumes that the host performs DAD, as <span><a href="https://rfc-editor.org/rfc/rfc4862#section-5.4" class="relref">Section 5.4</a> of [<a href="#RFC4862" class="cite xref">RFC4862</a>]</span> requires that DAD <span class="bcp14">MUST</span> be performed on all unicast
1675c1694
<                             If the router's Neighbor Cache entry for the target address already exists in any state other than INCOMPLETE, then as per <span><a href="https://www.rfc-editor.org/rfc/rfc4861#section-7.2.5" class="relref">Section 7.2.5</a> of [<a href="#RFC4861" class="xref">RFC4861</a>]</span>, an unsolicited NA with the Override flag cleared would change the entry state from REACHABLE to STALE but would not update the entry in any other way. Therefore, even if the host sends an unsolicited NA from its Optimistic Address, the router's cache entry would not be updated with the new link-layer address, and no impact on the traffic for the rightful address owner is expected.<a href="#section-5.1-1" class="pilcrow">¶</a></p>
---
>                             If the router's Neighbor Cache entry for the target address already exists in any state other than INCOMPLETE, then as per <span><a href="https://rfc-editor.org/rfc/rfc4861#section-7.2.5" class="relref">Section 7.2.5</a> of [<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>, an unsolicited NA with the Override flag cleared would change the entry state from REACHABLE to STALE but would not update the entry in any other way. Therefore, even if the host sends an unsolicited NA from its Optimistic Address, the router's cache entry would not be updated with the new link-layer address, and no impact on the traffic for the rightful address owner is expected.<a href="#section-5.1-1" class="pilcrow">¶</a></p>
1704c1723
< As the STALE entry was used to send packets, the router changes the entry state to DELAY and waits up to DELAY_FIRST_PROBE_TIME (5 seconds) <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span> before sending a unicast NS.<a href="#section-5.2-2.6" class="pilcrow">¶</a>
---
> As the STALE entry was used to send packets, the router changes the entry state to DELAY and waits up to DELAY_FIRST_PROBE_TIME (5 seconds) <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span> before sending a unicast NS.<a href="#section-5.2-2.6" class="pilcrow">¶</a>
1727c1746
< It should be noted that in this scenario the rightful owner does not send any unsolicited NAs before sending packets. If the rightful owner implements the functionality described in this document and sends unsolicited NAs upon configuring its address, then the router creates a STALE entry for the address, causing all packets to be delivered to the rightful owner (see <a href="#avoid_dis_exists" class="xref">Section 5.1</a>). The rightful owner would experience no disruption but might receive some packets intended for the host with an Optimistic Address.<a href="#section-5.2-5" class="pilcrow">¶</a></p>
---
> It should be noted that in this scenario the rightful owner does not send any unsolicited NAs before sending packets. If the rightful owner implements the functionality described in this document and sends unsolicited NAs upon configuring its address, then the router creates a STALE entry for the address, causing all packets to be delivered to the rightful owner (see <a href="#avoid_dis_exists" class="auto internal xref">Section 5.1</a>). The rightful owner would experience no disruption but might receive some packets intended for the host with an Optimistic Address.<a href="#section-5.2-5" class="pilcrow">¶</a></p>
1730c1749
< If the solicited NA arrives first, it changes the NC entry state from INCOMPLETE to REACHABLE. As discussed in <a href="#avoid_dis_exists" class="xref">Section 5.1</a>, there will be no disruption for the rightful owner if the router already has a REACHABLE entry for the address when an unsolicited NA is received.<a href="#section-5.2-6" class="pilcrow">¶</a></p>
---
> If the solicited NA arrives first, it changes the NC entry state from INCOMPLETE to REACHABLE. As discussed in <a href="#avoid_dis_exists" class="auto internal xref">Section 5.1</a>, there will be no disruption for the rightful owner if the router already has a REACHABLE entry for the address when an unsolicited NA is received.<a href="#section-5.2-6" class="pilcrow">¶</a></p>
1770c1789
<                                                                     The router receives the return traffic for the duplicate address. As the NC entry is STALE, it sends traffic using that entry, changes it to DELAY, and waits up to DELAY_FIRST_PROBE_TIME seconds <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span>.<a href="#section-5.3.1-2.5" class="pilcrow">¶</a>
---
>                                                                     The router receives the return traffic for the duplicate address. As the NC entry is STALE, it sends traffic using that entry, changes it to DELAY, and waits up to DELAY_FIRST_PROBE_TIME seconds <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>.<a href="#section-5.3.1-2.5" class="pilcrow">¶</a>
1773c1792
<                                                                             The router changes the NC entry state to PROBE and sends up to MAX_UNICAST_SOLICIT unicast NSes <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span> separated by RetransTimer milliseconds <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span> to the host link-layer address.<a href="#section-5.3.1-2.6" class="pilcrow">¶</a>
---
>                                                                             The router changes the NC entry state to PROBE and sends up to MAX_UNICAST_SOLICIT unicast NSes <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span> separated by RetransTimer milliseconds <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span> to the host link-layer address.<a href="#section-5.3.1-2.6" class="pilcrow">¶</a>
1776c1795
<                                                                     As the host has already detected the address conflict, it does not respond to the unicast NSes. (It is unlikely that the host has not completed the DAD process at this stage, as DELAY_FIRST_PROBE_TIME (5 seconds) is much higher than the DAD duration (DupAddrDetectTransmits*RetransTimer*1000 + MAX_RTR_SOLICITATION_DELAY seconds) (<span><a href="https://www.rfc-editor.org/rfc/rfc4862#section-5.4" class="relref">Section 5.4</a> of [<a href="#RFC4862" class="xref">RFC4862</a>]</span>).) The default value for the DAD process would be 1*1*1000 + 1 = 2 seconds <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span>. 
---
>                                                                     As the host has already detected the address conflict, it does not respond to the unicast NSes. (It is unlikely that the host has not completed the DAD process at this stage, as DELAY_FIRST_PROBE_TIME (5 seconds) is much higher than the DAD duration (DupAddrDetectTransmits*RetransTimer*1000 + MAX_RTR_SOLICITATION_DELAY seconds) (<span><a href="https://rfc-editor.org/rfc/rfc4862#section-5.4" class="relref">Section 5.4</a> of [<a href="#RFC4862" class="cite xref">RFC4862</a>]</span>).) The default value for the DAD process would be 1*1*1000 + 1 = 2 seconds <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>. 
1822c1841
<                                                                     The router receives the return traffic for the IPv6 address in question. Some flows are intended for the rightful owner of the duplicate address, while some are for the new host. As the NC entry is STALE, it sends traffic using that entry, changes it to DELAY, and waits up to DELAY_FIRST_PROBE_TIME seconds <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span>.<a href="#section-5.3.2-2.6" class="pilcrow">¶</a>
---
>                                                                     The router receives the return traffic for the IPv6 address in question. Some flows are intended for the rightful owner of the duplicate address, while some are for the new host. As the NC entry is STALE, it sends traffic using that entry, changes it to DELAY, and waits up to DELAY_FIRST_PROBE_TIME seconds <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>.<a href="#section-5.3.2-2.6" class="pilcrow">¶</a>
1825c1844
<                                                                             The router changes the NC entry state to PROBE and sends up to MAX_UNICAST_SOLICIT unicast NSes <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span> separated by RetransTimer milliseconds <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span> to the host link-layer address.<a href="#section-5.3.2-2.7" class="pilcrow">¶</a>
---
>                                                                             The router changes the NC entry state to PROBE and sends up to MAX_UNICAST_SOLICIT unicast NSes <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span> separated by RetransTimer milliseconds <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span> to the host link-layer address.<a href="#section-5.3.2-2.7" class="pilcrow">¶</a>
1839c1858
<                                                     As per the constants defined in <span><a href="https://www.rfc-editor.org/rfc/rfc4861#section-10" class="relref">Section 10</a> of [<a href="#RFC4861" class="xref">RFC4861</a>]</span>, this interval is equal to 5*1000 + (3 - 1)*1000 = 7000 milliseconds, or 7 seconds.<a href="#section-5.3.2-3" class="pilcrow">¶</a></p>
---
>                                                     As per the constants defined in <span><a href="https://rfc-editor.org/rfc/rfc4861#section-10" class="relref">Section 10</a> of [<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>, this interval is equal to 5*1000 + (3 - 1)*1000 = 7000 milliseconds, or 7 seconds.<a href="#section-5.3.2-3" class="pilcrow">¶</a></p>
1841c1860
<                                                             However, it should be noted that the probability of such a scenario is rather low. Similar to the scenario discussed in <a href="#avoid_dis_inc" class="xref">Section 5.2</a>, it would require the following things to happen almost simultaneously (within tens of milliseconds in most cases):<a href="#section-5.3.2-4" class="pilcrow">¶</a></p>
---
>                                                             However, it should be noted that the probability of such a scenario is rather low. Similar to the scenario discussed in <a href="#avoid_dis_inc" class="auto internal xref">Section 5.2</a>, it would require the following things to happen almost simultaneously (within tens of milliseconds in most cases):<a href="#section-5.3.2-4" class="pilcrow">¶</a></p>
1851c1870
< As discussed in <a href="#avoid_dis_inc" class="xref">Section 5.2</a>, the disruption for the rightful owner can easily be prevented if that node implements the mechanism described in this document. Sending unsolicited NAs before initiating off-link communication would create a STALE entry in the router's NC and prevent any traffic to that address from being sent to the host with the Optimistic Address (see <a href="#avoid_dis_exists" class="xref">Section 5.1</a>).<a href="#section-5.3.2-6" class="pilcrow">¶</a></p>
---
> As discussed in <a href="#avoid_dis_inc" class="auto internal xref">Section 5.2</a>, the disruption for the rightful owner can easily be prevented if that node implements the mechanism described in this document. Sending unsolicited NAs before initiating off-link communication would create a STALE entry in the router's NC and prevent any traffic to that address from being sent to the host with the Optimistic Address (see <a href="#avoid_dis_exists" class="auto internal xref">Section 5.1</a>).<a href="#section-5.3.2-6" class="pilcrow">¶</a></p>
1874c1893
<                               This document makes the following changes to <span><a href="https://www.rfc-editor.org/rfc/rfc4861#section-7.2.5" class="relref">Section 7.2.5</a> of [<a href="#RFC4861" class="xref">RFC4861</a>]</span>:<a href="#section-6.1.1-1" class="pilcrow">¶</a></p>
---
>                               This document makes the following changes to <span><a href="https://rfc-editor.org/rfc/rfc4861#section-7.2.5" class="relref">Section 7.2.5</a> of [<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>:<a href="#section-6.1.1-1" class="pilcrow">¶</a></p>
1904c1923
<                               This document makes the following changes to <span><a href="https://www.rfc-editor.org/rfc/rfc4861#section-7.2.6" class="relref">Section 7.2.6</a> of [<a href="#RFC4861" class="xref">RFC4861</a>]</span>:<a href="#section-6.1.2-1" class="pilcrow">¶</a></p>
---
>                               This document makes the following changes to <span><a href="https://rfc-editor.org/rfc/rfc4861#section-7.2.6" class="relref">Section 7.2.6</a> of [<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>:<a href="#section-6.1.2-1" class="pilcrow">¶</a></p>
1920c1939
<               <dt id="section-6.1.2-5.3.1">If Optimistic DAD <span>[<a href="#RFC4429" class="xref">RFC4429</a>]</span> is used:</dt>
---
>               <dt id="section-6.1.2-5.3.1">If Optimistic DAD <span>[<a href="#RFC4429" class="cite xref">RFC4429</a>]</span> is used:</dt>
1964c1983
<                                       Migrate from the "reactive" Neighbor Discovery <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span> to the registration-based mechanisms <span>[<a href="#RFC8505" class="xref">RFC8505</a>]</span>.<a href="#section-8-2.2" class="pilcrow">¶</a>
---
>                                       Migrate from the "reactive" Neighbor Discovery <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span> to the registration-based mechanisms <span>[<a href="#RFC8505" class="cite xref">RFC8505</a>]</span>.<a href="#section-8-2.2" class="pilcrow">¶</a>
2007c2026
<                                       The most radical approach would be to move away from the reactive ND as defined in <span>[<a href="#RFC4861" class="xref">RFC4861</a>]</span> and expand the registration-based ND <span>[<a href="#RFC6775" class="xref">RFC6775</a>]</span> <span>[<a href="#RFC8505" class="xref">RFC8505</a>]</span> used in IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) to the rest of the IPv6 deployments.
---
>                                       The most radical approach would be to move away from the reactive ND as defined in <span>[<a href="#RFC4861" class="cite xref">RFC4861</a>]</span> and expand the registration-based ND <span>[<a href="#RFC6775" class="cite xref">RFC6775</a>]</span> <span>[<a href="#RFC8505" class="cite xref">RFC8505</a>]</span> used in IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) to the rest of the IPv6 deployments.
2035c2054
<                                               It would not work for Optimistic Addresses, as <span><a href="https://www.rfc-editor.org/rfc/rfc4429#section-2.2" class="relref">Section 2.2</a> of [<a href="#RFC4429" class="xref">RFC4429</a>]</span> explicitly prohibits sending Neighbor Solicitations from an Optimistic Address.<a href="#section-8.3-4.1" class="pilcrow">¶</a>
---
>                                               It would not work for Optimistic Addresses, as <span><a href="https://rfc-editor.org/rfc/rfc4429#section-2.2" class="relref">Section 2.2</a> of [<a href="#RFC4429" class="cite xref">RFC4429</a>]</span> explicitly prohibits sending Neighbor Solicitations from an Optimistic Address.<a href="#section-8.3-4.1" class="pilcrow">¶</a>
2052,2053c2071,2072
<                                       If the host link-layer address is included in the Source Link-Layer Address Option, the router would create a STALE entry for the host GUA as per <span><a href="https://www.rfc-editor.org/rfc/rfc4861#section-6.2.6" class="relref">Section 6.2.6</a> of [<a href="#RFC4861" class="xref">RFC4861</a>]</span>.
<                                       However, this approach cannot be used if the GUA is in the Optimistic state: <span><a href="https://www.rfc-editor.org/rfc/rfc4429#section-2.2" class="relref">Section 2.2</a> of [<a href="#RFC4429" class="xref">RFC4429</a>]</span>  explicitly prohibits using an Optimistic Address as the source address of a Router Solicitation with a SLLAO, as it might cause disruption for the rightful owner of the address in the case of a collision.
---
>                                       If the host link-layer address is included in the Source Link-Layer Address Option, the router would create a STALE entry for the host GUA as per <span><a href="https://rfc-editor.org/rfc/rfc4861#section-6.2.6" class="relref">Section 6.2.6</a> of [<a href="#RFC4861" class="cite xref">RFC4861</a>]</span>.
>                                       However, this approach cannot be used if the GUA is in the Optimistic state: <span><a href="https://rfc-editor.org/rfc/rfc4429#section-2.2" class="relref">Section 2.2</a> of [<a href="#RFC4429" class="cite xref">RFC4429</a>]</span>  explicitly prohibits using an Optimistic Address as the source address of a Router Solicitation with a SLLAO, as it might cause disruption for the rightful owner of the address in the case of a collision.
2080c2099
<                               The same solution was proposed in <span>[<a href="#I-D.halpern-6man-nd-pre-resolve-addr" class="xref">ND-ADDR-RES</a>]</span>. Some routing vendors already support such optimization. However, this approach has a number of drawbacks and therefore should not be used as the only solution:<a href="#section-8.5-2" class="pilcrow">¶</a></p>
---
>                               The same solution was proposed in <span>[<a href="#I-D.halpern-6man-nd-pre-resolve-addr" class="cite xref">ND-ADDR-RES</a>]</span>. Some routing vendors already support such optimization. However, this approach has a number of drawbacks and therefore should not be used as the only solution:<a href="#section-8.5-2" class="pilcrow">¶</a></p>
2087c2106
<                                                       In that case, the host <span class="bcp14">SHOULD</span> silently ignore the received Neighbor Solicitation from the router as per <span><a href="https://www.rfc-editor.org/rfc/rfc4862#section-5.4.3" class="relref">Section 5.4.3</a> of [<a href="#RFC4862" class="xref">RFC4862</a>]</span>. 
---
>                                                       In that case, the host <span class="bcp14">SHOULD</span> silently ignore the received Neighbor Solicitation from the router as per <span><a href="https://rfc-editor.org/rfc/rfc4862#section-5.4.3" class="relref">Section 5.4.3</a> of [<a href="#RFC4862" class="cite xref">RFC4862</a>]</span>. 
2151c2170
<                                               Increasing the buffer size and buffering more packets would exacerbate issues described in <span>[<a href="#RFC6583" class="xref">RFC6583</a>]</span> and make the router more vulnerable to ND-based denial-of-service attacks.<a href="#section-8.8-1" class="pilcrow">¶</a></p>
---
>                                               Increasing the buffer size and buffering more packets would exacerbate issues described in <span>[<a href="#RFC6583" class="cite xref">RFC6583</a>]</span> and make the router more vulnerable to ND-based denial-of-service attacks.<a href="#section-8.8-1" class="pilcrow">¶</a></p>
2194,2195c2213,2214
< <a href="#avoid_dis" class="xref">Section 5</a> describes some corner cases when a host with a duplicate Optimistic Address might get some packets intended for the rightful owner of the address. However, such scenarios do not introduce any new attack vectors: even without the changes discussed in this document, an attacker can easily override the router's Neighbor Cache and redirect the traffic by sending NAs with the Solicited flag set.
< As discussed in <a href="#dis_start" class="xref">Section 5.3.2</a>, the worst-case scenario might cause a disruption for up to 7 seconds. Because this scenario is highly unlikely, this risk of disruption is considered acceptable. More importantly, for all cases described in <a href="#avoid_dis" class="xref">Section 5</a>, the rightful owner can prevent disruption caused by an accidental address duplication just by implementing the mechanism described in this document. If the rightful owner sends unsolicited NAs before using the address, the STALE entry would be created on the router's NC, and any subsequent unsolicited NAs sent from the host with an Optimistic Address would not override the NC entry.<a href="#section-10-2" class="pilcrow">¶</a></p>
---
> <a href="#avoid_dis" class="auto internal xref">Section 5</a> describes some corner cases when a host with a duplicate Optimistic Address might get some packets intended for the rightful owner of the address. However, such scenarios do not introduce any new attack vectors: even without the changes discussed in this document, an attacker can easily override the router's Neighbor Cache and redirect the traffic by sending NAs with the Solicited flag set.
> As discussed in <a href="#dis_start" class="auto internal xref">Section 5.3.2</a>, the worst-case scenario might cause a disruption for up to 7 seconds. Because this scenario is highly unlikely, this risk of disruption is considered acceptable. More importantly, for all cases described in <a href="#avoid_dis" class="auto internal xref">Section 5</a>, the rightful owner can prevent disruption caused by an accidental address duplication just by implementing the mechanism described in this document. If the rightful owner sends unsolicited NAs before using the address, the STALE entry would be created on the router's NC, and any subsequent unsolicited NAs sent from the host with an Optimistic Address would not override the NC entry.<a href="#section-10-2" class="pilcrow">¶</a></p>
2197c2216
<                     A malicious host could attempt to exhaust the Neighbor Cache on the router by creating a large number of STALE entries. However, this attack vector is not new, and the mechanism specified in this document does not increase the risk of such an attack: the attacker could do it, for example, by sending an NS or RS packet with a SLLAO included. All recommendations from <span>[<a href="#RFC6583" class="xref">RFC6583</a>]</span> still apply.<a href="#section-10-3" class="pilcrow">¶</a></p>
---
>                     A malicious host could attempt to exhaust the Neighbor Cache on the router by creating a large number of STALE entries. However, this attack vector is not new, and the mechanism specified in this document does not increase the risk of such an attack: the attacker could do it, for example, by sending an NS or RS packet with a SLLAO included. All recommendations from <span>[<a href="#RFC6583" class="cite xref">RFC6583</a>]</span> still apply.<a href="#section-10-3" class="pilcrow">¶</a></p>
2202c2221
<                     It should be noted that the mechanism discussed in this document allows hosts to proactively inform their routers about global IPv6 addresses existing on-link. Routers could use that information to distinguish between used and unused addresses to mitigate Neighbor Cache exhaustion DoS attacks as described in <span><a href="https://www.rfc-editor.org/rfc/rfc3756#section-4.3.2" class="relref">Section 4.3.2</a> of [<a href="#RFC3756" class="xref">RFC3756</a>]</span> and in <span>[<a href="#RFC6583" class="xref">RFC6583</a>]</span>.<a href="#section-10-5" class="pilcrow">¶</a></p>
---
>                     It should be noted that the mechanism discussed in this document allows hosts to proactively inform their routers about global IPv6 addresses existing on-link. Routers could use that information to distinguish between used and unused addresses to mitigate Neighbor Cache exhaustion DoS attacks as described in <span><a href="https://rfc-editor.org/rfc/rfc3756#section-4.3.2" class="relref">Section 4.3.2</a> of [<a href="#RFC3756" class="cite xref">RFC3756</a>]</span> and in <span>[<a href="#RFC6583" class="cite xref">RFC6583</a>]</span>.<a href="#section-10-5" class="pilcrow">¶</a></p>
