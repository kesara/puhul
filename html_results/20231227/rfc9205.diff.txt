13c13
< <meta content="xml2rfc 3.12.10" name="generator">
---
> <meta content="xml2rfc 3.19.0" name="generator">
17,35c17,30
<   xml2rfc 3.12.10
<     Python 3.6.15
<     appdirs 1.4.4
<     ConfigArgParse 1.4.1
<     google-i18n-address 2.4.0
<     html5lib 1.0.1
<     intervaltree 3.0.2
<     Jinja2 2.11.3
<     kitchen 1.2.6
<     lxml 4.7.1
<     MarkupSafe 2.0.1
<     pycairo 1.15.1
<     pycountry 19.8.18
<     pyflakes 2.1.1
<     PyYAML 5.4.1
<     requests 2.24.0
<     setuptools 40.5.0
<     six 1.14.0
<     WeasyPrint 52.5
---
>   xml2rfc 3.19.0
>     Python 3.11.7
>     ConfigArgParse 1.7
>     google-i18n-address 3.1.0
>     intervaltree 3.1.0
>     Jinja2 3.1.2
>     lxml 4.9.4
>     platformdirs 4.1.0
>     pycountry 23.12.11
>     PyYAML 6.0.1
>     requests 2.31.0
>     setuptools 65.5.0
>     six 1.16.0
>     wcwidth 0.2.12
37c32
< <link href="rfc9205.xml" rel="alternate" type="application/rfc+xml">
---
> <link href="rfc/rfc9205.xml" rel="alternate" type="application/rfc+xml">
47c42
<   commented changes found necssary during the development of the v3
---
>   commented changes found necessary during the development of the v3
56a52,57
> :root {
>   --font-sans: 'Noto Sans', Arial, Helvetica, sans-serif;
>   --font-serif: 'Noto Serif', 'Times', 'Times New Roman', serif;
>   --font-mono: 'Roboto Mono', Courier, 'Courier New', monospace;
> }
> 
59d59
<   width: extend-to-zoom;
74c74
<   font-family: 'Noto Sans', Arial, Helvetica, sans-serif;
---
>   font-family: var(--font-sans);
76a77
>   overflow-wrap: break-word;
162a164,172
> svg[font-family~="serif" i], svg [font-family~="serif" i] {
>   font-family: var(--font-serif);
> }
> svg[font-family~="sans-serif" i], svg [font-family~="sans-serif" i] {
>   font-family: var(--font-sans);
> }
> svg[font-family~="monospace" i], svg [font-family~="monospace" i] {
>   font-family: var(--font-mono);
> }
176a187
>   display: table;
255c266
< tt, code, pre, code {
---
> tt, code, pre {
257c268
<   font-family: 'Roboto Mono', monospace;
---
>   font-family: var(--font-mono);
296a308,310
> blockquote > *:last-child {
>   margin-bottom: 0;
> }
494c508
<   font-family: "Noto Sans",Arial,Helvetica,sans-serif;
---
>   font-family: var(--font-sans);
634d647
< 
657c670
<   pre.breakable {
---
>   .breakable pre {
727c740
<   /* The follwing is commented out here, but set appropriately by in code, as
---
>   /* The following is commented out here, but set appropriately by in code, as
827c840
< tt, code, pre, code {
---
> tt, code, pre {
832c845
< pre.sourcecode,
---
> .sourcecode pre,
868c881
< /* Make the alternative author contact informatio look less like just another
---
> /* Make the alternative author contact information look less like just another
1049a1063
>   .artwork > pre,
1064c1078
< and increase the contrast between border and odd row background sligthtly */
---
> and increase the contrast between border and odd row background slightly */
1070a1085,1087
> tr {
>   break-inside: avoid;
> }
1121c1138
< /* Text in compact lists should not get extra bottim margin space,
---
> /* Text in compact lists should not get extra bottom margin space,
1146c1163
< /* Tweak the comact list text */
---
> /* Tweak the compact list text */
1164c1181
< dd > div:first-child > pre.sourcecode,
---
> dd > div.sourcecode:first-child,
1178c1195
< li > p:last-of-type {
---
> li > p:last-of-type:only-child {
1182a1200
> <link href="https://datatracker.ietf.org/doc/draft-ietf-httpbis-bcp56bis-15" rel="prev">
1185c1203
<   <link href="https://datatracker.ietf.org/doc/draft-ietf-httpbis-bcp56bis-15" rel="prev">
---
>   <script type="application/javascript">async function addMetadata(){try{const e=document.styleSheets[0].cssRules;for(let t=0;t<e.length;t++)if(/#identifiers/.exec(e[t].selectorText)){const a=e[t].cssText.replace("#identifiers","#external-updates");document.styleSheets[0].insertRule(a,document.styleSheets[0].cssRules.length)}}catch(e){console.log(e)}const e=document.getElementById("external-metadata");if(e)try{var t,a="",o=function(e){const t=document.getElementsByTagName("meta");for(let a=0;a<t.length;a++)if(t[a].getAttribute("name")===e)return t[a].getAttribute("content");return""}("rfc.number");if(o){t="https://www.rfc-editor.org/rfc/rfc"+o+".json";try{const e=await fetch(t);a=await e.json()}catch(e){t=document.URL.indexOf("html")>=0?document.URL.replace(/html$/,"json"):document.URL+".json";const o=await fetch(t);a=await o.json()}}if(!a)return;e.style.display="block";const s="",d="https://datatracker.ietf.org/doc",n="https://datatracker.ietf.org/ipr/search",c="https://www.rfc-editor.org/info",l=a.doc_id.toLowerCase(),i=a.doc_id.slice(0,3).toLowerCase(),f=a.doc_id.slice(3).replace(/^0+/,""),u={status:"Status",obsoletes:"Obsoletes",obsoleted_by:"Obsoleted By",updates:"Updates",updated_by:"Updated By",see_also:"See Also",errata_url:"Errata"};let h="<dl style='overflow:hidden' id='external-updates'>";["status","obsoletes","obsoleted_by","updates","updated_by","see_also","errata_url"].forEach(e=>{if("status"==e){a[e]=a[e].toLowerCase();var t=a[e].split(" "),o=t.length,w="",p=1;for(let e=0;e<o;e++)p<o?w=w+r(t[e])+" ":w+=r(t[e]),p++;a[e]=w}else if("obsoletes"==e||"obsoleted_by"==e||"updates"==e||"updated_by"==e){var g,m="",b=1;g=a[e].length;for(let t=0;t<g;t++)a[e][t]&&(a[e][t]=String(a[e][t]).toLowerCase(),m=b<g?m+"<a href='"+s+"/rfc/".concat(a[e][t])+"'>"+a[e][t].slice(3)+"</a>, ":m+"<a href='"+s+"/rfc/".concat(a[e][t])+"'>"+a[e][t].slice(3)+"</a>",b++);a[e]=m}else if("see_also"==e){var y,L="",C=1;y=a[e].length;for(let t=0;t<y;t++)if(a[e][t]){a[e][t]=String(a[e][t]);var _=a[e][t].slice(0,3),v=a[e][t].slice(3).replace(/^0+/,"");L=C<y?"RFC"!=_?L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+_+" "+v+"</a>, ":L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+v+"</a>, ":"RFC"!=_?L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+_+" "+v+"</a>":L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+v+"</a>",C++}a[e]=L}else if("errata_url"==e){var R="";R=a[e]?R+"<a href='"+a[e]+"'>Errata exist</a> | <a href='"+d+"/"+l+"'>Datatracker</a>| <a href='"+n+"/?"+i+"="+f+"&submit="+i+"'>IPR</a> | <a href='"+c+"/"+l+"'>Info page</a>":"<a href='"+d+"/"+l+"'>Datatracker</a> | <a href='"+n+"/?"+i+"="+f+"&submit="+i+"'>IPR</a> | <a href='"+c+"/"+l+"'>Info page</a>",a[e]=R}""!=a[e]?"Errata"==u[e]?h+=`<dt>More info:</dt><dd>${a[e]}</dd>`:h+=`<dt>${u[e]}:</dt><dd>${a[e]}</dd>`:"Errata"==u[e]&&(h+=`<dt>More info:</dt><dd>${a[e]}</dd>`)}),h+="</dl>",e.innerHTML=h}catch(e){console.log(e)}else console.log("Could not locate metadata <div> element");function r(e){return e.charAt(0).toUpperCase()+e.slice(1)}}window.removeEventListener("load",addMetadata),window.addEventListener("load",addMetadata);</script>
1187,1188c1205,1206
< <body>
< <script src="https://www.rfc-editor.org/js/metadata.min.js"></script>
---
> <body class="xml2rfc">
> <script src="metadata.min.js"></script>
1282c1300
<             <p id="section-toc.1-1.1.1" class="keepWithNext"><a href="#section-1" class="xref">1</a>.  <a href="#name-introduction" class="xref">Introduction</a></p>
---
>             <p id="section-toc.1-1.1.1" class="keepWithNext"><a href="#section-1" class="auto internal xref">1</a>.  <a href="#name-introduction" class="internal xref">Introduction</a></p>
1285c1303
<                 <p id="section-toc.1-1.1.2.1.1" class="keepWithNext"><a href="#section-1.1" class="xref">1.1</a>.  <a href="#name-notational-conventions" class="xref">Notational Conventions</a></p>
---
>                 <p id="section-toc.1-1.1.2.1.1" class="keepWithNext"><a href="#section-1.1" class="auto internal xref">1.1</a>.  <a href="#name-notational-conventions" class="internal xref">Notational Conventions</a></p>
1290c1308
<             <p id="section-toc.1-1.2.1"><a href="#section-2" class="xref">2</a>.  <a href="#name-is-http-being-used" class="xref">Is HTTP Being Used?</a></p>
---
>             <p id="section-toc.1-1.2.1"><a href="#section-2" class="auto internal xref">2</a>.  <a href="#name-is-http-being-used" class="internal xref">Is HTTP Being Used?</a></p>
1293c1311
<                 <p id="section-toc.1-1.2.2.1.1" class="keepWithNext"><a href="#section-2.1" class="xref">2.1</a>.  <a href="#name-non-http-protocols" class="xref">Non-HTTP Protocols</a></p>
---
>                 <p id="section-toc.1-1.2.2.1.1" class="keepWithNext"><a href="#section-2.1" class="auto internal xref">2.1</a>.  <a href="#name-non-http-protocols" class="internal xref">Non-HTTP Protocols</a></p>
1298c1316
<             <p id="section-toc.1-1.3.1"><a href="#section-3" class="xref">3</a>.  <a href="#name-whats-important-about-http" class="xref">What's Important About HTTP</a></p>
---
>             <p id="section-toc.1-1.3.1"><a href="#section-3" class="auto internal xref">3</a>.  <a href="#name-whats-important-about-http" class="internal xref">What's Important About HTTP</a></p>
1301c1319
<                 <p id="section-toc.1-1.3.2.1.1"><a href="#section-3.1" class="xref">3.1</a>.  <a href="#name-generic-semantics" class="xref">Generic Semantics</a></p>
---
>                 <p id="section-toc.1-1.3.2.1.1"><a href="#section-3.1" class="auto internal xref">3.1</a>.  <a href="#name-generic-semantics" class="internal xref">Generic Semantics</a></p>
1304c1322
<                 <p id="section-toc.1-1.3.2.2.1"><a href="#section-3.2" class="xref">3.2</a>.  <a href="#name-links" class="xref">Links</a></p>
---
>                 <p id="section-toc.1-1.3.2.2.1"><a href="#section-3.2" class="auto internal xref">3.2</a>.  <a href="#name-links" class="internal xref">Links</a></p>
1307c1325
<                 <p id="section-toc.1-1.3.2.3.1"><a href="#section-3.3" class="xref">3.3</a>.  <a href="#name-rich-functionality" class="xref">Rich Functionality</a></p>
---
>                 <p id="section-toc.1-1.3.2.3.1"><a href="#section-3.3" class="auto internal xref">3.3</a>.  <a href="#name-rich-functionality" class="internal xref">Rich Functionality</a></p>
1312c1330
<             <p id="section-toc.1-1.4.1"><a href="#section-4" class="xref">4</a>.  <a href="#name-best-practices-for-specifyi" class="xref">Best Practices for Specifying the Use of HTTP</a></p>
---
>             <p id="section-toc.1-1.4.1"><a href="#section-4" class="auto internal xref">4</a>.  <a href="#name-best-practices-for-specifyi" class="internal xref">Best Practices for Specifying the Use of HTTP</a></p>
1315c1333
<                 <p id="section-toc.1-1.4.2.1.1"><a href="#section-4.1" class="xref">4.1</a>.  <a href="#name-specifying-the-use-of-http" class="xref">Specifying the Use of HTTP</a></p>
---
>                 <p id="section-toc.1-1.4.2.1.1"><a href="#section-4.1" class="auto internal xref">4.1</a>.  <a href="#name-specifying-the-use-of-http" class="internal xref">Specifying the Use of HTTP</a></p>
1318c1336
<                 <p id="section-toc.1-1.4.2.2.1"><a href="#section-4.2" class="xref">4.2</a>.  <a href="#name-specifying-server-behaviour" class="xref">Specifying Server Behaviour</a></p>
---
>                 <p id="section-toc.1-1.4.2.2.1"><a href="#section-4.2" class="auto internal xref">4.2</a>.  <a href="#name-specifying-server-behaviour" class="internal xref">Specifying Server Behaviour</a></p>
1321c1339
<                 <p id="section-toc.1-1.4.2.3.1"><a href="#section-4.3" class="xref">4.3</a>.  <a href="#name-specifying-client-behaviour" class="xref">Specifying Client Behaviour</a></p>
---
>                 <p id="section-toc.1-1.4.2.3.1"><a href="#section-4.3" class="auto internal xref">4.3</a>.  <a href="#name-specifying-client-behaviour" class="internal xref">Specifying Client Behaviour</a></p>
1324c1342
<                 <p id="section-toc.1-1.4.2.4.1"><a href="#section-4.4" class="xref">4.4</a>.  <a href="#name-specifying-urls" class="xref">Specifying URLs</a></p>
---
>                 <p id="section-toc.1-1.4.2.4.1"><a href="#section-4.4" class="auto internal xref">4.4</a>.  <a href="#name-specifying-urls" class="internal xref">Specifying URLs</a></p>
1327c1345
<                     <p id="section-toc.1-1.4.2.4.2.1.1"><a href="#section-4.4.1" class="xref">4.4.1</a>.  <a href="#name-discovering-an-applications" class="xref">Discovering an Application's URLs</a></p>
---
>                     <p id="section-toc.1-1.4.2.4.2.1.1"><a href="#section-4.4.1" class="auto internal xref">4.4.1</a>.  <a href="#name-discovering-an-applications" class="internal xref">Discovering an Application's URLs</a></p>
1330c1348
<                     <p id="section-toc.1-1.4.2.4.2.2.1"><a href="#section-4.4.2" class="xref">4.4.2</a>.  <a href="#name-considering-uri-schemes" class="xref">Considering URI Schemes</a></p>
---
>                     <p id="section-toc.1-1.4.2.4.2.2.1"><a href="#section-4.4.2" class="auto internal xref">4.4.2</a>.  <a href="#name-considering-uri-schemes" class="internal xref">Considering URI Schemes</a></p>
1333c1351
<                     <p id="section-toc.1-1.4.2.4.2.3.1"><a href="#section-4.4.3" class="xref">4.4.3</a>.  <a href="#name-choosing-transport-ports" class="xref">Choosing Transport Ports</a></p>
---
>                     <p id="section-toc.1-1.4.2.4.2.3.1"><a href="#section-4.4.3" class="auto internal xref">4.4.3</a>.  <a href="#name-choosing-transport-ports" class="internal xref">Choosing Transport Ports</a></p>
1338c1356
<                 <p id="section-toc.1-1.4.2.5.1"><a href="#section-4.5" class="xref">4.5</a>.  <a href="#name-using-http-methods" class="xref">Using HTTP Methods</a></p>
---
>                 <p id="section-toc.1-1.4.2.5.1"><a href="#section-4.5" class="auto internal xref">4.5</a>.  <a href="#name-using-http-methods" class="internal xref">Using HTTP Methods</a></p>
1341c1359
<                     <p id="section-toc.1-1.4.2.5.2.1.1"><a href="#section-4.5.1" class="xref">4.5.1</a>.  <a href="#name-get" class="xref">GET</a></p>
---
>                     <p id="section-toc.1-1.4.2.5.2.1.1"><a href="#section-4.5.1" class="auto internal xref">4.5.1</a>.  <a href="#name-get" class="internal xref">GET</a></p>
1344c1362
<                     <p id="section-toc.1-1.4.2.5.2.2.1"><a href="#section-4.5.2" class="xref">4.5.2</a>.  <a href="#name-options" class="xref">OPTIONS</a></p>
---
>                     <p id="section-toc.1-1.4.2.5.2.2.1"><a href="#section-4.5.2" class="auto internal xref">4.5.2</a>.  <a href="#name-options" class="internal xref">OPTIONS</a></p>
1349c1367
<                 <p id="section-toc.1-1.4.2.6.1"><a href="#section-4.6" class="xref">4.6</a>.  <a href="#name-using-http-status-codes" class="xref">Using HTTP Status Codes</a></p>
---
>                 <p id="section-toc.1-1.4.2.6.1"><a href="#section-4.6" class="auto internal xref">4.6</a>.  <a href="#name-using-http-status-codes" class="internal xref">Using HTTP Status Codes</a></p>
1352c1370
<                     <p id="section-toc.1-1.4.2.6.2.1.1"><a href="#section-4.6.1" class="xref">4.6.1</a>.  <a href="#name-redirection" class="xref">Redirection</a></p>
---
>                     <p id="section-toc.1-1.4.2.6.2.1.1"><a href="#section-4.6.1" class="auto internal xref">4.6.1</a>.  <a href="#name-redirection" class="internal xref">Redirection</a></p>
1357c1375
<                 <p id="section-toc.1-1.4.2.7.1"><a href="#section-4.7" class="xref">4.7</a>.  <a href="#name-specifying-http-header-fiel" class="xref">Specifying HTTP Header Fields</a></p>
---
>                 <p id="section-toc.1-1.4.2.7.1"><a href="#section-4.7" class="auto internal xref">4.7</a>.  <a href="#name-specifying-http-header-fiel" class="internal xref">Specifying HTTP Header Fields</a></p>
1360c1378
<                 <p id="section-toc.1-1.4.2.8.1"><a href="#section-4.8" class="xref">4.8</a>.  <a href="#name-defining-message-content" class="xref">Defining Message Content</a></p>
---
>                 <p id="section-toc.1-1.4.2.8.1"><a href="#section-4.8" class="auto internal xref">4.8</a>.  <a href="#name-defining-message-content" class="internal xref">Defining Message Content</a></p>
1363c1381
<                 <p id="section-toc.1-1.4.2.9.1"><a href="#section-4.9" class="xref">4.9</a>.  <a href="#name-leveraging-http-caching" class="xref">Leveraging HTTP Caching</a></p>
---
>                 <p id="section-toc.1-1.4.2.9.1"><a href="#section-4.9" class="auto internal xref">4.9</a>.  <a href="#name-leveraging-http-caching" class="internal xref">Leveraging HTTP Caching</a></p>
1366c1384
<                     <p id="section-toc.1-1.4.2.9.2.1.1"><a href="#section-4.9.1" class="xref">4.9.1</a>.  <a href="#name-freshness" class="xref">Freshness</a></p>
---
>                     <p id="section-toc.1-1.4.2.9.2.1.1"><a href="#section-4.9.1" class="auto internal xref">4.9.1</a>.  <a href="#name-freshness" class="internal xref">Freshness</a></p>
1369c1387
<                     <p id="section-toc.1-1.4.2.9.2.2.1"><a href="#section-4.9.2" class="xref">4.9.2</a>.  <a href="#name-stale-responses" class="xref">Stale Responses</a></p>
---
>                     <p id="section-toc.1-1.4.2.9.2.2.1"><a href="#section-4.9.2" class="auto internal xref">4.9.2</a>.  <a href="#name-stale-responses" class="internal xref">Stale Responses</a></p>
1372c1390
<                     <p id="section-toc.1-1.4.2.9.2.3.1"><a href="#section-4.9.3" class="xref">4.9.3</a>.  <a href="#name-caching-and-application-sem" class="xref">Caching and Application Semantics</a></p>
---
>                     <p id="section-toc.1-1.4.2.9.2.3.1"><a href="#section-4.9.3" class="auto internal xref">4.9.3</a>.  <a href="#name-caching-and-application-sem" class="internal xref">Caching and Application Semantics</a></p>
1375c1393
<                     <p id="section-toc.1-1.4.2.9.2.4.1"><a href="#section-4.9.4" class="xref">4.9.4</a>.  <a href="#name-varying-content-based-upon-" class="xref">Varying Content Based Upon the Request</a></p>
---
>                     <p id="section-toc.1-1.4.2.9.2.4.1"><a href="#section-4.9.4" class="auto internal xref">4.9.4</a>.  <a href="#name-varying-content-based-upon-" class="internal xref">Varying Content Based Upon the Request</a></p>
1380c1398
<                 <p id="section-toc.1-1.4.2.10.1"><a href="#section-4.10" class="xref">4.10</a>. <a href="#name-handling-application-state" class="xref">Handling Application State</a></p>
---
>                 <p id="section-toc.1-1.4.2.10.1"><a href="#section-4.10" class="auto internal xref">4.10</a>. <a href="#name-handling-application-state" class="internal xref">Handling Application State</a></p>
1383c1401
<                 <p id="section-toc.1-1.4.2.11.1"><a href="#section-4.11" class="xref">4.11</a>. <a href="#name-making-multiple-requests" class="xref">Making Multiple Requests</a></p>
---
>                 <p id="section-toc.1-1.4.2.11.1"><a href="#section-4.11" class="auto internal xref">4.11</a>. <a href="#name-making-multiple-requests" class="internal xref">Making Multiple Requests</a></p>
1386c1404
<                 <p id="section-toc.1-1.4.2.12.1"><a href="#section-4.12" class="xref">4.12</a>. <a href="#name-client-authentication" class="xref">Client Authentication</a></p>
---
>                 <p id="section-toc.1-1.4.2.12.1"><a href="#section-4.12" class="auto internal xref">4.12</a>. <a href="#name-client-authentication" class="internal xref">Client Authentication</a></p>
1389c1407
<                 <p id="section-toc.1-1.4.2.13.1"><a href="#section-4.13" class="xref">4.13</a>. <a href="#name-coexisting-with-web-browsin" class="xref">Coexisting with Web Browsing</a></p>
---
>                 <p id="section-toc.1-1.4.2.13.1"><a href="#section-4.13" class="auto internal xref">4.13</a>. <a href="#name-coexisting-with-web-browsin" class="internal xref">Coexisting with Web Browsing</a></p>
1392c1410
<                 <p id="section-toc.1-1.4.2.14.1"><a href="#section-4.14" class="xref">4.14</a>. <a href="#name-maintaining-application-bou" class="xref">Maintaining Application Boundaries</a></p>
---
>                 <p id="section-toc.1-1.4.2.14.1"><a href="#section-4.14" class="auto internal xref">4.14</a>. <a href="#name-maintaining-application-bou" class="internal xref">Maintaining Application Boundaries</a></p>
1395c1413
<                 <p id="section-toc.1-1.4.2.15.1"><a href="#section-4.15" class="xref">4.15</a>. <a href="#name-using-server-push" class="xref">Using Server Push</a></p>
---
>                 <p id="section-toc.1-1.4.2.15.1"><a href="#section-4.15" class="auto internal xref">4.15</a>. <a href="#name-using-server-push" class="internal xref">Using Server Push</a></p>
1398c1416
<                 <p id="section-toc.1-1.4.2.16.1"><a href="#section-4.16" class="xref">4.16</a>. <a href="#name-allowing-versioning-and-evo" class="xref">Allowing Versioning and Evolution</a></p>
---
>                 <p id="section-toc.1-1.4.2.16.1"><a href="#section-4.16" class="auto internal xref">4.16</a>. <a href="#name-allowing-versioning-and-evo" class="internal xref">Allowing Versioning and Evolution</a></p>
1403c1421
<             <p id="section-toc.1-1.5.1"><a href="#section-5" class="xref">5</a>.  <a href="#name-iana-considerations" class="xref">IANA Considerations</a></p>
---
>             <p id="section-toc.1-1.5.1"><a href="#section-5" class="auto internal xref">5</a>.  <a href="#name-iana-considerations" class="internal xref">IANA Considerations</a></p>
1406c1424
<             <p id="section-toc.1-1.6.1"><a href="#section-6" class="xref">6</a>.  <a href="#name-security-considerations" class="xref">Security Considerations</a></p>
---
>             <p id="section-toc.1-1.6.1"><a href="#section-6" class="auto internal xref">6</a>.  <a href="#name-security-considerations" class="internal xref">Security Considerations</a></p>
1409c1427
<                 <p id="section-toc.1-1.6.2.1.1"><a href="#section-6.1" class="xref">6.1</a>.  <a href="#name-privacy-considerations" class="xref">Privacy Considerations</a></p>
---
>                 <p id="section-toc.1-1.6.2.1.1"><a href="#section-6.1" class="auto internal xref">6.1</a>.  <a href="#name-privacy-considerations" class="internal xref">Privacy Considerations</a></p>
1414c1432
<             <p id="section-toc.1-1.7.1"><a href="#section-7" class="xref">7</a>.  <a href="#name-references" class="xref">References</a></p>
---
>             <p id="section-toc.1-1.7.1"><a href="#section-7" class="auto internal xref">7</a>.  <a href="#name-references" class="internal xref">References</a></p>
1417c1435
<                 <p id="section-toc.1-1.7.2.1.1"><a href="#section-7.1" class="xref">7.1</a>.  <a href="#name-normative-references" class="xref">Normative References</a></p>
---
>                 <p id="section-toc.1-1.7.2.1.1"><a href="#section-7.1" class="auto internal xref">7.1</a>.  <a href="#name-normative-references" class="internal xref">Normative References</a></p>
1420c1438
<                 <p id="section-toc.1-1.7.2.2.1"><a href="#section-7.2" class="xref">7.2</a>.  <a href="#name-informative-references" class="xref">Informative References</a></p>
---
>                 <p id="section-toc.1-1.7.2.2.1"><a href="#section-7.2" class="auto internal xref">7.2</a>.  <a href="#name-informative-references" class="internal xref">Informative References</a></p>
1425c1443
<             <p id="section-toc.1-1.8.1"><a href="#appendix-A" class="xref">Appendix A</a>.  <a href="#name-changes-from-rfc-3205" class="xref">Changes from RFC 3205</a></p>
---
>             <p id="section-toc.1-1.8.1"><a href="#appendix-A" class="auto internal xref">Appendix A</a>.  <a href="#name-changes-from-rfc-3205" class="internal xref">Changes from RFC 3205</a></p>
1428c1446
<             <p id="section-toc.1-1.9.1"><a href="#appendix-B" class="xref"></a><a href="#name-authors-address" class="xref">Author's Address</a></p>
---
>             <p id="section-toc.1-1.9.1"><a href="#appendix-B" class="auto internal xref"></a><a href="#name-authors-address" class="internal xref">Author's Address</a></p>
1439c1457
< <p id="section-1-1">Applications other than Web browsing often use HTTP <span>[<a href="#HTTP" class="xref">HTTP</a>]</span> as a substrate, a practice sometimes referred to as creating "HTTP-based APIs", "REST APIs", or just "HTTP APIs". This is done for a variety of reasons, including:<a href="#section-1-1" class="pilcrow">¶</a></p>
---
> <p id="section-1-1">Applications other than Web browsing often use HTTP <span>[<a href="#HTTP" class="cite xref">HTTP</a>]</span> as a substrate, a practice sometimes referred to as creating "HTTP-based APIs", "REST APIs", or just "HTTP APIs". This is done for a variety of reasons, including:<a href="#section-1-1" class="pilcrow">¶</a></p>
1472c1490
< <p id="section-1-8"><a href="#used" class="xref">Section 2</a> defines when this document applies, <a href="#overview" class="xref">Section 3</a> surveys the properties of HTTP that are important to preserve, and <a href="#bp" class="xref">Section 4</a> contains best practices for the specification of applications that use HTTP.<a href="#section-1-8" class="pilcrow">¶</a></p>
---
> <p id="section-1-8"><a href="#used" class="auto internal xref">Section 2</a> defines when this document applies, <a href="#overview" class="auto internal xref">Section 3</a> surveys the properties of HTTP that are important to preserve, and <a href="#bp" class="auto internal xref">Section 4</a> contains best practices for the specification of applications that use HTTP.<a href="#section-1-8" class="pilcrow">¶</a></p>
1474c1492
< <p id="section-1-10">This document obsoletes <span>[<a href="#RFC3205" class="xref">RFC3205</a>]</span> to reflect the experience and developments regarding HTTP in the intervening time.<a href="#section-1-10" class="pilcrow">¶</a></p>
---
> <p id="section-1-10">This document obsoletes <span>[<a href="#RFC3205" class="cite xref">RFC3205</a>]</span> to reflect the experience and developments regarding HTTP in the intervening time.<a href="#section-1-10" class="pilcrow">¶</a></p>
1483c1501
<     described in BCP 14 <span>[<a href="#RFC2119" class="xref">RFC2119</a>]</span> <span>[<a href="#RFC8174" class="xref">RFC8174</a>]</span> 
---
>     described in BCP 14 <span>[<a href="#RFC2119" class="cite xref">RFC2119</a>]</span> <span>[<a href="#RFC8174" class="cite xref">RFC8174</a>]</span> 
1500c1518
<         <li class="normal" id="section-2-2.3">uses an ALPN protocol ID <span>[<a href="#RFC7301" class="xref">RFC7301</a>]</span> that generically identifies HTTP (e.g., "http/1.1", "h2", "h3"), or<a href="#section-2-2.3" class="pilcrow">¶</a>
---
>         <li class="normal" id="section-2-2.3">uses an ALPN protocol ID <span>[<a href="#RFC7301" class="cite xref">RFC7301</a>]</span> that generically identifies HTTP (e.g., "http/1.1", "h2", "h3"), or<a href="#section-2-2.3" class="pilcrow">¶</a>
1505c1523
< <p id="section-2-3">Additionally, when a specification is using HTTP, all of the requirements of the HTTP protocol suite are in force (<span>[<a href="#HTTP" class="xref">HTTP</a>]</span> in particular but also other specifications such as the specific version of HTTP in use and any extensions in use).<a href="#section-2-3" class="pilcrow">¶</a></p>
---
> <p id="section-2-3">Additionally, when a specification is using HTTP, all of the requirements of the HTTP protocol suite are in force (<span>[<a href="#HTTP" class="cite xref">HTTP</a>]</span> in particular but also other specifications such as the specific version of HTTP in use and any extensions in use).<a href="#section-2-3" class="pilcrow">¶</a></p>
1514c1532
< <p id="section-2.1-2">Doing so permits more freedom to modify protocol operations, but at least a portion of the benefits outlined in <a href="#overview" class="xref">Section 3</a> are lost as most HTTP implementations won't be easily adaptable to these changes. The benefit of mindshare will also be lost.<a href="#section-2.1-2" class="pilcrow">¶</a></p>
---
> <p id="section-2.1-2">Doing so permits more freedom to modify protocol operations, but at least a portion of the benefits outlined in <a href="#overview" class="auto internal xref">Section 3</a> are lost as most HTTP implementations won't be easily adaptable to these changes. The benefit of mindshare will also be lost.<a href="#section-2.1-2" class="pilcrow">¶</a></p>
1539c1557
< <p id="section-3.1-7">See <a href="#resource" class="xref">Section 4.2</a> for more details.<a href="#section-3.1-7" class="pilcrow">¶</a></p>
---
> <p id="section-3.1-7">See <a href="#resource" class="auto internal xref">Section 4.2</a> for more details.<a href="#section-3.1-7" class="pilcrow">¶</a></p>
1548,1549c1566,1567
< <p id="section-3.2-2">As explained in <span>[<a href="#BCP190" class="xref">BCP190</a>]</span>, such "squatting" on a part of the URL space by a standard usurps the server's authority over its own resources, can cause deployment issues, and is therefore bad practice in standards.<a href="#section-3.2-2" class="pilcrow">¶</a></p>
< <p id="section-3.2-3">Instead of statically defining URI components like paths, it is <span class="bcp14">RECOMMENDED</span> that applications using HTTP define and use links <span>[<a href="#WEB-LINKING" class="xref">WEB-LINKING</a>]</span> to allow flexibility in deployment.<a href="#section-3.2-3" class="pilcrow">¶</a></p>
---
> <p id="section-3.2-2">As explained in <span>[<a href="#BCP190" class="cite xref">BCP190</a>]</span>, such "squatting" on a part of the URL space by a standard usurps the server's authority over its own resources, can cause deployment issues, and is therefore bad practice in standards.<a href="#section-3.2-2" class="pilcrow">¶</a></p>
> <p id="section-3.2-3">Instead of statically defining URI components like paths, it is <span class="bcp14">RECOMMENDED</span> that applications using HTTP define and use links <span>[<a href="#WEB-LINKING" class="cite xref">WEB-LINKING</a>]</span> to allow flexibility in deployment.<a href="#section-3.2-3" class="pilcrow">¶</a></p>
1554c1572
< <p id="section-3.2-8">See <a href="#specifying-urls" class="xref">Section 4.4</a> for more details.<a href="#section-3.2-8" class="pilcrow">¶</a></p>
---
> <p id="section-3.2-8">See <a href="#specifying-urls" class="auto internal xref">Section 4.4</a> for more details.<a href="#section-3.2-8" class="pilcrow">¶</a></p>
1566c1584
<           <li class="normal" id="section-3.3-2.2">Multiplexing (in HTTP/2 <span>[<a href="#HTTP2" class="xref">HTTP/2</a>]</span> and HTTP/3 <span>[<a href="#HTTP3" class="xref">HTTP/3</a>]</span>)<a href="#section-3.3-2.2" class="pilcrow">¶</a>
---
>           <li class="normal" id="section-3.3-2.2">Multiplexing (in HTTP/2 <span>[<a href="#HTTP2" class="cite xref">HTTP/2</a>]</span> and HTTP/3 <span>[<a href="#HTTP3" class="cite xref">HTTP/3</a>]</span>)<a href="#section-3.3-2.2" class="pilcrow">¶</a>
1585c1603
< <p id="section-3.3-3">An application that uses HTTP is encouraged to utilise the various features that the protocol offers so that its users receive the maximum benefit from those features and so that the application can be deployed in a variety of situations. This document does not require specific features to be used since the appropriate design trade-offs are highly specific to a given situation. However, following the practices in <a href="#bp" class="xref">Section 4</a> is a good starting point.<a href="#section-3.3-3" class="pilcrow">¶</a></p>
---
> <p id="section-3.3-3">An application that uses HTTP is encouraged to utilise the various features that the protocol offers so that its users receive the maximum benefit from those features and so that the application can be deployed in a variety of situations. This document does not require specific features to be used since the appropriate design trade-offs are highly specific to a given situation. However, following the practices in <a href="#bp" class="auto internal xref">Section 4</a> is a good starting point.<a href="#section-3.3-3" class="pilcrow">¶</a></p>
1601c1619
< <p id="section-4.1-1">Specifications should use <span>[<a href="#HTTP" class="xref">HTTP</a>]</span> as the primary reference for HTTP; it is not necessary to reference all of the specifications in the HTTP suite unless there are specific reasons to do so (e.g., a particular feature is called out).<a href="#section-4.1-1" class="pilcrow">¶</a></p>
---
> <p id="section-4.1-1">Specifications should use <span>[<a href="#HTTP" class="cite xref">HTTP</a>]</span> as the primary reference for HTTP; it is not necessary to reference all of the specifications in the HTTP suite unless there are specific reasons to do so (e.g., a particular feature is called out).<a href="#section-4.1-1" class="pilcrow">¶</a></p>
1605,1607c1623,1625
< <p id="section-4.1-5">When specifying examples of protocol interactions, applications should document both the request and response messages with complete header sections, preferably in HTTP/1.1 format <span>[<a href="#HTTP11" class="xref">HTTP/1.1</a>]</span>. For example:<a href="#section-4.1-5" class="pilcrow">¶</a></p>
< <div id="section-4.1-6">
< <pre class="lang-http-message sourcecode">
---
> <p id="section-4.1-5">When specifying examples of protocol interactions, applications should document both the request and response messages with complete header sections, preferably in HTTP/1.1 format <span>[<a href="#HTTP11" class="cite xref">HTTP/1.1</a>]</span>. For example:<a href="#section-4.1-5" class="pilcrow">¶</a></p>
> <div class="lang-http-message sourcecode" id="section-4.1-6">
> <pre>
1615,1616c1633,1634
< <div id="section-4.1-7">
< <pre class="lang-http-message sourcecode">
---
> <div class="lang-http-message sourcecode" id="section-4.1-7">
> <pre>
1634c1652
< <li class="normal" id="section-4.2-2.1">Media types <span>[<a href="#RFC6838" class="xref">RFC6838</a>]</span>, often based upon a format convention such as JSON <span>[<a href="#JSON" class="xref">JSON</a>]</span>;<a href="#section-4.2-2.1" class="pilcrow">¶</a>
---
> <li class="normal" id="section-4.2-2.1">Media types <span>[<a href="#RFC6838" class="cite xref">RFC6838</a>]</span>, often based upon a format convention such as JSON <span>[<a href="#JSON" class="cite xref">JSON</a>]</span>;<a href="#section-4.2-2.1" class="pilcrow">¶</a>
1636c1654
<           <li class="normal" id="section-4.2-2.2">HTTP header fields, per <a href="#headers" class="xref">Section 4.7</a>; and<a href="#section-4.2-2.2" class="pilcrow">¶</a>
---
>           <li class="normal" id="section-4.2-2.2">HTTP header fields, per <a href="#headers" class="auto internal xref">Section 4.7</a>; and<a href="#section-4.2-2.2" class="pilcrow">¶</a>
1638c1656
<           <li class="normal" id="section-4.2-2.3">The behaviour of resources, as identified by link relations <span>[<a href="#WEB-LINKING" class="xref">WEB-LINKING</a>]</span>.<a href="#section-4.2-2.3" class="pilcrow">¶</a>
---
>           <li class="normal" id="section-4.2-2.3">The behaviour of resources, as identified by link relations <span>[<a href="#WEB-LINKING" class="cite xref">WEB-LINKING</a>]</span>.<a href="#section-4.2-2.3" class="pilcrow">¶</a>
1665c1683
< <p id="section-4.2-7">Applications can also specify the use of URI Templates <span>[<a href="#URI-TEMPLATE" class="xref">URI-TEMPLATE</a>]</span> to allow clients to generate URLs based upon runtime data.<a href="#section-4.2-7" class="pilcrow">¶</a></p>
---
> <p id="section-4.2-7">Applications can also specify the use of URI Templates <span>[<a href="#URI-TEMPLATE" class="cite xref">URI-TEMPLATE</a>]</span> to allow clients to generate URLs based upon runtime data.<a href="#section-4.2-7" class="pilcrow">¶</a></p>
1674c1692
< <p id="section-4.3-2">One way to do this is to define it in terms of <span>[<a href="#FETCH" class="xref">FETCH</a>]</span> since that is the abstraction that browsers use for HTTP.<a href="#section-4.3-2" class="pilcrow">¶</a></p>
---
> <p id="section-4.3-2">One way to do this is to define it in terms of <span>[<a href="#FETCH" class="cite xref">FETCH</a>]</span> since that is the abstraction that browsers use for HTTP.<a href="#section-4.3-2" class="pilcrow">¶</a></p>
1678c1696
<           <dd style="margin-left: 1.5em" id="section-4.3-4.2">Applications need to specify how redirects are expected to be handled; see <a href="#redirects" class="xref">Section 4.6.1</a>.<a href="#section-4.3-4.2" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-4.3-4.2">Applications need to specify how redirects are expected to be handled; see <a href="#redirects" class="auto internal xref">Section 4.6.1</a>.<a href="#section-4.3-4.2" class="pilcrow">¶</a>
1682c1700
<           <dd style="margin-left: 1.5em" id="section-4.3-4.4">Applications using HTTP should explicitly reference the Cookie specification <span>[<a href="#COOKIES" class="xref">COOKIES</a>]</span> if they are required.<a href="#section-4.3-4.4" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-4.3-4.4">Applications using HTTP should explicitly reference the Cookie specification <span>[<a href="#COOKIES" class="cite xref">COOKIES</a>]</span> if they are required.<a href="#section-4.3-4.4" class="pilcrow">¶</a>
1686c1704
<           <dd style="margin-left: 1.5em" id="section-4.3-4.6">Applications using HTTP should specify that TLS certificates are to be checked according to <span><a href="https://www.rfc-editor.org/rfc/rfc9110#section-4.3.4" class="relref">Section 4.3.4</a> of [<a href="#HTTP" class="xref">HTTP</a>]</span> when HTTPS is used.<a href="#section-4.3-4.6" class="pilcrow">¶</a>
---
>           <dd style="margin-left: 1.5em" id="section-4.3-4.6">Applications using HTTP should specify that TLS certificates are to be checked according to <span><a href="https://rfc-editor.org/rfc/rfc9110#section-4.3.4" class="relref">Section 4.3.4</a> of [<a href="#HTTP" class="cite xref">HTTP</a>]</span> when HTTPS is used.<a href="#section-4.3-4.6" class="pilcrow">¶</a>
1690c1708
< <p id="section-4.3-5">Applications using HTTP should not require that clients statically support HTTP features that are usually negotiated. For example, requiring that clients support responses with a certain content coding (<span>[<a href="#HTTP" class="xref">HTTP</a>], <a href="https://www.rfc-editor.org/rfc/rfc9110#section-8.4.1" class="relref">Section 8.4.1</a></span>) instead of negotiating for it (<span>[<a href="#HTTP" class="xref">HTTP</a>], <a href="https://www.rfc-editor.org/rfc/rfc9110#section-12.5.3" class="relref">Section 12.5.3</a></span>) means that otherwise conformant clients cannot interoperate with the application. Applications can encourage the implementation of such features, though.<a href="#section-4.3-5" class="pilcrow">¶</a></p>
---
> <p id="section-4.3-5">Applications using HTTP should not require that clients statically support HTTP features that are usually negotiated. For example, requiring that clients support responses with a certain content coding (<span>[<a href="#HTTP" class="cite xref">HTTP</a>], <a href="https://rfc-editor.org/rfc/rfc9110#section-8.4.1" class="relref">Section 8.4.1</a></span>) instead of negotiating for it (<span>[<a href="#HTTP" class="cite xref">HTTP</a>], <a href="https://rfc-editor.org/rfc/rfc9110#section-12.5.3" class="relref">Section 12.5.3</a></span>) means that otherwise conformant clients cannot interoperate with the application. Applications can encourage the implementation of such features, though.<a href="#section-4.3-5" class="pilcrow">¶</a></p>
1698c1716
< <p id="section-4.4-1">In HTTP, the resources that clients interact with are identified with URLs <span>[<a href="#URL" class="xref">URL</a>]</span>. As <span>[<a href="#BCP190" class="xref">BCP190</a>]</span> explains, parts of the URL are designed to be under the control of the owner (also known as the "authority") of that server to give them the flexibility in deployment.<a href="#section-4.4-1" class="pilcrow">¶</a></p>
---
> <p id="section-4.4-1">In HTTP, the resources that clients interact with are identified with URLs <span>[<a href="#URL" class="cite xref">URL</a>]</span>. As <span>[<a href="#BCP190" class="cite xref">BCP190</a>]</span> explains, parts of the URL are designed to be under the control of the owner (also known as the "authority") of that server to give them the flexibility in deployment.<a href="#section-4.4-1" class="pilcrow">¶</a></p>
1710c1728
< <p id="section-4.4.1-5">An application cannot define a fixed prefix for its URL paths; see <span>[<a href="#BCP190" class="xref">BCP190</a>]</span>. Instead, a specification for such an application can use one of the following strategies:<a href="#section-4.4.1-5" class="pilcrow">¶</a></p>
---
> <p id="section-4.4.1-5">An application cannot define a fixed prefix for its URL paths; see <span>[<a href="#BCP190" class="cite xref">BCP190</a>]</span>. Instead, a specification for such an application can use one of the following strategies:<a href="#section-4.4.1-5" class="pilcrow">¶</a></p>
1712c1730
< <li class="normal" id="section-4.4.1-6.1">Register a well-known URI <span>[<a href="#WELL-KNOWN-URI" class="xref">WELL-KNOWN-URI</a>]</span> as an entry point for that application. This provides a fixed path on every potential server that will not collide with other applications.<a href="#section-4.4.1-6.1" class="pilcrow">¶</a>
---
> <li class="normal" id="section-4.4.1-6.1">Register a well-known URI <span>[<a href="#WELL-KNOWN-URI" class="cite xref">WELL-KNOWN-URI</a>]</span> as an entry point for that application. This provides a fixed path on every potential server that will not collide with other applications.<a href="#section-4.4.1-6.1" class="pilcrow">¶</a>
1714c1732
<             <li class="normal" id="section-4.4.1-6.2">Enable the server authority to convey a URI Template <span>[<a href="#URI-TEMPLATE" class="xref">URI-TEMPLATE</a>]</span> or similar mechanism for generating a URL for an entry point. For example, this might be done in a configuration document or other artefact.<a href="#section-4.4.1-6.2" class="pilcrow">¶</a>
---
>             <li class="normal" id="section-4.4.1-6.2">Enable the server authority to convey a URI Template <span>[<a href="#URI-TEMPLATE" class="cite xref">URI-TEMPLATE</a>]</span> or similar mechanism for generating a URL for an entry point. For example, this might be done in a configuration document or other artefact.<a href="#section-4.4.1-6.2" class="pilcrow">¶</a>
1726c1744
< <p id="section-4.4.2-1">Applications that use HTTP will typically employ the "http" and/or "https" URI schemes. "https" is <span class="bcp14">RECOMMENDED</span> to provide authentication, integrity, and confidentiality, as well as to mitigate pervasive monitoring attacks <span>[<a href="#RFC7258" class="xref">RFC7258</a>]</span>.<a href="#section-4.4.2-1" class="pilcrow">¶</a></p>
---
> <p id="section-4.4.2-1">Applications that use HTTP will typically employ the "http" and/or "https" URI schemes. "https" is <span class="bcp14">RECOMMENDED</span> to provide authentication, integrity, and confidentiality, as well as to mitigate pervasive monitoring attacks <span>[<a href="#RFC7258" class="cite xref">RFC7258</a>]</span>.<a href="#section-4.4.2-1" class="pilcrow">¶</a></p>
1729c1747
< <li class="normal" id="section-4.4.2-3.1">Unmodified Web browsers will not support the new scheme. While it is possible to register new URI schemes with Web browsers (e.g., registerProtocolHandler() in <span>[<a href="#HTML" class="xref">HTML</a>]</span>, as well as several proprietary approaches), support for these mechanisms is not shared by all browsers, and their capabilities vary.<a href="#section-4.4.2-3.1" class="pilcrow">¶</a>
---
> <li class="normal" id="section-4.4.2-3.1">Unmodified Web browsers will not support the new scheme. While it is possible to register new URI schemes with Web browsers (e.g., registerProtocolHandler() in <span>[<a href="#HTML" class="cite xref">HTML</a>]</span>, as well as several proprietary approaches), support for these mechanisms is not shared by all browsers, and their capabilities vary.<a href="#section-4.4.2-3.1" class="pilcrow">¶</a>
1737c1755
<             <li class="normal" id="section-4.4.2-3.5">Features that rely upon the URL's origin <span>[<a href="#RFC6454" class="xref">RFC6454</a>]</span>, such as the Web's same-origin policy, will be impacted by a change of scheme.<a href="#section-4.4.2-3.5" class="pilcrow">¶</a>
---
>             <li class="normal" id="section-4.4.2-3.5">Features that rely upon the URL's origin <span>[<a href="#RFC6454" class="cite xref">RFC6454</a>]</span>, such as the Web's same-origin policy, will be impacted by a change of scheme.<a href="#section-4.4.2-3.5" class="pilcrow">¶</a>
1739c1757
<             <li class="normal" id="section-4.4.2-3.6">HTTP-specific features such as cookies <span>[<a href="#COOKIES" class="xref">COOKIES</a>]</span>, authentication <span>[<a href="#HTTP" class="xref">HTTP</a>]</span>, caching <span>[<a href="#HTTP-CACHING" class="xref">HTTP-CACHING</a>]</span>, HTTP Strict Transport Security (HSTS) <span>[<a href="#RFC6797" class="xref">RFC6797</a>]</span>, and Cross-Origin Resource Sharing (CORS) <span>[<a href="#FETCH" class="xref">FETCH</a>]</span> might or might not work correctly, depending on how they are defined and implemented. Generally, they are designed and implemented with an assumption that the URL will always be "http" or "https".<a href="#section-4.4.2-3.6" class="pilcrow">¶</a>
---
>             <li class="normal" id="section-4.4.2-3.6">HTTP-specific features such as cookies <span>[<a href="#COOKIES" class="cite xref">COOKIES</a>]</span>, authentication <span>[<a href="#HTTP" class="cite xref">HTTP</a>]</span>, caching <span>[<a href="#HTTP-CACHING" class="cite xref">HTTP-CACHING</a>]</span>, HTTP Strict Transport Security (HSTS) <span>[<a href="#RFC6797" class="cite xref">RFC6797</a>]</span>, and Cross-Origin Resource Sharing (CORS) <span>[<a href="#FETCH" class="cite xref">FETCH</a>]</span> might or might not work correctly, depending on how they are defined and implemented. Generally, they are designed and implemented with an assumption that the URL will always be "http" or "https".<a href="#section-4.4.2-3.6" class="pilcrow">¶</a>
1741c1759
<             <li class="normal" id="section-4.4.2-3.7">Web features that require a secure context <span>[<a href="#SECCTXT" class="xref">SECCTXT</a>]</span> will likely treat a new scheme as insecure.<a href="#section-4.4.2-3.7" class="pilcrow">¶</a>
---
>             <li class="normal" id="section-4.4.2-3.7">Web features that require a secure context <span>[<a href="#SECCTXT" class="cite xref">SECCTXT</a>]</span> will likely treat a new scheme as insecure.<a href="#section-4.4.2-3.7" class="pilcrow">¶</a>
1744c1762
< <p id="section-4.4.2-4">See <span>[<a href="#RFC7595" class="xref">RFC7595</a>]</span> for more information about minting new URI schemes.<a href="#section-4.4.2-4" class="pilcrow">¶</a></p>
---
> <p id="section-4.4.2-4">See <span>[<a href="#RFC7595" class="cite xref">RFC7595</a>]</span> for more information about minting new URI schemes.<a href="#section-4.4.2-4" class="pilcrow">¶</a></p>
1753c1771
< <p id="section-4.4.3-2">If a non-default port is used, it needs to be reflected in the authority of all URLs for that resource; the only mechanism for changing a default port is changing the URI scheme (see <a href="#scheme" class="xref">Section 4.4.2</a>).<a href="#section-4.4.3-2" class="pilcrow">¶</a></p>
---
> <p id="section-4.4.3-2">If a non-default port is used, it needs to be reflected in the authority of all URLs for that resource; the only mechanism for changing a default port is changing the URI scheme (see <a href="#scheme" class="auto internal xref">Section 4.4.2</a>).<a href="#section-4.4.3-2" class="pilcrow">¶</a></p>
1755c1773
< <p id="section-4.4.3-4">See <span>[<a href="#RFC7605" class="xref">RFC7605</a>]</span> for further guidance.<a href="#section-4.4.3-4" class="pilcrow">¶</a></p>
---
> <p id="section-4.4.3-4">See <span>[<a href="#RFC7605" class="cite xref">RFC7605</a>]</span> for further guidance.<a href="#section-4.4.3-4" class="pilcrow">¶</a></p>
1766,1767c1784,1785
< <p id="section-4.5-2">New HTTP methods are rare; they are required to be registered in the "HTTP Method Registry" with IETF Review (see <span>[<a href="#HTTP" class="xref">HTTP</a>]</span>) and are also required to be generic. That means that they need to be potentially applicable to all resources, not just those of one application.<a href="#section-4.5-2" class="pilcrow">¶</a></p>
< <p id="section-4.5-3">While historically some applications (e.g., <span>[<a href="#RFC4791" class="xref">RFC4791</a>]</span>) have defined application-specific methods, <span>[<a href="#HTTP" class="xref">HTTP</a>]</span> now forbids this.<a href="#section-4.5-3" class="pilcrow">¶</a></p>
---
> <p id="section-4.5-2">New HTTP methods are rare; they are required to be registered in the "HTTP Method Registry" with IETF Review (see <span>[<a href="#HTTP" class="cite xref">HTTP</a>]</span>) and are also required to be generic. That means that they need to be potentially applicable to all resources, not just those of one application.<a href="#section-4.5-2" class="pilcrow">¶</a></p>
> <p id="section-4.5-3">While historically some applications (e.g., <span>[<a href="#RFC4791" class="cite xref">RFC4791</a>]</span>) have defined application-specific methods, <span>[<a href="#HTTP" class="cite xref">HTTP</a>]</span> now forbids this.<a href="#section-4.5-3" class="pilcrow">¶</a></p>
1776c1794
< <p id="section-4.5.1-3">While this is not an issue for short queries, it can become one for larger query terms or those that need to sustain a high rate of requests. Additionally, some HTTP implementations limit the size of URLs they support, although modern HTTP software has much more generous limits than previously (typically, considerably more than 8000 octets, as required by <span>[<a href="#HTTP" class="xref">HTTP</a>]</span>).<a href="#section-4.5.1-3" class="pilcrow">¶</a></p>
---
> <p id="section-4.5.1-3">While this is not an issue for short queries, it can become one for larger query terms or those that need to sustain a high rate of requests. Additionally, some HTTP implementations limit the size of URLs they support, although modern HTTP software has much more generous limits than previously (typically, considerably more than 8000 octets, as required by <span>[<a href="#HTTP" class="cite xref">HTTP</a>]</span>).<a href="#section-4.5.1-3" class="pilcrow">¶</a></p>
1778,1779c1796,1797
< <p id="section-4.5.1-5">Processing of GET requests should not change the application's state or have other side effects that might be significant to the client since implementations can and do retry HTTP GET requests that fail. Furthermore, some GET requests protected by TLS early data might be vulnerable to replay attacks (see <span>[<a href="#RFC8470" class="xref">RFC8470</a>]</span>). Note that this does not include logging and similar functions; see <span>[<a href="#HTTP" class="xref">HTTP</a>], <a href="https://www.rfc-editor.org/rfc/rfc9110#section-9.2.1" class="relref">Section 9.2.1</a></span>.<a href="#section-4.5.1-5" class="pilcrow">¶</a></p>
< <p id="section-4.5.1-6">Finally, note that while the generic HTTP syntax allows a GET request message to contain content, the purpose is to allow message parsers to be generic; per <span>[<a href="#HTTP" class="xref">HTTP</a>], <a href="https://www.rfc-editor.org/rfc/rfc9110#section-9.3.1" class="relref">Section 9.3.1</a></span>, content in a GET is not recommended, has no meaning, and will be either ignored or rejected by generic HTTP software (such as intermediaries, caches, servers, and client libraries).<a href="#section-4.5.1-6" class="pilcrow">¶</a></p>
---
> <p id="section-4.5.1-5">Processing of GET requests should not change the application's state or have other side effects that might be significant to the client since implementations can and do retry HTTP GET requests that fail. Furthermore, some GET requests protected by TLS early data might be vulnerable to replay attacks (see <span>[<a href="#RFC8470" class="cite xref">RFC8470</a>]</span>). Note that this does not include logging and similar functions; see <span>[<a href="#HTTP" class="cite xref">HTTP</a>], <a href="https://rfc-editor.org/rfc/rfc9110#section-9.2.1" class="relref">Section 9.2.1</a></span>.<a href="#section-4.5.1-5" class="pilcrow">¶</a></p>
> <p id="section-4.5.1-6">Finally, note that while the generic HTTP syntax allows a GET request message to contain content, the purpose is to allow message parsers to be generic; per <span>[<a href="#HTTP" class="cite xref">HTTP</a>], <a href="https://rfc-editor.org/rfc/rfc9110#section-9.3.1" class="relref">Section 9.3.1</a></span>, content in a GET is not recommended, has no meaning, and will be either ignored or rejected by generic HTTP software (such as intermediaries, caches, servers, and client libraries).<a href="#section-4.5.1-6" class="pilcrow">¶</a></p>
1787c1805
< <p id="section-4.5.2-1">The OPTIONS method was defined for metadata retrieval and is used both by Web Distributed Authoring and Versioning (WebDAV) <span>[<a href="#RFC4918" class="xref">RFC4918</a>]</span> and CORS <span>[<a href="#FETCH" class="xref">FETCH</a>]</span>. Because HTTP-based APIs often need to retrieve metadata about resources, it is often considered for their use.<a href="#section-4.5.2-1" class="pilcrow">¶</a></p>
---
> <p id="section-4.5.2-1">The OPTIONS method was defined for metadata retrieval and is used both by Web Distributed Authoring and Versioning (WebDAV) <span>[<a href="#RFC4918" class="cite xref">RFC4918</a>]</span> and CORS <span>[<a href="#FETCH" class="cite xref">FETCH</a>]</span>. Because HTTP-based APIs often need to retrieve metadata about resources, it is often considered for their use.<a href="#section-4.5.2-1" class="pilcrow">¶</a></p>
1801c1819
< <li class="normal" id="section-4.5.2-5.1">For server-wide metadata, create a well-known URI <span>[<a href="#WELL-KNOWN-URI" class="xref">WELL-KNOWN-URI</a>]</span> or use an already existing one if appropriate (e.g., host-meta <span>[<a href="#RFC6415" class="xref">RFC6415</a>]</span>).<a href="#section-4.5.2-5.1" class="pilcrow">¶</a>
---
> <li class="normal" id="section-4.5.2-5.1">For server-wide metadata, create a well-known URI <span>[<a href="#WELL-KNOWN-URI" class="cite xref">WELL-KNOWN-URI</a>]</span> or use an already existing one if appropriate (e.g., host-meta <span>[<a href="#RFC6415" class="cite xref">RFC6415</a>]</span>).<a href="#section-4.5.2-5.1" class="pilcrow">¶</a>
1803c1821
<             <li class="normal" id="section-4.5.2-5.2">For metadata about a specific resource, create a separate resource and link to it using a Link response header field or a link serialised into the response's content. See <span>[<a href="#WEB-LINKING" class="xref">WEB-LINKING</a>]</span>. Note that the Link header field is available on HEAD responses, which is useful if the client wants to discover a resource's capabilities before they interact with it.<a href="#section-4.5.2-5.2" class="pilcrow">¶</a>
---
>             <li class="normal" id="section-4.5.2-5.2">For metadata about a specific resource, create a separate resource and link to it using a Link response header field or a link serialised into the response's content. See <span>[<a href="#WEB-LINKING" class="cite xref">WEB-LINKING</a>]</span>. Note that the Link header field is available on HEAD responses, which is useful if the client wants to discover a resource's capabilities before they interact with it.<a href="#section-4.5.2-5.2" class="pilcrow">¶</a>
1819c1837
< <p id="section-4.6-5">To distinguish between multiple error conditions that are mapped to the same status code and to avoid the misattribution issue outlined above, applications using HTTP should convey finer-grained error information in the response's message content and/or header fields. <span>[<a href="#PROBLEM-DETAILS" class="xref">PROBLEM-DETAILS</a>]</span> provides one way to do so.<a href="#section-4.6-5" class="pilcrow">¶</a></p>
---
> <p id="section-4.6-5">To distinguish between multiple error conditions that are mapped to the same status code and to avoid the misattribution issue outlined above, applications using HTTP should convey finer-grained error information in the response's message content and/or header fields. <span>[<a href="#PROBLEM-DETAILS" class="cite xref">PROBLEM-DETAILS</a>]</span> provides one way to do so.<a href="#section-4.6-5" class="pilcrow">¶</a></p>
1821,1822c1839,1840
< <p id="section-4.6-7">Applications using HTTP <span class="bcp14">MUST NOT</span> re-specify the semantics of HTTP status codes, even if it is only by copying their definition. It is <span class="bcp14">NOT RECOMMENDED</span> they require specific reason phrases to be used; the reason phrase has no function in HTTP, is not guaranteed to be preserved by implementations, and is not carried at all in the HTTP/2 <span>[<a href="#HTTP2" class="xref">HTTP/2</a>]</span> message format.<a href="#section-4.6-7" class="pilcrow">¶</a></p>
< <p id="section-4.6-8">Applications <span class="bcp14">MUST</span> only use registered HTTP status codes. As with methods, new HTTP status codes are rare and required (by <span>[<a href="#HTTP" class="xref">HTTP</a>]</span>) to be registered with IETF Review. Similarly, HTTP status codes are generic; they are required (by <span>[<a href="#HTTP" class="xref">HTTP</a>]</span>) to be potentially applicable to all resources, not just to those of one application.<a href="#section-4.6-8" class="pilcrow">¶</a></p>
---
> <p id="section-4.6-7">Applications using HTTP <span class="bcp14">MUST NOT</span> re-specify the semantics of HTTP status codes, even if it is only by copying their definition. It is <span class="bcp14">NOT RECOMMENDED</span> they require specific reason phrases to be used; the reason phrase has no function in HTTP, is not guaranteed to be preserved by implementations, and is not carried at all in the HTTP/2 <span>[<a href="#HTTP2" class="cite xref">HTTP/2</a>]</span> message format.<a href="#section-4.6-7" class="pilcrow">¶</a></p>
> <p id="section-4.6-8">Applications <span class="bcp14">MUST</span> only use registered HTTP status codes. As with methods, new HTTP status codes are rare and required (by <span>[<a href="#HTTP" class="cite xref">HTTP</a>]</span>) to be registered with IETF Review. Similarly, HTTP status codes are generic; they are required (by <span>[<a href="#HTTP" class="cite xref">HTTP</a>]</span>) to be potentially applicable to all resources, not just to those of one application.<a href="#section-4.6-8" class="pilcrow">¶</a></p>
1829c1847
< <p id="section-4.6.1-1">The 3xx series of status codes specified in <span><a href="https://www.rfc-editor.org/rfc/rfc9110#section-15.4" class="relref">Section 15.4</a> of [<a href="#HTTP" class="xref">HTTP</a>]</span> directs the user agent to another resource to satisfy the request. The most common of these are 301, 302, 307, and 308, all of which use the Location response header field to indicate where the client should resend the request.<a href="#section-4.6.1-1" class="pilcrow">¶</a></p>
---
> <p id="section-4.6.1-1">The 3xx series of status codes specified in <span><a href="https://rfc-editor.org/rfc/rfc9110#section-15.4" class="relref">Section 15.4</a> of [<a href="#HTTP" class="cite xref">HTTP</a>]</span> directs the user agent to another resource to satisfy the request. The most common of these are 301, 302, 307, and 308, all of which use the Location response header field to indicate where the client should resend the request.<a href="#section-4.6.1-1" class="pilcrow">¶</a></p>
1861c1879
< <p id="section-4.6.1-7">As noted in <span>[<a href="#HTTP" class="xref">HTTP</a>]</span>, a user agent is allowed to automatically follow a 3xx redirect that has a Location response header field, even if they don't understand the semantics of the specific status code. However, they aren't required to do so; therefore, if an application using HTTP desires redirects to be automatically followed, it needs to explicitly specify the circumstances when this is required.<a href="#section-4.6.1-7" class="pilcrow">¶</a></p>
---
> <p id="section-4.6.1-7">As noted in <span>[<a href="#HTTP" class="cite xref">HTTP</a>]</span>, a user agent is allowed to automatically follow a 3xx redirect that has a Location response header field, even if they don't understand the semantics of the specific status code. However, they aren't required to do so; therefore, if an application using HTTP desires redirects to be automatically followed, it needs to explicitly specify the circumstances when this is required.<a href="#section-4.6.1-7" class="pilcrow">¶</a></p>
1864c1882
< Generally, when a redirected request is made, its header fields are copied from the original request. However, they can be modified by various mechanisms; e.g., sent Authorization (<span>[<a href="#HTTP" class="xref">HTTP</a>], <a href="https://www.rfc-editor.org/rfc/rfc9110#section-11" class="relref">Section 11</a></span>) and Cookie (<span>[<a href="#COOKIES" class="xref">COOKIES</a>]</span>) header fields will change if the origin (and sometimes path) of the request changes. An application using HTTP should specify if any request header fields that it defines need to be modified or removed upon a redirect; however, this behaviour cannot be relied upon since a generic client (like a browser) will be unaware of such requirements.<a href="#section-4.6.1-9" class="pilcrow">¶</a></p>
---
> Generally, when a redirected request is made, its header fields are copied from the original request. However, they can be modified by various mechanisms; e.g., sent Authorization (<span>[<a href="#HTTP" class="cite xref">HTTP</a>], <a href="https://rfc-editor.org/rfc/rfc9110#section-11" class="relref">Section 11</a></span>) and Cookie (<span>[<a href="#COOKIES" class="cite xref">COOKIES</a>]</span>) header fields will change if the origin (and sometimes path) of the request changes. An application using HTTP should specify if any request header fields that it defines need to be modified or removed upon a redirect; however, this behaviour cannot be relied upon since a generic client (like a browser) will be unaware of such requirements.<a href="#section-4.6.1-9" class="pilcrow">¶</a></p>
1884,1885c1902,1903
< <p id="section-4.7-4">New header fields <span class="bcp14">MUST</span> be registered, per <span><a href="https://www.rfc-editor.org/rfc/rfc9110#section-16.3" class="relref">Section 16.3</a> of [<a href="#HTTP" class="xref">HTTP</a>]</span>.<a href="#section-4.7-4" class="pilcrow">¶</a></p>
< <p id="section-4.7-5">See <span><a href="https://www.rfc-editor.org/rfc/rfc9110#section-16.3.2" class="relref">Section 16.3.2</a> of [<a href="#HTTP" class="xref">HTTP</a>]</span> for guidelines to consider when minting new header fields. <span>[<a href="#STRUCTURED-FIELDS" class="xref">STRUCTURED-FIELDS</a>]</span> provides a common structure for new header fields and avoids many issues in their parsing and handling; it is <span class="bcp14">RECOMMENDED</span> that new header fields use it.<a href="#section-4.7-5" class="pilcrow">¶</a></p>
---
> <p id="section-4.7-4">New header fields <span class="bcp14">MUST</span> be registered, per <span><a href="https://rfc-editor.org/rfc/rfc9110#section-16.3" class="relref">Section 16.3</a> of [<a href="#HTTP" class="cite xref">HTTP</a>]</span>.<a href="#section-4.7-4" class="pilcrow">¶</a></p>
> <p id="section-4.7-5">See <span><a href="https://rfc-editor.org/rfc/rfc9110#section-16.3.2" class="relref">Section 16.3.2</a> of [<a href="#HTTP" class="cite xref">HTTP</a>]</span> for guidelines to consider when minting new header fields. <span>[<a href="#STRUCTURED-FIELDS" class="cite xref">STRUCTURED-FIELDS</a>]</span> provides a common structure for new header fields and avoids many issues in their parsing and handling; it is <span class="bcp14">RECOMMENDED</span> that new header fields use it.<a href="#section-4.7-5" class="pilcrow">¶</a></p>
1887c1905
< <p id="section-4.7-7">For example, if the "example" application needs to create three header fields, they might be called "example-foo", "example-bar", and "example-baz". Note that the primary motivation here is to avoid consuming more generic field names, not to reserve a portion of the namespace for the application; see <span>[<a href="#RFC6648" class="xref">RFC6648</a>]</span> for related considerations.<a href="#section-4.7-7" class="pilcrow">¶</a></p>
---
> <p id="section-4.7-7">For example, if the "example" application needs to create three header fields, they might be called "example-foo", "example-bar", and "example-baz". Note that the primary motivation here is to avoid consuming more generic field names, not to reserve a portion of the namespace for the application; see <span>[<a href="#RFC6648" class="cite xref">RFC6648</a>]</span> for related considerations.<a href="#section-4.7-7" class="pilcrow">¶</a></p>
1889,1890c1907,1908
< <p id="section-4.7-9">See <a href="#caching" class="xref">Section 4.9</a> for the interaction between header fields and HTTP caching; in particular, request header fields that are used to choose (per <span><a href="https://www.rfc-editor.org/rfc/rfc9111#section-4.1" class="relref">Section 4.1</a> of [<a href="#HTTP-CACHING" class="xref">HTTP-CACHING</a>]</span>) a response have impact there and need to be carefully considered.<a href="#section-4.7-9" class="pilcrow">¶</a></p>
< <p id="section-4.7-10">See <a href="#state" class="xref">Section 4.10</a> for considerations regarding header fields that carry application state (e.g., Cookie).<a href="#section-4.7-10" class="pilcrow">¶</a></p>
---
> <p id="section-4.7-9">See <a href="#caching" class="auto internal xref">Section 4.9</a> for the interaction between header fields and HTTP caching; in particular, request header fields that are used to choose (per <span><a href="https://rfc-editor.org/rfc/rfc9111#section-4.1" class="relref">Section 4.1</a> of [<a href="#HTTP-CACHING" class="cite xref">HTTP-CACHING</a>]</span>) a response have impact there and need to be carefully considered.<a href="#section-4.7-9" class="pilcrow">¶</a></p>
> <p id="section-4.7-10">See <a href="#state" class="auto internal xref">Section 4.10</a> for considerations regarding header fields that carry application state (e.g., Cookie).<a href="#section-4.7-10" class="pilcrow">¶</a></p>
1898,1899c1916,1917
< <p id="section-4.8-1">Common syntactic conventions for message contents include JSON <span>[<a href="#JSON" class="xref">JSON</a>]</span>, XML <span>[<a href="#XML" class="xref">XML</a>]</span>, and Concise Binary Object Representation (CBOR) <span>[<a href="#RFC8949" class="xref">RFC8949</a>]</span>. Best practices for their use are out of scope for this document.<a href="#section-4.8-1" class="pilcrow">¶</a></p>
< <p id="section-4.8-2">Applications should register distinct media types for each format they define; this makes it possible to identify them unambiguously and negotiate for their use. See <span>[<a href="#RFC6838" class="xref">RFC6838</a>]</span> for more information.<a href="#section-4.8-2" class="pilcrow">¶</a></p>
---
> <p id="section-4.8-1">Common syntactic conventions for message contents include JSON <span>[<a href="#JSON" class="cite xref">JSON</a>]</span>, XML <span>[<a href="#XML" class="cite xref">XML</a>]</span>, and Concise Binary Object Representation (CBOR) <span>[<a href="#RFC8949" class="cite xref">RFC8949</a>]</span>. Best practices for their use are out of scope for this document.<a href="#section-4.8-1" class="pilcrow">¶</a></p>
> <p id="section-4.8-2">Applications should register distinct media types for each format they define; this makes it possible to identify them unambiguously and negotiate for their use. See <span>[<a href="#RFC6838" class="cite xref">RFC6838</a>]</span> for more information.<a href="#section-4.8-2" class="pilcrow">¶</a></p>
1907c1925
< <p id="section-4.9-1">HTTP caching <span>[<a href="#HTTP-CACHING" class="xref">HTTP-CACHING</a>]</span> is one of the primary benefits of using HTTP for applications; it provides scalability, reduces latency, and improves reliability. Furthermore, HTTP caches are readily available in browsers and other clients, networks as forward and reverse proxies, content delivery networks, and as part of server software.<a href="#section-4.9-1" class="pilcrow">¶</a></p>
---
> <p id="section-4.9-1">HTTP caching <span>[<a href="#HTTP-CACHING" class="cite xref">HTTP-CACHING</a>]</span> is one of the primary benefits of using HTTP for applications; it provides scalability, reduces latency, and improves reliability. Furthermore, HTTP caches are readily available in browsers and other clients, networks as forward and reverse proxies, content delivery networks, and as part of server software.<a href="#section-4.9-1" class="pilcrow">¶</a></p>
1914,1918c1932,1936
< <p id="section-4.9.1-1">Assigning even a short freshness lifetime (<span>[<a href="#HTTP-CACHING" class="xref">HTTP-CACHING</a>], <a href="https://www.rfc-editor.org/rfc/rfc9111#section-4.2" class="relref">Section 4.2</a></span>) -- e.g., 5 seconds -- allows a response to be reused to satisfy multiple clients and/or a single client making the same request repeatedly. In general, if it is safe to reuse something, consider assigning a freshness lifetime.<a href="#section-4.9.1-1" class="pilcrow">¶</a></p>
< <p id="section-4.9.1-2">The most common method for specifying freshness is the max-age response directive (<span>[<a href="#HTTP-CACHING" class="xref">HTTP-CACHING</a>], <a href="https://www.rfc-editor.org/rfc/rfc9111#section-5.2.2.1" class="relref">Section 5.2.2.1</a></span>). The Expires header field (<span>[<a href="#HTTP-CACHING" class="xref">HTTP-CACHING</a>], <a href="https://www.rfc-editor.org/rfc/rfc9111#section-5.3" class="relref">Section 5.3</a></span>) can also be used, but it is not necessary; all modern cache implementations support the Cache-Control header field, and specifying freshness as a delta is usually more convenient and less error-prone.<a href="#section-4.9.1-2" class="pilcrow">¶</a></p>
< <p id="section-4.9.1-3">It is not necessary to add the public response directive (<span>[<a href="#HTTP-CACHING" class="xref">HTTP-CACHING</a>], <a href="https://www.rfc-editor.org/rfc/rfc9111#section-5.2.2.9" class="relref">Section 5.2.2.9</a></span>) to cache most responses; it is only necessary when it's desirable to store an authenticated response, or when the status code isn't understood by the cache and there isn't explicit freshness information available.<a href="#section-4.9.1-3" class="pilcrow">¶</a></p>
< <p id="section-4.9.1-4">In some situations, responses without explicit cache freshness directives will be stored and served using a heuristic freshness lifetime; see <span>[<a href="#HTTP-CACHING" class="xref">HTTP-CACHING</a>], <a href="https://www.rfc-editor.org/rfc/rfc9111#section-4.2.2" class="relref">Section 4.2.2</a></span>. As the heuristic is not under the control of the application, it is generally preferable to set an explicit freshness lifetime or make the response explicitly uncacheable.<a href="#section-4.9.1-4" class="pilcrow">¶</a></p>
< <p id="section-4.9.1-5">If caching of a response is not desired, the appropriate cache response directive is no-store. Other directives are not necessary, and no-store only needs to be sent in situations where the response might be cached; see <span>[<a href="#HTTP-CACHING" class="xref">HTTP-CACHING</a>], <a href="https://www.rfc-editor.org/rfc/rfc9111#section-3" class="relref">Section 3</a></span>. Note that the no-cache directive allows a response to be stored, just not reused by a cache without validation; it does not prevent caching (despite its name).<a href="#section-4.9.1-5" class="pilcrow">¶</a></p>
---
> <p id="section-4.9.1-1">Assigning even a short freshness lifetime (<span>[<a href="#HTTP-CACHING" class="cite xref">HTTP-CACHING</a>], <a href="https://rfc-editor.org/rfc/rfc9111#section-4.2" class="relref">Section 4.2</a></span>) -- e.g., 5 seconds -- allows a response to be reused to satisfy multiple clients and/or a single client making the same request repeatedly. In general, if it is safe to reuse something, consider assigning a freshness lifetime.<a href="#section-4.9.1-1" class="pilcrow">¶</a></p>
> <p id="section-4.9.1-2">The most common method for specifying freshness is the max-age response directive (<span>[<a href="#HTTP-CACHING" class="cite xref">HTTP-CACHING</a>], <a href="https://rfc-editor.org/rfc/rfc9111#section-5.2.2.1" class="relref">Section 5.2.2.1</a></span>). The Expires header field (<span>[<a href="#HTTP-CACHING" class="cite xref">HTTP-CACHING</a>], <a href="https://rfc-editor.org/rfc/rfc9111#section-5.3" class="relref">Section 5.3</a></span>) can also be used, but it is not necessary; all modern cache implementations support the Cache-Control header field, and specifying freshness as a delta is usually more convenient and less error-prone.<a href="#section-4.9.1-2" class="pilcrow">¶</a></p>
> <p id="section-4.9.1-3">It is not necessary to add the public response directive (<span>[<a href="#HTTP-CACHING" class="cite xref">HTTP-CACHING</a>], <a href="https://rfc-editor.org/rfc/rfc9111#section-5.2.2.9" class="relref">Section 5.2.2.9</a></span>) to cache most responses; it is only necessary when it's desirable to store an authenticated response, or when the status code isn't understood by the cache and there isn't explicit freshness information available.<a href="#section-4.9.1-3" class="pilcrow">¶</a></p>
> <p id="section-4.9.1-4">In some situations, responses without explicit cache freshness directives will be stored and served using a heuristic freshness lifetime; see <span>[<a href="#HTTP-CACHING" class="cite xref">HTTP-CACHING</a>], <a href="https://rfc-editor.org/rfc/rfc9111#section-4.2.2" class="relref">Section 4.2.2</a></span>. As the heuristic is not under the control of the application, it is generally preferable to set an explicit freshness lifetime or make the response explicitly uncacheable.<a href="#section-4.9.1-4" class="pilcrow">¶</a></p>
> <p id="section-4.9.1-5">If caching of a response is not desired, the appropriate cache response directive is no-store. Other directives are not necessary, and no-store only needs to be sent in situations where the response might be cached; see <span>[<a href="#HTTP-CACHING" class="cite xref">HTTP-CACHING</a>], <a href="https://rfc-editor.org/rfc/rfc9111#section-3" class="relref">Section 3</a></span>. Note that the no-cache directive allows a response to be stored, just not reused by a cache without validation; it does not prevent caching (despite its name).<a href="#section-4.9.1-5" class="pilcrow">¶</a></p>
1920,1921c1938,1939
< <div id="section-4.9.1-7">
< <pre class="lang-http-message sourcecode">
---
> <div class="lang-http-message sourcecode" id="section-4.9.1-7">
> <pre>
1937,1938c1955,1956
< <p id="section-4.9.2-2">If doing so is not suitable for a given response, the origin should send the must-revalidate cache directive. See <span><a href="https://www.rfc-editor.org/rfc/rfc9111#section-4.2.4" class="relref">Section 4.2.4</a> of [<a href="#HTTP-CACHING" class="xref">HTTP-CACHING</a>]</span> and also <span>[<a href="#RFC5861" class="xref">RFC5861</a>]</span> for additional controls over stale content.<a href="#section-4.9.2-2" class="pilcrow">¶</a></p>
< <p id="section-4.9.2-3">Stale responses can be refreshed by assigning a validator, saving both transfer bandwidth and latency for large responses; see <span><a href="https://www.rfc-editor.org/rfc/rfc9110#section-13" class="relref">Section 13</a> of [<a href="#HTTP" class="xref">HTTP</a>]</span>.<a href="#section-4.9.2-3" class="pilcrow">¶</a></p>
---
> <p id="section-4.9.2-2">If doing so is not suitable for a given response, the origin should send the must-revalidate cache directive. See <span><a href="https://rfc-editor.org/rfc/rfc9111#section-4.2.4" class="relref">Section 4.2.4</a> of [<a href="#HTTP-CACHING" class="cite xref">HTTP-CACHING</a>]</span> and also <span>[<a href="#RFC5861" class="cite xref">RFC5861</a>]</span> for additional controls over stale content.<a href="#section-4.9.2-2" class="pilcrow">¶</a></p>
> <p id="section-4.9.2-3">Stale responses can be refreshed by assigning a validator, saving both transfer bandwidth and latency for large responses; see <span><a href="https://rfc-editor.org/rfc/rfc9110#section-13" class="relref">Section 13</a> of [<a href="#HTTP" class="cite xref">HTTP</a>]</span>.<a href="#section-4.9.2-3" class="pilcrow">¶</a></p>
1947c1965
< <p id="section-4.9.3-2">In particular, application authors need to consider how responses that are not freshly obtained from the origin server should be handled; if they have a concept like a validity period, this will need to be calculated considering the age of the response (see <span>[<a href="#HTTP-CACHING" class="xref">HTTP-CACHING</a>], <a href="https://www.rfc-editor.org/rfc/rfc9111#section-4.2.3" class="relref">Section 4.2.3</a></span>).<a href="#section-4.9.3-2" class="pilcrow">¶</a></p>
---
> <p id="section-4.9.3-2">In particular, application authors need to consider how responses that are not freshly obtained from the origin server should be handled; if they have a concept like a validity period, this will need to be calculated considering the age of the response (see <span>[<a href="#HTTP-CACHING" class="cite xref">HTTP-CACHING</a>], <a href="https://rfc-editor.org/rfc/rfc9111#section-4.2.3" class="relref">Section 4.2.3</a></span>).<a href="#section-4.9.3-2" class="pilcrow">¶</a></p>
1956c1974
< <p id="section-4.9.4-1">If an application uses a request header field to change the response's header fields or content, authors should point out that this has implications for caching; in general, such resources need to either make their responses uncacheable (e.g., with the no-store cache directive defined in <span>[<a href="#HTTP-CACHING" class="xref">HTTP-CACHING</a>], <a href="https://www.rfc-editor.org/rfc/rfc9111#section-5.2.2.5" class="relref">Section 5.2.2.5</a></span>) or send the Vary response header field (<span>[<a href="#HTTP" class="xref">HTTP</a>], <a href="https://www.rfc-editor.org/rfc/rfc9110#section-12.5.5" class="relref">Section 12.5.5</a></span>) on all responses from that resource (including the "default" response).<a href="#section-4.9.4-1" class="pilcrow">¶</a></p>
---
> <p id="section-4.9.4-1">If an application uses a request header field to change the response's header fields or content, authors should point out that this has implications for caching; in general, such resources need to either make their responses uncacheable (e.g., with the no-store cache directive defined in <span>[<a href="#HTTP-CACHING" class="cite xref">HTTP-CACHING</a>], <a href="https://rfc-editor.org/rfc/rfc9111#section-5.2.2.5" class="relref">Section 5.2.2.5</a></span>) or send the Vary response header field (<span>[<a href="#HTTP" class="cite xref">HTTP</a>], <a href="https://rfc-editor.org/rfc/rfc9110#section-12.5.5" class="relref">Section 12.5.5</a></span>) on all responses from that resource (including the "default" response).<a href="#section-4.9.4-1" class="pilcrow">¶</a></p>
1958,1959c1976,1977
< <div id="section-4.9.4-3">
< <pre class="lang-http-message sourcecode">
---
> <div class="lang-http-message sourcecode" id="section-4.9.4-3">
> <pre>
1979c1997
< <p id="section-4.10-1">Applications can use stateful cookies <span>[<a href="#COOKIES" class="xref">COOKIES</a>]</span> to identify a client and/or store client-specific data to contextualise requests.<a href="#section-4.10-1" class="pilcrow">¶</a></p>
---
> <p id="section-4.10-1">Applications can use stateful cookies <span>[<a href="#COOKIES" class="cite xref">COOKIES</a>]</span> to identify a client and/or store client-specific data to contextualise requests.<a href="#section-4.10-1" class="pilcrow">¶</a></p>
1989,1990c2007,2008
< <p id="section-4.11-2">In HTTP/1 <span>[<a href="#HTTP11" class="xref">HTTP/1.1</a>]</span>, parallel requests are most often supported by opening multiple connections. Application performance can be impacted when too many simultaneous connections are used because connections' congestion control will not be coordinated. Furthermore, it can be difficult for applications to decide when to issue and which connection to use for a given request, further impacting performance.<a href="#section-4.11-2" class="pilcrow">¶</a></p>
< <p id="section-4.11-3">HTTP/2 <span>[<a href="#HTTP2" class="xref">HTTP/2</a>]</span> and HTTP/3 <span>[<a href="#HTTP3" class="xref">HTTP/3</a>]</span> offer multiplexing to applications, removing the need to use multiple connections. However, application performance can still be significantly affected by how the server chooses to prioritize responses. Depending on the application, it might be best for the server to determine the priority of responses or for the client to hint its priorities to the server (see, e.g., <span>[<a href="#HTTP-PRIORITY" class="xref">HTTP-PRIORITY</a>]</span>).<a href="#section-4.11-3" class="pilcrow">¶</a></p>
---
> <p id="section-4.11-2">In HTTP/1 <span>[<a href="#HTTP11" class="cite xref">HTTP/1.1</a>]</span>, parallel requests are most often supported by opening multiple connections. Application performance can be impacted when too many simultaneous connections are used because connections' congestion control will not be coordinated. Furthermore, it can be difficult for applications to decide when to issue and which connection to use for a given request, further impacting performance.<a href="#section-4.11-2" class="pilcrow">¶</a></p>
> <p id="section-4.11-3">HTTP/2 <span>[<a href="#HTTP2" class="cite xref">HTTP/2</a>]</span> and HTTP/3 <span>[<a href="#HTTP3" class="cite xref">HTTP/3</a>]</span> offer multiplexing to applications, removing the need to use multiple connections. However, application performance can still be significantly affected by how the server chooses to prioritize responses. Depending on the application, it might be best for the server to determine the priority of responses or for the client to hint its priorities to the server (see, e.g., <span>[<a href="#HTTP-PRIORITY" class="cite xref">HTTP-PRIORITY</a>]</span>).<a href="#section-4.11-3" class="pilcrow">¶</a></p>
2000,2002c2018,2020
< <p id="section-4.12-1">Applications can use HTTP authentication (<span><a href="https://www.rfc-editor.org/rfc/rfc9110#section-11" class="relref">Section 11</a> of [<a href="#HTTP" class="xref">HTTP</a>]</span>) to identify clients. Per <span>[<a href="#RFC7617" class="xref">RFC7617</a>]</span>, the Basic authentication scheme is not suitable for protecting sensitive or valuable information unless the channel is secure (e.g., using the "https" URI scheme). Likewise, <span>[<a href="#RFC7616" class="xref">RFC7616</a>]</span> requires the Digest authentication scheme to be used over a secure channel.<a href="#section-4.12-1" class="pilcrow">¶</a></p>
< <p id="section-4.12-2">With HTTPS, clients might also be authenticated using certificates <span>[<a href="#RFC8446" class="xref">RFC8446</a>]</span>, but note that such authentication is intrinsically scoped to the underlying transport connection. As a result, a client has no way of knowing whether the authenticated status was used in preparing the response (though Vary: * and/or the private cache directive can provide a partial indication), and the only way to obtain a specifically unauthenticated response is to open a new connection.<a href="#section-4.12-2" class="pilcrow">¶</a></p>
< <p id="section-4.12-3">When used, it is important to carefully specify the scoping and use of authentication; if the application exposes sensitive data or capabilities (e.g., by acting as an ambient authority; see <span><a href="https://www.rfc-editor.org/rfc/rfc6454#section-8.3" class="relref">Section 8.3</a> of [<a href="#RFC6454" class="xref">RFC6454</a>]</span>), exploits are possible. Mitigations include using a request-specific token to ensure the intent of the client.<a href="#section-4.12-3" class="pilcrow">¶</a></p>
---
> <p id="section-4.12-1">Applications can use HTTP authentication (<span><a href="https://rfc-editor.org/rfc/rfc9110#section-11" class="relref">Section 11</a> of [<a href="#HTTP" class="cite xref">HTTP</a>]</span>) to identify clients. Per <span>[<a href="#RFC7617" class="cite xref">RFC7617</a>]</span>, the Basic authentication scheme is not suitable for protecting sensitive or valuable information unless the channel is secure (e.g., using the "https" URI scheme). Likewise, <span>[<a href="#RFC7616" class="cite xref">RFC7616</a>]</span> requires the Digest authentication scheme to be used over a secure channel.<a href="#section-4.12-1" class="pilcrow">¶</a></p>
> <p id="section-4.12-2">With HTTPS, clients might also be authenticated using certificates <span>[<a href="#RFC8446" class="cite xref">RFC8446</a>]</span>, but note that such authentication is intrinsically scoped to the underlying transport connection. As a result, a client has no way of knowing whether the authenticated status was used in preparing the response (though Vary: * and/or the private cache directive can provide a partial indication), and the only way to obtain a specifically unauthenticated response is to open a new connection.<a href="#section-4.12-2" class="pilcrow">¶</a></p>
> <p id="section-4.12-3">When used, it is important to carefully specify the scoping and use of authentication; if the application exposes sensitive data or capabilities (e.g., by acting as an ambient authority; see <span><a href="https://rfc-editor.org/rfc/rfc6454#section-8.3" class="relref">Section 8.3</a> of [<a href="#RFC6454" class="cite xref">RFC6454</a>]</span>), exploits are possible. Mitigations include using a request-specific token to ensure the intent of the client.<a href="#section-4.12-3" class="pilcrow">¶</a></p>
2018c2036
<           <li class="normal" id="section-4.13-6.2">Using X-Content-Type-Options: nosniff <span>[<a href="#FETCH" class="xref">FETCH</a>]</span> to ensure that content under attacker control can't be coaxed into a form that is interpreted as active content by a Web browser.<a href="#section-4.13-6.2" class="pilcrow">¶</a>
---
>           <li class="normal" id="section-4.13-6.2">Using X-Content-Type-Options: nosniff <span>[<a href="#FETCH" class="cite xref">FETCH</a>]</span> to ensure that content under attacker control can't be coaxed into a form that is interpreted as active content by a Web browser.<a href="#section-4.13-6.2" class="pilcrow">¶</a>
2020c2038
<           <li class="normal" id="section-4.13-6.3">Using Content-Security-Policy <span>[<a href="#CSP" class="xref">CSP</a>]</span> to constrain the capabilities of active content (i.e., that which can execute scripts, such as HTML <span>[<a href="#HTML" class="xref">HTML</a>]</span> and PDF), thereby mitigating XSS attacks.<a href="#section-4.13-6.3" class="pilcrow">¶</a>
---
>           <li class="normal" id="section-4.13-6.3">Using Content-Security-Policy <span>[<a href="#CSP" class="cite xref">CSP</a>]</span> to constrain the capabilities of active content (i.e., that which can execute scripts, such as HTML <span>[<a href="#HTML" class="cite xref">HTML</a>]</span> and PDF), thereby mitigating XSS attacks.<a href="#section-4.13-6.3" class="pilcrow">¶</a>
2022c2040
<           <li class="normal" id="section-4.13-6.4">Using Referrer-Policy <span>[<a href="#REFERRER-POLICY" class="xref">REFERRER-POLICY</a>]</span> to prevent sensitive data in URLs from being leaked in the Referer request header field.<a href="#section-4.13-6.4" class="pilcrow">¶</a>
---
>           <li class="normal" id="section-4.13-6.4">Using Referrer-Policy <span>[<a href="#REFERRER-POLICY" class="cite xref">REFERRER-POLICY</a>]</span> to prevent sensitive data in URLs from being leaked in the Referer request header field.<a href="#section-4.13-6.4" class="pilcrow">¶</a>
2024c2042
<           <li class="normal" id="section-4.13-6.5">Using the 'HttpOnly' flag on Cookies to ensure that cookies are not exposed to browser scripting languages <span>[<a href="#COOKIES" class="xref">COOKIES</a>]</span>.<a href="#section-4.13-6.5" class="pilcrow">¶</a>
---
>           <li class="normal" id="section-4.13-6.5">Using the 'HttpOnly' flag on Cookies to ensure that cookies are not exposed to browser scripting languages <span>[<a href="#COOKIES" class="cite xref">COOKIES</a>]</span>.<a href="#section-4.13-6.5" class="pilcrow">¶</a>
2031,2032c2049,2050
< <div id="section-4.13-9">
< <pre class="lang-http-message sourcecode">
---
> <div class="lang-http-message sourcecode" id="section-4.13-9">
> <pre>
2043c2061
< <p id="section-4.13-10">If an application has browser compatibility as a goal, client interaction ought to be defined in terms of <span>[<a href="#FETCH" class="xref">FETCH</a>]</span> since that is the abstraction that browsers use for HTTP; it enforces many of these best practices.<a href="#section-4.13-10" class="pilcrow">¶</a></p>
---
> <p id="section-4.13-10">If an application has browser compatibility as a goal, client interaction ought to be defined in terms of <span>[<a href="#FETCH" class="cite xref">FETCH</a>]</span> since that is the abstraction that browsers use for HTTP; it enforces many of these best practices.<a href="#section-4.13-10" class="pilcrow">¶</a></p>
2051,2055c2069,2073
< <p id="section-4.14-1">Because many HTTP capabilities are scoped to the origin <span>[<a href="#RFC6454" class="xref">RFC6454</a>]</span>, applications also need to consider how deployments might interact with other applications (including Web browsing) that use the same origin server.<a href="#section-4.14-1" class="pilcrow">¶</a></p>
< <p id="section-4.14-2">For example, if cookies <span>[<a href="#COOKIES" class="xref">COOKIES</a>]</span> are used to carry application state, they will be sent with all requests to the origin by default (unless scoped by path), and the application might receive cookies from other applications on the origin server. This can lead to security issues as well as collision in cookie names.<a href="#section-4.14-2" class="pilcrow">¶</a></p>
< <p id="section-4.14-3">One solution to these issues is to require a dedicated hostname for the application so that it has a unique origin. However, it is often desirable to allow multiple applications to be deployed on a single hostname; doing so provides the most deployment flexibility and enables them to be "mixed" together (see <span>[<a href="#BCP190" class="xref">BCP190</a>]</span> for details).<a href="#section-4.14-3" class="pilcrow">¶</a></p>
< <p id="section-4.14-4">Therefore, applications using HTTP should strive to allow multiple applications on an origin. Specifically, when specifying the use of cookies, HTTP authentication realms <span>[<a href="#HTTP" class="xref">HTTP</a>]</span>, or other origin-wide HTTP mechanisms, applications using HTTP should not mandate the use of a particular name but instead let deployments configure them. Consideration should be given to scoping them to part of the origin, using their specified mechanisms for doing so.<a href="#section-4.14-4" class="pilcrow">¶</a></p>
< <p id="section-4.14-5">Modern Web browsers constrain the ability of content from one origin to access resources from another to avoid leaking private information. As a result, applications that wish to expose cross-origin data to browsers will need to implement the CORS protocol; see <span>[<a href="#FETCH" class="xref">FETCH</a>]</span>.<a href="#section-4.14-5" class="pilcrow">¶</a></p>
---
> <p id="section-4.14-1">Because many HTTP capabilities are scoped to the origin <span>[<a href="#RFC6454" class="cite xref">RFC6454</a>]</span>, applications also need to consider how deployments might interact with other applications (including Web browsing) that use the same origin server.<a href="#section-4.14-1" class="pilcrow">¶</a></p>
> <p id="section-4.14-2">For example, if cookies <span>[<a href="#COOKIES" class="cite xref">COOKIES</a>]</span> are used to carry application state, they will be sent with all requests to the origin by default (unless scoped by path), and the application might receive cookies from other applications on the origin server. This can lead to security issues as well as collision in cookie names.<a href="#section-4.14-2" class="pilcrow">¶</a></p>
> <p id="section-4.14-3">One solution to these issues is to require a dedicated hostname for the application so that it has a unique origin. However, it is often desirable to allow multiple applications to be deployed on a single hostname; doing so provides the most deployment flexibility and enables them to be "mixed" together (see <span>[<a href="#BCP190" class="cite xref">BCP190</a>]</span> for details).<a href="#section-4.14-3" class="pilcrow">¶</a></p>
> <p id="section-4.14-4">Therefore, applications using HTTP should strive to allow multiple applications on an origin. Specifically, when specifying the use of cookies, HTTP authentication realms <span>[<a href="#HTTP" class="cite xref">HTTP</a>]</span>, or other origin-wide HTTP mechanisms, applications using HTTP should not mandate the use of a particular name but instead let deployments configure them. Consideration should be given to scoping them to part of the origin, using their specified mechanisms for doing so.<a href="#section-4.14-4" class="pilcrow">¶</a></p>
> <p id="section-4.14-5">Modern Web browsers constrain the ability of content from one origin to access resources from another to avoid leaking private information. As a result, applications that wish to expose cross-origin data to browsers will need to implement the CORS protocol; see <span>[<a href="#FETCH" class="cite xref">FETCH</a>]</span>.<a href="#section-4.14-5" class="pilcrow">¶</a></p>
2063c2081
< <p id="section-4.15-1">HTTP/2 added the ability for servers to "push" request/response pairs to clients in <span>[<a href="#HTTP2" class="xref">HTTP/2</a>], <a href="https://www.rfc-editor.org/rfc/rfc9113#section-8.4" class="relref">Section 8.4</a></span>. While server push seems like a natural fit for many common application semantics (e.g., "fanout" and publish/subscribe), a few caveats should be noted:<a href="#section-4.15-1" class="pilcrow">¶</a></p>
---
> <p id="section-4.15-1">HTTP/2 added the ability for servers to "push" request/response pairs to clients in <span>[<a href="#HTTP2" class="cite xref">HTTP/2</a>], <a href="https://rfc-editor.org/rfc/rfc9113#section-8.4" class="relref">Section 8.4</a></span>. While server push seems like a natural fit for many common application semantics (e.g., "fanout" and publish/subscribe), a few caveats should be noted:<a href="#section-4.15-1" class="pilcrow">¶</a></p>
2078,2079c2096,2097
< <p id="section-4.15-3">Applications wishing to optimise cases where the client can perform work related to requests before the full response is available (e.g., fetching links for things likely to be contained within) might benefit from using the 103 (Early Hints) status code; see <span>[<a href="#RFC8297" class="xref">RFC8297</a>]</span>.<a href="#section-4.15-3" class="pilcrow">¶</a></p>
< <p id="section-4.15-4">Applications using server push directly need to enforce the requirements regarding authority in <span>[<a href="#HTTP2" class="xref">HTTP/2</a>], <a href="https://www.rfc-editor.org/rfc/rfc9113#section-8.4" class="relref">Section 8.4</a></span> to avoid cross-origin push attacks.<a href="#section-4.15-4" class="pilcrow">¶</a></p>
---
> <p id="section-4.15-3">Applications wishing to optimise cases where the client can perform work related to requests before the full response is available (e.g., fetching links for things likely to be contained within) might benefit from using the 103 (Early Hints) status code; see <span>[<a href="#RFC8297" class="cite xref">RFC8297</a>]</span>.<a href="#section-4.15-3" class="pilcrow">¶</a></p>
> <p id="section-4.15-4">Applications using server push directly need to enforce the requirements regarding authority in <span>[<a href="#HTTP2" class="cite xref">HTTP/2</a>], <a href="https://rfc-editor.org/rfc/rfc9113#section-8.4" class="relref">Section 8.4</a></span> to avoid cross-origin push attacks.<a href="#section-4.15-4" class="pilcrow">¶</a></p>
2090c2108
< <li class="normal" id="section-4.16-3.1">Using a distinct link relation type <span>[<a href="#WEB-LINKING" class="xref">WEB-LINKING</a>]</span> to identify a URL for a resource that implements the new functionality.<a href="#section-4.16-3.1" class="pilcrow">¶</a>
---
> <li class="normal" id="section-4.16-3.1">Using a distinct link relation type <span>[<a href="#WEB-LINKING" class="cite xref">WEB-LINKING</a>]</span> to identify a URL for a resource that implements the new functionality.<a href="#section-4.16-3.1" class="pilcrow">¶</a>
2092c2110
<           <li class="normal" id="section-4.16-3.2">Using a distinct media type <span>[<a href="#RFC6838" class="xref">RFC6838</a>]</span> to identify formats that enable the new functionality.<a href="#section-4.16-3.2" class="pilcrow">¶</a>
---
>           <li class="normal" id="section-4.16-3.2">Using a distinct media type <span>[<a href="#RFC6838" class="cite xref">RFC6838</a>]</span> to identify formats that enable the new functionality.<a href="#section-4.16-3.2" class="pilcrow">¶</a>
2114,2120c2132,2138
< <p id="section-6-1">Applications using HTTP are subject to the security considerations of HTTP itself and any extensions used; <span>[<a href="#HTTP" class="xref">HTTP</a>]</span>, <span>[<a href="#HTTP-CACHING" class="xref">HTTP-CACHING</a>]</span>, and <span>[<a href="#WEB-LINKING" class="xref">WEB-LINKING</a>]</span> are often relevant, amongst others.<a href="#section-6-1" class="pilcrow">¶</a></p>
< <p id="section-6-2"><a href="#scheme" class="xref">Section 4.4.2</a> recommends support for "https" URLs and discourages the use of "http" URLs to provide authentication, integrity, and confidentiality, as well as to mitigate pervasive monitoring attacks. Many applications using HTTP perform authentication and authorization with bearer tokens (e.g., in session cookies). If the transport is unencrypted, an attacker that can eavesdrop upon or modify HTTP communications can often escalate their privilege to perform operations on resources.<a href="#section-6-2" class="pilcrow">¶</a></p>
< <p id="section-6-3"><a href="#caching-app-semantics" class="xref">Section 4.9.3</a> highlights the potential for mismatch between HTTP caching and application-specific storage of responses or information therein.<a href="#section-6-3" class="pilcrow">¶</a></p>
< <p id="section-6-4"><a href="#state" class="xref">Section 4.10</a> discusses the impact of using stateful mechanisms in the protocol as ambient authority and suggests a mitigation.<a href="#section-6-4" class="pilcrow">¶</a></p>
< <p id="section-6-5"><a href="#browser" class="xref">Section 4.13</a> highlights the implications of Web browsers' capabilities on applications that use HTTP.<a href="#section-6-5" class="pilcrow">¶</a></p>
< <p id="section-6-6"><a href="#other-apps" class="xref">Section 4.14</a> discusses the issues that arise when applications are deployed on the same origin as websites (and other applications).<a href="#section-6-6" class="pilcrow">¶</a></p>
< <p id="section-6-7"><a href="#server-push" class="xref">Section 4.15</a> highlights risks of using HTTP/2 server push in a manner other than that specified.<a href="#section-6-7" class="pilcrow">¶</a></p>
---
> <p id="section-6-1">Applications using HTTP are subject to the security considerations of HTTP itself and any extensions used; <span>[<a href="#HTTP" class="cite xref">HTTP</a>]</span>, <span>[<a href="#HTTP-CACHING" class="cite xref">HTTP-CACHING</a>]</span>, and <span>[<a href="#WEB-LINKING" class="cite xref">WEB-LINKING</a>]</span> are often relevant, amongst others.<a href="#section-6-1" class="pilcrow">¶</a></p>
> <p id="section-6-2"><a href="#scheme" class="auto internal xref">Section 4.4.2</a> recommends support for "https" URLs and discourages the use of "http" URLs to provide authentication, integrity, and confidentiality, as well as to mitigate pervasive monitoring attacks. Many applications using HTTP perform authentication and authorization with bearer tokens (e.g., in session cookies). If the transport is unencrypted, an attacker that can eavesdrop upon or modify HTTP communications can often escalate their privilege to perform operations on resources.<a href="#section-6-2" class="pilcrow">¶</a></p>
> <p id="section-6-3"><a href="#caching-app-semantics" class="auto internal xref">Section 4.9.3</a> highlights the potential for mismatch between HTTP caching and application-specific storage of responses or information therein.<a href="#section-6-3" class="pilcrow">¶</a></p>
> <p id="section-6-4"><a href="#state" class="auto internal xref">Section 4.10</a> discusses the impact of using stateful mechanisms in the protocol as ambient authority and suggests a mitigation.<a href="#section-6-4" class="pilcrow">¶</a></p>
> <p id="section-6-5"><a href="#browser" class="auto internal xref">Section 4.13</a> highlights the implications of Web browsers' capabilities on applications that use HTTP.<a href="#section-6-5" class="pilcrow">¶</a></p>
> <p id="section-6-6"><a href="#other-apps" class="auto internal xref">Section 4.14</a> discusses the issues that arise when applications are deployed on the same origin as websites (and other applications).<a href="#section-6-6" class="pilcrow">¶</a></p>
> <p id="section-6-7"><a href="#server-push" class="auto internal xref">Section 4.15</a> highlights risks of using HTTP/2 server push in a manner other than that specified.<a href="#section-6-7" class="pilcrow">¶</a></p>
2127c2145
< <p id="section-6.1-1">HTTP clients can expose a variety of information to servers. Besides information that's explicitly sent as part of an application's operation (for example, names and other user-entered data) and "on the wire" (which is one of the reasons "https" is recommended in <a href="#scheme" class="xref">Section 4.4.2</a>), other information can be gathered through less obvious means -- often by connecting activities of a user over time.<a href="#section-6.1-1" class="pilcrow">¶</a></p>
---
> <p id="section-6.1-1">HTTP clients can expose a variety of information to servers. Besides information that's explicitly sent as part of an application's operation (for example, names and other user-entered data) and "on the wire" (which is one of the reasons "https" is recommended in <a href="#scheme" class="auto internal xref">Section 4.4.2</a>), other information can be gathered through less obvious means -- often by connecting activities of a user over time.<a href="#section-6.1-1" class="pilcrow">¶</a></p>
2328c2346
< <p id="appendix-A-1"><span>[<a href="#RFC3205" class="xref">RFC3205</a>]</span> captured the Best Current Practice in the early 2000s based on the concerns facing protocol designers at the time. Use of HTTP has changed considerably since then; as a result, this document is substantially different. Consequently, the changes are too numerous to list individually.<a href="#appendix-A-1" class="pilcrow">¶</a></p>
---
> <p id="appendix-A-1"><span>[<a href="#RFC3205" class="cite xref">RFC3205</a>]</span> captured the Best Current Practice in the early 2000s based on the concerns facing protocol designers at the time. Use of HTTP has changed considerably since then; as a result, this document is substantially different. Consequently, the changes are too numerous to list individually.<a href="#appendix-A-1" class="pilcrow">¶</a></p>
