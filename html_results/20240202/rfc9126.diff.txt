20c20
< <meta content="xml2rfc 3.9.1" name="generator">
---
> <meta content="xml2rfc 3.19.2" name="generator">
25,42c25,38
<   xml2rfc 3.9.1
<     Python 3.6.10
<     appdirs 1.4.4
<     ConfigArgParse 1.2.3
<     google-i18n-address 2.3.5
<     html5lib 1.0.1
<     intervaltree 3.0.2
<     Jinja2 2.11.2
<     kitchen 1.2.6
<     lxml 4.4.2
<     pycairo 1.19.0
<     pycountry 19.8.18
<     pyflakes 2.1.1
<     PyYAML 5.3.1
<     requests 2.22.0
<     setuptools 40.6.2
<     six 1.14.0
<     WeasyPrint 51
---
>   xml2rfc 3.19.2
>     Python 3.11.7
>     ConfigArgParse 1.7
>     google-i18n-address 3.1.0
>     intervaltree 3.1.0
>     Jinja2 3.1.3
>     lxml 4.9.4
>     platformdirs 4.2.0
>     pycountry 23.12.11
>     PyYAML 6.0.1
>     requests 2.31.0
>     setuptools 65.5.0
>     six 1.16.0
>     wcwidth 0.2.13
44c40
< <link href="rfc9126.xml" rel="alternate" type="application/rfc+xml">
---
> <link href="rfc/rfc9126.xml" rel="alternate" type="application/rfc+xml">
54c50
<   commented changes found necssary during the development of the v3
---
>   commented changes found necessary during the development of the v3
63a60,65
> :root {
>   --font-sans: 'Noto Sans', Arial, Helvetica, sans-serif;
>   --font-serif: 'Noto Serif', 'Times', 'Times New Roman', serif;
>   --font-mono: 'Roboto Mono', Courier, 'Courier New', monospace;
> }
> 
66d67
<   width: extend-to-zoom;
81c82
<   font-family: 'Noto Sans', Arial, Helvetica, sans-serif;
---
>   font-family: var(--font-sans);
83a85
>   overflow-wrap: break-word;
169a172,180
> svg[font-family~="serif" i], svg [font-family~="serif" i] {
>   font-family: var(--font-serif);
> }
> svg[font-family~="sans-serif" i], svg [font-family~="sans-serif" i] {
>   font-family: var(--font-sans);
> }
> svg[font-family~="monospace" i], svg [font-family~="monospace" i] {
>   font-family: var(--font-mono);
> }
184,187d194
<   border: none;
<   /* this isn't optimal, but it's an existence proof.  PrinceXML doesn't
<      support flexbox yet.
<   */
188a196
>   border: none;
266c274
< tt, code, pre, code {
---
> tt, code, pre {
268c276
<   font-family: 'Roboto Mono', monospace;
---
>   font-family: var(--font-mono);
307a316,318
> blockquote > *:last-child {
>   margin-bottom: 0;
> }
397a409,414
> /* Fix PDF info block run off issue */
> @media print {
>   #identifiers dd {
>     float: none;
>   }
> }
499c516
<   font-family: "Noto Sans",Arial,Helvetica,sans-serif;
---
>   font-family: var(--font-sans);
639d655
< 
661a678,680
>   .breakable pre {
>     break-inside: auto;
>   }
729c748
<   /* The follwing is commented out here, but set appropriately by in code, as
---
>   /* The following is commented out here, but set appropriately by in code, as
829c848
< tt, code, pre, code {
---
> tt, code, pre {
834c853
< pre.sourcecode,
---
> .sourcecode pre,
870c889
< /* Make the alternative author contact informatio look less like just another
---
> /* Make the alternative author contact information look less like just another
1051a1071
>   .artwork > pre,
1066c1086
< and increase the contrast between border and odd row background sligthtly */
---
> and increase the contrast between border and odd row background slightly */
1072a1093,1095
> tr {
>   break-inside: avoid;
> }
1092c1115
<   break-before: avoid-page;
---
>   break-before: auto;
1123c1146
< /* Text in compact lists should not get extra bottim margin space,
---
> /* Text in compact lists should not get extra bottom margin space,
1148c1171
< /* Tweak the comact list text */
---
> /* Tweak the compact list text */
1166c1189
< dd > div:first-child > pre.sourcecode,
---
> dd > div.sourcecode:first-child,
1180c1203
< li > p:last-of-type {
---
> li > p:last-of-type:only-child {
1184a1208
> <link href="https://datatracker.ietf.org/doc/draft-ietf-oauth-par-10" rel="prev">
1187c1211
<   <link href="https://datatracker.ietf.org/doc/draft-ietf-oauth-par-10" rel="prev">
---
>   <script type="application/javascript">async function addMetadata(){try{const e=document.styleSheets[0].cssRules;for(let t=0;t<e.length;t++)if(/#identifiers/.exec(e[t].selectorText)){const a=e[t].cssText.replace("#identifiers","#external-updates");document.styleSheets[0].insertRule(a,document.styleSheets[0].cssRules.length)}}catch(e){console.log(e)}const e=document.getElementById("external-metadata");if(e)try{var t,a="",o=function(e){const t=document.getElementsByTagName("meta");for(let a=0;a<t.length;a++)if(t[a].getAttribute("name")===e)return t[a].getAttribute("content");return""}("rfc.number");if(o){t="https://www.rfc-editor.org/rfc/rfc"+o+".json";try{const e=await fetch(t);a=await e.json()}catch(e){t=document.URL.indexOf("html")>=0?document.URL.replace(/html$/,"json"):document.URL+".json";const o=await fetch(t);a=await o.json()}}if(!a)return;e.style.display="block";const s="",d="https://datatracker.ietf.org/doc",n="https://datatracker.ietf.org/ipr/search",c="https://www.rfc-editor.org/info",l=a.doc_id.toLowerCase(),i=a.doc_id.slice(0,3).toLowerCase(),f=a.doc_id.slice(3).replace(/^0+/,""),u={status:"Status",obsoletes:"Obsoletes",obsoleted_by:"Obsoleted By",updates:"Updates",updated_by:"Updated By",see_also:"See Also",errata_url:"Errata"};let h="<dl style='overflow:hidden' id='external-updates'>";["status","obsoletes","obsoleted_by","updates","updated_by","see_also","errata_url"].forEach(e=>{if("status"==e){a[e]=a[e].toLowerCase();var t=a[e].split(" "),o=t.length,w="",p=1;for(let e=0;e<o;e++)p<o?w=w+r(t[e])+" ":w+=r(t[e]),p++;a[e]=w}else if("obsoletes"==e||"obsoleted_by"==e||"updates"==e||"updated_by"==e){var g,m="",b=1;g=a[e].length;for(let t=0;t<g;t++)a[e][t]&&(a[e][t]=String(a[e][t]).toLowerCase(),m=b<g?m+"<a href='"+s+"/rfc/".concat(a[e][t])+"'>"+a[e][t].slice(3)+"</a>, ":m+"<a href='"+s+"/rfc/".concat(a[e][t])+"'>"+a[e][t].slice(3)+"</a>",b++);a[e]=m}else if("see_also"==e){var y,L="",C=1;y=a[e].length;for(let t=0;t<y;t++)if(a[e][t]){a[e][t]=String(a[e][t]);var _=a[e][t].slice(0,3),v=a[e][t].slice(3).replace(/^0+/,"");L=C<y?"RFC"!=_?L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+_+" "+v+"</a>, ":L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+v+"</a>, ":"RFC"!=_?L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+_+" "+v+"</a>":L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+v+"</a>",C++}a[e]=L}else if("errata_url"==e){var R="";R=a[e]?R+"<a href='"+a[e]+"'>Errata exist</a> | <a href='"+d+"/"+l+"'>Datatracker</a>| <a href='"+n+"/?"+i+"="+f+"&submit="+i+"'>IPR</a> | <a href='"+c+"/"+l+"'>Info page</a>":"<a href='"+d+"/"+l+"'>Datatracker</a> | <a href='"+n+"/?"+i+"="+f+"&submit="+i+"'>IPR</a> | <a href='"+c+"/"+l+"'>Info page</a>",a[e]=R}""!=a[e]?"Errata"==u[e]?h+=`<dt>More info:</dt><dd>${a[e]}</dd>`:h+=`<dt>${u[e]}:</dt><dd>${a[e]}</dd>`:"Errata"==u[e]&&(h+=`<dt>More info:</dt><dd>${a[e]}</dd>`)}),h+="</dl>",e.innerHTML=h}catch(e){console.log(e)}else console.log("Could not locate metadata <div> element");function r(e){return e.charAt(0).toUpperCase()+e.slice(1)}}window.removeEventListener("load",addMetadata),window.addEventListener("load",addMetadata);</script>
1189,1190c1213,1214
< <body>
< <script src="https://www.rfc-editor.org/js/metadata.min.js"></script>
---
> <body class="xml2rfc">
> <script src="metadata.min.js"></script>
1298,1303c1322,1327
< <nav class="toc"><ul class="toc ulEmpty ulBare compact">
< <li class="toc ulEmpty ulBare compact" id="section-toc.1-1.1">
<             <p id="section-toc.1-1.1.1" class="keepWithNext"><a href="#section-1" class="xref">1</a>.  <a href="#name-introduction" class="xref">Introduction</a></p>
< <ul class="ulEmpty ulBare toc compact">
< <li class="ulEmpty ulBare toc compact" id="section-toc.1-1.1.2.1">
<                 <p id="section-toc.1-1.1.2.1.1" class="keepWithNext"><a href="#section-1.1" class="xref">1.1</a>.  <a href="#name-introductory-example" class="xref">Introductory Example</a></p>
---
> <nav class="toc"><ul class="compact toc ulBare ulEmpty">
> <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.1">
>             <p id="section-toc.1-1.1.1" class="keepWithNext"><a href="#section-1" class="auto internal xref">1</a>.  <a href="#name-introduction" class="internal xref">Introduction</a></p>
> <ul class="compact toc ulBare ulEmpty">
> <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.1.2.1">
>                 <p id="section-toc.1-1.1.2.1.1" class="keepWithNext"><a href="#section-1.1" class="auto internal xref">1.1</a>.  <a href="#name-introductory-example" class="internal xref">Introductory Example</a></p>
1305,1306c1329,1330
<               <li class="ulEmpty ulBare toc compact" id="section-toc.1-1.1.2.2">
<                 <p id="section-toc.1-1.1.2.2.1" class="keepWithNext"><a href="#section-1.2" class="xref">1.2</a>.  <a href="#name-conventions-and-terminology" class="xref">Conventions and Terminology</a></p>
---
>               <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.1.2.2">
>                 <p id="section-toc.1-1.1.2.2.1" class="keepWithNext"><a href="#section-1.2" class="auto internal xref">1.2</a>.  <a href="#name-conventions-and-terminology" class="internal xref">Conventions and Terminology</a></p>
1310,1314c1334,1338
<           <li class="toc ulEmpty ulBare compact" id="section-toc.1-1.2">
<             <p id="section-toc.1-1.2.1"><a href="#section-2" class="xref">2</a>.  <a href="#name-pushed-authorization-reques" class="xref">Pushed Authorization Request Endpoint</a></p>
< <ul class="ulEmpty ulBare toc compact">
< <li class="ulEmpty ulBare toc compact" id="section-toc.1-1.2.2.1">
<                 <p id="section-toc.1-1.2.2.1.1"><a href="#section-2.1" class="xref">2.1</a>.  <a href="#name-request" class="xref">Request</a></p>
---
>           <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.2">
>             <p id="section-toc.1-1.2.1"><a href="#section-2" class="auto internal xref">2</a>.  <a href="#name-pushed-authorization-reques" class="internal xref">Pushed Authorization Request Endpoint</a></p>
> <ul class="compact toc ulBare ulEmpty">
> <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.2.2.1">
>                 <p id="section-toc.1-1.2.2.1.1"><a href="#section-2.1" class="auto internal xref">2.1</a>.  <a href="#name-request" class="internal xref">Request</a></p>
1316,1317c1340,1341
<               <li class="ulEmpty ulBare toc compact" id="section-toc.1-1.2.2.2">
<                 <p id="section-toc.1-1.2.2.2.1"><a href="#section-2.2" class="xref">2.2</a>.  <a href="#name-successful-response" class="xref">Successful Response</a></p>
---
>               <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.2.2.2">
>                 <p id="section-toc.1-1.2.2.2.1"><a href="#section-2.2" class="auto internal xref">2.2</a>.  <a href="#name-successful-response" class="internal xref">Successful Response</a></p>
1319,1320c1343,1344
<               <li class="ulEmpty ulBare toc compact" id="section-toc.1-1.2.2.3">
<                 <p id="section-toc.1-1.2.2.3.1"><a href="#section-2.3" class="xref">2.3</a>.  <a href="#name-error-response" class="xref">Error Response</a></p>
---
>               <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.2.2.3">
>                 <p id="section-toc.1-1.2.2.3.1"><a href="#section-2.3" class="auto internal xref">2.3</a>.  <a href="#name-error-response" class="internal xref">Error Response</a></p>
1322,1323c1346,1347
<               <li class="ulEmpty ulBare toc compact" id="section-toc.1-1.2.2.4">
<                 <p id="section-toc.1-1.2.2.4.1"><a href="#section-2.4" class="xref">2.4</a>.  <a href="#name-management-of-client-redire" class="xref">Management of Client Redirect URIs</a></p>
---
>               <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.2.2.4">
>                 <p id="section-toc.1-1.2.2.4.1"><a href="#section-2.4" class="auto internal xref">2.4</a>.  <a href="#name-management-of-client-redire" class="internal xref">Management of Client Redirect URIs</a></p>
1327,1328c1351,1352
<           <li class="toc ulEmpty ulBare compact" id="section-toc.1-1.3">
<             <p id="section-toc.1-1.3.1"><a href="#section-3" class="xref">3</a>.  <a href="#name-the-request-request-paramet" class="xref">The "request" Request Parameter</a></p>
---
>           <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.3">
>             <p id="section-toc.1-1.3.1"><a href="#section-3" class="auto internal xref">3</a>.  <a href="#name-the-request-request-paramet" class="internal xref">The "request" Request Parameter</a></p>
1330,1331c1354,1355
<           <li class="toc ulEmpty ulBare compact" id="section-toc.1-1.4">
<             <p id="section-toc.1-1.4.1"><a href="#section-4" class="xref">4</a>.  <a href="#name-authorization-request" class="xref">Authorization Request</a></p>
---
>           <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.4">
>             <p id="section-toc.1-1.4.1"><a href="#section-4" class="auto internal xref">4</a>.  <a href="#name-authorization-request" class="internal xref">Authorization Request</a></p>
1333,1334c1357,1358
<           <li class="toc ulEmpty ulBare compact" id="section-toc.1-1.5">
<             <p id="section-toc.1-1.5.1"><a href="#section-5" class="xref">5</a>.  <a href="#name-authorization-server-metada" class="xref">Authorization Server Metadata</a></p>
---
>           <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.5">
>             <p id="section-toc.1-1.5.1"><a href="#section-5" class="auto internal xref">5</a>.  <a href="#name-authorization-server-metada" class="internal xref">Authorization Server Metadata</a></p>
1336,1337c1360,1361
<           <li class="toc ulEmpty ulBare compact" id="section-toc.1-1.6">
<             <p id="section-toc.1-1.6.1"><a href="#section-6" class="xref">6</a>.  <a href="#name-client-metadata" class="xref">Client Metadata</a></p>
---
>           <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.6">
>             <p id="section-toc.1-1.6.1"><a href="#section-6" class="auto internal xref">6</a>.  <a href="#name-client-metadata" class="internal xref">Client Metadata</a></p>
1339,1343c1363,1367
<           <li class="toc ulEmpty ulBare compact" id="section-toc.1-1.7">
<             <p id="section-toc.1-1.7.1"><a href="#section-7" class="xref">7</a>.  <a href="#name-security-considerations" class="xref">Security Considerations</a></p>
< <ul class="ulEmpty ulBare toc compact">
< <li class="ulEmpty ulBare toc compact" id="section-toc.1-1.7.2.1">
<                 <p id="section-toc.1-1.7.2.1.1"><a href="#section-7.1" class="xref">7.1</a>.  <a href="#name-request-uri-guessing" class="xref">Request URI Guessing</a></p>
---
>           <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.7">
>             <p id="section-toc.1-1.7.1"><a href="#section-7" class="auto internal xref">7</a>.  <a href="#name-security-considerations" class="internal xref">Security Considerations</a></p>
> <ul class="compact toc ulBare ulEmpty">
> <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.7.2.1">
>                 <p id="section-toc.1-1.7.2.1.1"><a href="#section-7.1" class="auto internal xref">7.1</a>.  <a href="#name-request-uri-guessing" class="internal xref">Request URI Guessing</a></p>
1345,1346c1369,1370
<               <li class="ulEmpty ulBare toc compact" id="section-toc.1-1.7.2.2">
<                 <p id="section-toc.1-1.7.2.2.1"><a href="#section-7.2" class="xref">7.2</a>.  <a href="#name-open-redirection" class="xref">Open Redirection</a></p>
---
>               <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.7.2.2">
>                 <p id="section-toc.1-1.7.2.2.1"><a href="#section-7.2" class="auto internal xref">7.2</a>.  <a href="#name-open-redirection" class="internal xref">Open Redirection</a></p>
1348,1349c1372,1373
<               <li class="ulEmpty ulBare toc compact" id="section-toc.1-1.7.2.3">
<                 <p id="section-toc.1-1.7.2.3.1"><a href="#section-7.3" class="xref">7.3</a>.  <a href="#name-request-object-replay" class="xref">Request Object Replay</a></p>
---
>               <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.7.2.3">
>                 <p id="section-toc.1-1.7.2.3.1"><a href="#section-7.3" class="auto internal xref">7.3</a>.  <a href="#name-request-object-replay" class="internal xref">Request Object Replay</a></p>
1351,1352c1375,1376
<               <li class="ulEmpty ulBare toc compact" id="section-toc.1-1.7.2.4">
<                 <p id="section-toc.1-1.7.2.4.1"><a href="#section-7.4" class="xref">7.4</a>.  <a href="#name-client-policy-change" class="xref">Client Policy Change</a></p>
---
>               <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.7.2.4">
>                 <p id="section-toc.1-1.7.2.4.1"><a href="#section-7.4" class="auto internal xref">7.4</a>.  <a href="#name-client-policy-change" class="internal xref">Client Policy Change</a></p>
1354,1355c1378,1379
<               <li class="ulEmpty ulBare toc compact" id="section-toc.1-1.7.2.5">
<                 <p id="section-toc.1-1.7.2.5.1"><a href="#section-7.5" class="xref">7.5</a>.  <a href="#name-request-uri-swapping" class="xref">Request URI Swapping</a></p>
---
>               <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.7.2.5">
>                 <p id="section-toc.1-1.7.2.5.1"><a href="#section-7.5" class="auto internal xref">7.5</a>.  <a href="#name-request-uri-swapping" class="internal xref">Request URI Swapping</a></p>
1359,1360c1383,1384
<           <li class="toc ulEmpty ulBare compact" id="section-toc.1-1.8">
<             <p id="section-toc.1-1.8.1"><a href="#section-8" class="xref">8</a>.  <a href="#name-privacy-considerations" class="xref">Privacy Considerations</a></p>
---
>           <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.8">
>             <p id="section-toc.1-1.8.1"><a href="#section-8" class="auto internal xref">8</a>.  <a href="#name-privacy-considerations" class="internal xref">Privacy Considerations</a></p>
1362,1366c1386,1390
<           <li class="toc ulEmpty ulBare compact" id="section-toc.1-1.9">
<             <p id="section-toc.1-1.9.1"><a href="#section-9" class="xref">9</a>.  <a href="#name-iana-considerations" class="xref">IANA Considerations</a></p>
< <ul class="ulEmpty ulBare toc compact">
< <li class="ulEmpty ulBare toc compact" id="section-toc.1-1.9.2.1">
<                 <p id="section-toc.1-1.9.2.1.1"><a href="#section-9.1" class="xref">9.1</a>.  <a href="#name-oauth-authorization-server-" class="xref">OAuth Authorization Server Metadata</a></p>
---
>           <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.9">
>             <p id="section-toc.1-1.9.1"><a href="#section-9" class="auto internal xref">9</a>.  <a href="#name-iana-considerations" class="internal xref">IANA Considerations</a></p>
> <ul class="compact toc ulBare ulEmpty">
> <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.9.2.1">
>                 <p id="section-toc.1-1.9.2.1.1"><a href="#section-9.1" class="auto internal xref">9.1</a>.  <a href="#name-oauth-authorization-server-" class="internal xref">OAuth Authorization Server Metadata</a></p>
1368,1369c1392,1393
<               <li class="ulEmpty ulBare toc compact" id="section-toc.1-1.9.2.2">
<                 <p id="section-toc.1-1.9.2.2.1"><a href="#section-9.2" class="xref">9.2</a>.  <a href="#name-oauth-dynamic-client-regist" class="xref">OAuth Dynamic Client Registration Metadata</a></p>
---
>               <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.9.2.2">
>                 <p id="section-toc.1-1.9.2.2.1"><a href="#section-9.2" class="auto internal xref">9.2</a>.  <a href="#name-oauth-dynamic-client-regist" class="internal xref">OAuth Dynamic Client Registration Metadata</a></p>
1371,1372c1395,1396
<               <li class="ulEmpty ulBare toc compact" id="section-toc.1-1.9.2.3">
<                 <p id="section-toc.1-1.9.2.3.1"><a href="#section-9.3" class="xref">9.3</a>.  <a href="#name-oauth-uri-registration" class="xref">OAuth URI Registration</a></p>
---
>               <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.9.2.3">
>                 <p id="section-toc.1-1.9.2.3.1"><a href="#section-9.3" class="auto internal xref">9.3</a>.  <a href="#name-oauth-uri-registration" class="internal xref">OAuth URI Registration</a></p>
1376,1380c1400,1404
<           <li class="toc ulEmpty ulBare compact" id="section-toc.1-1.10">
<             <p id="section-toc.1-1.10.1"><a href="#section-10" class="xref">10</a>. <a href="#name-references" class="xref">References</a></p>
< <ul class="ulEmpty ulBare toc compact">
< <li class="ulEmpty ulBare toc compact" id="section-toc.1-1.10.2.1">
<                 <p id="section-toc.1-1.10.2.1.1"><a href="#section-10.1" class="xref">10.1</a>.  <a href="#name-normative-references" class="xref">Normative References</a></p>
---
>           <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.10">
>             <p id="section-toc.1-1.10.1"><a href="#section-10" class="auto internal xref">10</a>. <a href="#name-references" class="internal xref">References</a></p>
> <ul class="compact toc ulBare ulEmpty">
> <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.10.2.1">
>                 <p id="section-toc.1-1.10.2.1.1"><a href="#section-10.1" class="auto internal xref">10.1</a>.  <a href="#name-normative-references" class="internal xref">Normative References</a></p>
1382,1383c1406,1407
<               <li class="ulEmpty ulBare toc compact" id="section-toc.1-1.10.2.2">
<                 <p id="section-toc.1-1.10.2.2.1"><a href="#section-10.2" class="xref">10.2</a>.  <a href="#name-informative-references" class="xref">Informative References</a></p>
---
>               <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.10.2.2">
>                 <p id="section-toc.1-1.10.2.2.1"><a href="#section-10.2" class="auto internal xref">10.2</a>.  <a href="#name-informative-references" class="internal xref">Informative References</a></p>
1387,1388c1411,1412
<           <li class="toc ulEmpty ulBare compact" id="section-toc.1-1.11">
<             <p id="section-toc.1-1.11.1"><a href="#appendix-A" class="xref"></a><a href="#name-acknowledgements" class="xref">Acknowledgements</a></p>
---
>           <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.11">
>             <p id="section-toc.1-1.11.1"><a href="#appendix-A" class="auto internal xref"></a><a href="#name-acknowledgements" class="internal xref">Acknowledgements</a></p>
1390,1391c1414,1415
<           <li class="toc ulEmpty ulBare compact" id="section-toc.1-1.12">
<             <p id="section-toc.1-1.12.1"><a href="#appendix-B" class="xref"></a><a href="#name-authors-addresses" class="xref">Authors' Addresses</a></p>
---
>           <li class="compact toc ulBare ulEmpty" id="section-toc.1-1.12">
>             <p id="section-toc.1-1.12.1"><a href="#appendix-B" class="auto internal xref"></a><a href="#name-authors-addresses" class="internal xref">Authors' Addresses</a></p>
1402c1426
< <p id="section-1-1">This document defines the pushed authorization request (PAR) endpoint, which enables an OAuth <span>[<a href="#RFC6749" class="xref">RFC6749</a>]</span> client
---
> <p id="section-1-1">This document defines the pushed authorization request (PAR) endpoint, which enables an OAuth <span>[<a href="#RFC6749" class="cite xref">RFC6749</a>]</span> client
1407c1431
< <p id="section-1-2">In OAuth <span>[<a href="#RFC6749" class="xref">RFC6749</a>]</span>, authorization request parameters are typically sent as URI query
---
> <p id="section-1-2">In OAuth <span>[<a href="#RFC6749" class="cite xref">RFC6749</a>]</span>, authorization request parameters are typically sent as URI query
1417c1441
< <p id="section-1-4">JWT-Secured Authorization Request (JAR) <span>[<a href="#RFC9101" class="xref">RFC9101</a>]</span> provides solutions for the security challenges by allowing OAuth clients to wrap authorization request parameters in a Request Object, which is a signed and optionally encrypted JSON Web Token (JWT) <span>[<a href="#RFC7519" class="xref">RFC7519</a>]</span>.
---
> <p id="section-1-4">JWT-Secured Authorization Request (JAR) <span>[<a href="#RFC9101" class="cite xref">RFC9101</a>]</span> provides solutions for the security challenges by allowing OAuth clients to wrap authorization request parameters in a Request Object, which is a signed and optionally encrypted JSON Web Token (JWT) <span>[<a href="#RFC7519" class="cite xref">RFC7519</a>]</span>.
1421c1445
< <p id="section-1-6">PAR fosters OAuth security by providing clients a simple means for a confidential and integrity-protected authorization request. Clients requiring an even higher security level, especially cryptographically confirmed non-repudiation, are able to use JWT-based Request Objects as defined by <span>[<a href="#RFC9101" class="xref">RFC9101</a>]</span> 
---
> <p id="section-1-6">PAR fosters OAuth security by providing clients a simple means for a confidential and integrity-protected authorization request. Clients requiring an even higher security level, especially cryptographically confirmed non-repudiation, are able to use JWT-based Request Objects as defined by <span>[<a href="#RFC9101" class="cite xref">RFC9101</a>]</span> 
1426c1450
< <p id="section-1-8">Note that HTTP <code>POST</code> requests to the authorization endpoint via the user agent, as described in <span><a href="https://www.rfc-editor.org/rfc/rfc6749#section-3.1" class="relref">Section 3.1</a> of [<a href="#RFC6749" class="xref">RFC6749</a>]</span> and Section 3.1.2.1 of <span>[<a href="#OIDC" class="xref">OIDC</a>]</span>, could also be used to cope with the request size limitations described above. However, it's only optional per <span>[<a href="#RFC6749" class="xref">RFC6749</a>]</span>, and, even when supported, it is a viable option for conventional web applications but is prohibitively difficult to use with installed mobile applications. As described in <span>[<a href="#RFC8252" class="xref">RFC8252</a>]</span>, those apps use platform-specific APIs to open the authorization request URI in the system browser. When a mobile app launches a browser, however, the resultant initial request is constrained to use the <code>GET</code> method. Using <code>POST</code> for the authorization request would require the app to first direct the browser to open a URI that the app controls via <code>GET</code> while somehow conveying the sizable authorization request payload and then having the resultant response contain the content and script to initiate a cross-site form <code>POST</code> towards the authorization server. PAR is simpler to use and has additional security benefits, as described above.<a href="#section-1-8" class="pilcrow">¶</a></p>
---
> <p id="section-1-8">Note that HTTP <code>POST</code> requests to the authorization endpoint via the user agent, as described in <span><a href="https://rfc-editor.org/rfc/rfc6749#section-3.1" class="relref">Section 3.1</a> of [<a href="#RFC6749" class="cite xref">RFC6749</a>]</span> and Section 3.1.2.1 of <span>[<a href="#OIDC" class="cite xref">OIDC</a>]</span>, could also be used to cope with the request size limitations described above. However, it's only optional per <span>[<a href="#RFC6749" class="cite xref">RFC6749</a>]</span>, and, even when supported, it is a viable option for conventional web applications but is prohibitively difficult to use with installed mobile applications. As described in <span>[<a href="#RFC8252" class="cite xref">RFC8252</a>]</span>, those apps use platform-specific APIs to open the authorization request URI in the system browser. When a mobile app launches a browser, however, the resultant initial request is constrained to use the <code>GET</code> method. Using <code>POST</code> for the authorization request would require the app to first direct the browser to open a URI that the app controls via <code>GET</code> while somehow conveying the sizable authorization request payload and then having the resultant response contain the content and script to initiate a cross-site form <code>POST</code> towards the authorization server. PAR is simpler to use and has additional security benefits, as described above.<a href="#section-1-8" class="pilcrow">¶</a></p>
1433,1434c1457,1458
< <div id="section-1.1-2">
< <pre class="sourcecode lang-http-message"> GET /authorize?response_type=code
---
> <div class="lang-http-message sourcecode" id="section-1.1-2">
> <pre> GET /authorize?response_type=code
1442,1443c1466,1467
< <div id="section-1.1-4">
< <pre class="sourcecode lang-http-message"> POST /as/par HTTP/1.1
---
> <div class="lang-http-message sourcecode" id="section-1.1-4">
> <pre> POST /as/par HTTP/1.1
1460,1461c1484,1485
< <div id="section-1.1-6">
< <pre class="sourcecode lang-http-message"> HTTP/1.1 201 Created
---
> <div class="lang-http-message sourcecode" id="section-1.1-6">
> <pre> HTTP/1.1 201 Created
1472,1473c1496,1497
< <div id="section-1.1-8">
< <pre class="sourcecode lang-http-message"> GET /authorize?client_id=CLIENT1234
---
> <div class="lang-http-message sourcecode" id="section-1.1-8">
> <pre> GET /authorize?client_id=CLIENT1234
1488c1512
<     described in BCP 14 <span>[<a href="#RFC2119" class="xref">RFC2119</a>]</span> <span>[<a href="#RFC8174" class="xref">RFC8174</a>]</span> 
---
>     described in BCP 14 <span>[<a href="#RFC2119" class="cite xref">RFC2119</a>]</span> <span>[<a href="#RFC8174" class="cite xref">RFC8174</a>]</span> 
1494c1518
< "client" defined by "The OAuth 2.0 Authorization Framework" <span>[<a href="#RFC6749" class="xref">RFC6749</a>]</span>.<a href="#section-1.2-2" class="pilcrow">¶</a></p>
---
> "client" defined by "The OAuth 2.0 Authorization Framework" <span>[<a href="#RFC6749" class="cite xref">RFC6749</a>]</span>.<a href="#section-1.2-2" class="pilcrow">¶</a></p>
1504,1507c1528,1531
< <p id="section-2-1">The pushed authorization request endpoint is an HTTP API at the authorization server that accepts HTTP <code>POST</code> requests with parameters in the HTTP request message body using the <code>application/x-www-form-urlencoded</code> format. This format has a character encoding of UTF-8, as described in <span><a href="https://www.rfc-editor.org/rfc/rfc6749#appendix-B" class="relref">Appendix B</a> of [<a href="#RFC6749" class="xref">RFC6749</a>]</span>. The PAR endpoint URL <span class="bcp14">MUST</span> use the "https" scheme.<a href="#section-2-1" class="pilcrow">¶</a></p>
< <p id="section-2-2">Authorization servers supporting PAR <span class="bcp14">SHOULD</span> include the URL of their pushed authorization request endpoint in their authorization server metadata document <span>[<a href="#RFC8414" class="xref">RFC8414</a>]</span> using the <code>pushed_authorization_request_endpoint</code> parameter as defined in <a href="#as_metadata" class="xref">Section 5</a>.<a href="#section-2-2" class="pilcrow">¶</a></p>
< <p id="section-2-3">The endpoint accepts the authorization request parameters defined in <span>[<a href="#RFC6749" class="xref">RFC6749</a>]</span> for the authorization endpoint as well as all applicable extensions defined for the authorization endpoint. Some examples of such extensions include Proof Key for Code Exchange (PKCE) <span>[<a href="#RFC7636" class="xref">RFC7636</a>]</span>, Resource Indicators <span>[<a href="#RFC8707" class="xref">RFC8707</a>]</span>, and OpenID Connect (OIDC) <span>[<a href="#OIDC" class="xref">OIDC</a>]</span>. The endpoint <span class="bcp14">MAY</span> also support sending the set of authorization request parameters as a Request Object according to <span>[<a href="#RFC9101" class="xref">RFC9101</a>]</span> and <a href="#request_parameter" class="xref">Section 3</a> of this document.<a href="#section-2-3" class="pilcrow">¶</a></p>
< <p id="section-2-4">The rules for client authentication as defined in <span>[<a href="#RFC6749" class="xref">RFC6749</a>]</span> for token endpoint requests, including the applicable authentication methods, apply for the PAR endpoint as well. If applicable, the <code>token_endpoint_auth_method</code> client metadata parameter <span>[<a href="#RFC7591" class="xref">RFC7591</a>]</span> indicates the registered authentication method for the client to use when making direct requests to the authorization server, including requests to the PAR endpoint. Similarly, the <code>token_endpoint_auth_methods_supported</code> authorization server metadata <span>[<a href="#RFC8414" class="xref">RFC8414</a>]</span> parameter lists client authentication methods supported by the authorization server when accepting direct requests from clients, including requests to the PAR endpoint.<a href="#section-2-4" class="pilcrow">¶</a></p>
---
> <p id="section-2-1">The pushed authorization request endpoint is an HTTP API at the authorization server that accepts HTTP <code>POST</code> requests with parameters in the HTTP request message body using the <code>application/x-www-form-urlencoded</code> format. This format has a character encoding of UTF-8, as described in <span><a href="https://rfc-editor.org/rfc/rfc6749#appendix-B" class="relref">Appendix B</a> of [<a href="#RFC6749" class="cite xref">RFC6749</a>]</span>. The PAR endpoint URL <span class="bcp14">MUST</span> use the "https" scheme.<a href="#section-2-1" class="pilcrow">¶</a></p>
> <p id="section-2-2">Authorization servers supporting PAR <span class="bcp14">SHOULD</span> include the URL of their pushed authorization request endpoint in their authorization server metadata document <span>[<a href="#RFC8414" class="cite xref">RFC8414</a>]</span> using the <code>pushed_authorization_request_endpoint</code> parameter as defined in <a href="#as_metadata" class="auto internal xref">Section 5</a>.<a href="#section-2-2" class="pilcrow">¶</a></p>
> <p id="section-2-3">The endpoint accepts the authorization request parameters defined in <span>[<a href="#RFC6749" class="cite xref">RFC6749</a>]</span> for the authorization endpoint as well as all applicable extensions defined for the authorization endpoint. Some examples of such extensions include Proof Key for Code Exchange (PKCE) <span>[<a href="#RFC7636" class="cite xref">RFC7636</a>]</span>, Resource Indicators <span>[<a href="#RFC8707" class="cite xref">RFC8707</a>]</span>, and OpenID Connect (OIDC) <span>[<a href="#OIDC" class="cite xref">OIDC</a>]</span>. The endpoint <span class="bcp14">MAY</span> also support sending the set of authorization request parameters as a Request Object according to <span>[<a href="#RFC9101" class="cite xref">RFC9101</a>]</span> and <a href="#request_parameter" class="auto internal xref">Section 3</a> of this document.<a href="#section-2-3" class="pilcrow">¶</a></p>
> <p id="section-2-4">The rules for client authentication as defined in <span>[<a href="#RFC6749" class="cite xref">RFC6749</a>]</span> for token endpoint requests, including the applicable authentication methods, apply for the PAR endpoint as well. If applicable, the <code>token_endpoint_auth_method</code> client metadata parameter <span>[<a href="#RFC7591" class="cite xref">RFC7591</a>]</span> indicates the registered authentication method for the client to use when making direct requests to the authorization server, including requests to the PAR endpoint. Similarly, the <code>token_endpoint_auth_methods_supported</code> authorization server metadata <span>[<a href="#RFC8414" class="cite xref">RFC8414</a>]</span> parameter lists client authentication methods supported by the authorization server when accepting direct requests from clients, including requests to the PAR endpoint.<a href="#section-2-4" class="pilcrow">¶</a></p>
1509c1533
< value to use when employing JWT client assertion-based authentication (defined in <span><a href="https://www.rfc-editor.org/rfc/rfc7523#section-2.2" class="relref">Section 2.2</a> of [<a href="#RFC7523" class="xref">RFC7523</a>]</span> with <code>private_key_jwt</code> or <code>client_secret_jwt</code> authentication method names per Section 9 of <span>[<a href="#OIDC" class="xref">OIDC</a>]</span>). To address that ambiguity, the issuer identifier URL of the authorization server according to <span>[<a href="#RFC8414" class="xref">RFC8414</a>]</span> <span class="bcp14">SHOULD</span> be used as the value of the audience. In order to facilitate interoperability, the authorization server <span class="bcp14">MUST</span> accept its issuer identifier, token endpoint URL, or pushed authorization request endpoint URL as values that identify it as an intended audience.<a href="#section-2-5" class="pilcrow">¶</a></p>
---
> value to use when employing JWT client assertion-based authentication (defined in <span><a href="https://rfc-editor.org/rfc/rfc7523#section-2.2" class="relref">Section 2.2</a> of [<a href="#RFC7523" class="cite xref">RFC7523</a>]</span> with <code>private_key_jwt</code> or <code>client_secret_jwt</code> authentication method names per Section 9 of <span>[<a href="#OIDC" class="cite xref">OIDC</a>]</span>). To address that ambiguity, the issuer identifier URL of the authorization server according to <span>[<a href="#RFC8414" class="cite xref">RFC8414</a>]</span> <span class="bcp14">SHOULD</span> be used as the value of the audience. In order to facilitate interoperability, the authorization server <span class="bcp14">MUST</span> accept its issuer identifier, token endpoint URL, or pushed authorization request endpoint URL as values that identify it as an intended audience.<a href="#section-2-5" class="pilcrow">¶</a></p>
1515c1539
< <p id="section-2.1-1">A client sends the parameters that comprise an authorization request directly to the PAR endpoint. A typical parameter set might include: <code>client_id</code>, <code>response_type</code>, <code>redirect_uri</code>, <code>scope</code>, <code>state</code>, <code>code_challenge</code>, and <code>code_challenge_method</code> as shown in the example below. However, the pushed authorization request can be composed of any of the parameters applicable for use at the authorization endpoint, including those defined in <span>[<a href="#RFC6749" class="xref">RFC6749</a>]</span> as well as all applicable extensions. The <code>request_uri</code> authorization request parameter is one exception, and it <span class="bcp14">MUST NOT</span> be provided.<a href="#section-2.1-1" class="pilcrow">¶</a></p>
---
> <p id="section-2.1-1">A client sends the parameters that comprise an authorization request directly to the PAR endpoint. A typical parameter set might include: <code>client_id</code>, <code>response_type</code>, <code>redirect_uri</code>, <code>scope</code>, <code>state</code>, <code>code_challenge</code>, and <code>code_challenge_method</code> as shown in the example below. However, the pushed authorization request can be composed of any of the parameters applicable for use at the authorization endpoint, including those defined in <span>[<a href="#RFC6749" class="cite xref">RFC6749</a>]</span> as well as all applicable extensions. The <code>request_uri</code> authorization request parameter is one exception, and it <span class="bcp14">MUST NOT</span> be provided.<a href="#section-2.1-1" class="pilcrow">¶</a></p>
1517c1541
< <p id="section-2.1-3">The client constructs the message body of an HTTP <code>POST</code> request with parameters formatted with <code>x-www-form-urlencoded</code> using a character encoding of UTF-8, as described in <span><a href="https://www.rfc-editor.org/rfc/rfc6749#appendix-B" class="relref">Appendix B</a> of [<a href="#RFC6749" class="xref">RFC6749</a>]</span>. If applicable, the client also adds its authentication credentials to the request header or the request body using the same rules as for token endpoint requests.<a href="#section-2.1-3" class="pilcrow">¶</a></p>
---
> <p id="section-2.1-3">The client constructs the message body of an HTTP <code>POST</code> request with parameters formatted with <code>x-www-form-urlencoded</code> using a character encoding of UTF-8, as described in <span><a href="https://rfc-editor.org/rfc/rfc6749#appendix-B" class="relref">Appendix B</a> of [<a href="#RFC6749" class="cite xref">RFC6749</a>]</span>. If applicable, the client also adds its authentication credentials to the request header or the request body using the same rules as for token endpoint requests.<a href="#section-2.1-3" class="pilcrow">¶</a></p>
1519,1520c1543,1544
< <div id="section-2.1-5">
< <pre class="sourcecode lang-http-message"> POST /as/par HTTP/1.1
---
> <div class="lang-http-message sourcecode" id="section-2.1-5">
> <pre> POST /as/par HTTP/1.1
1543c1567
< <li id="section-2.1-7.1">Authenticate the client in the same way as at the token endpoint (<span><a href="https://www.rfc-editor.org/rfc/rfc6749#section-2.3" class="relref">Section 2.3</a> of [<a href="#RFC6749" class="xref">RFC6749</a>]</span>).<a href="#section-2.1-7.1" class="pilcrow">¶</a>
---
> <li id="section-2.1-7.1">Authenticate the client in the same way as at the token endpoint (<span><a href="https://rfc-editor.org/rfc/rfc6749#section-2.3" class="relref">Section 2.3</a> of [<a href="#RFC6749" class="cite xref">RFC6749</a>]</span>).<a href="#section-2.1-7.1" class="pilcrow">¶</a>
1550c1574
< <p id="section-2.1-8">The authorization server <span class="bcp14">MAY</span> allow clients with authentication credentials to establish per-authorization-request redirect URIs with every pushed authorization request. Described in more detail in <a href="#redirect_uri_mgmt" class="xref">Section 2.4</a>, this is possible since, in contrast to <span>[<a href="#RFC6749" class="xref">RFC6749</a>]</span>, this specification gives the authorization server the ability to authenticate clients and validate client requests before the actual authorization request is performed.<a href="#section-2.1-8" class="pilcrow">¶</a></p>
---
> <p id="section-2.1-8">The authorization server <span class="bcp14">MAY</span> allow clients with authentication credentials to establish per-authorization-request redirect URIs with every pushed authorization request. Described in more detail in <a href="#redirect_uri_mgmt" class="auto internal xref">Section 2.4</a>, this is possible since, in contrast to <span>[<a href="#RFC6749" class="cite xref">RFC6749</a>]</span>, this specification gives the authorization server the ability to authenticate clients and validate client requests before the actual authorization request is performed.<a href="#section-2.1-8" class="pilcrow">¶</a></p>
1558c1582
< <p id="section-2.2-1">If the verification is successful, the server <span class="bcp14">MUST</span> generate a request URI and provide it in the response with a <code>201</code> HTTP status code. The following parameters are included as top-level members in the message body of the HTTP response using the <code>application/json</code> media type as defined by <span>[<a href="#RFC8259" class="xref">RFC8259</a>]</span>.<a href="#section-2.2-1" class="pilcrow">¶</a></p>
---
> <p id="section-2.2-1">If the verification is successful, the server <span class="bcp14">MUST</span> generate a request URI and provide it in the response with a <code>201</code> HTTP status code. The following parameters are included as top-level members in the message body of the HTTP response using the <code>application/json</code> media type as defined by <span>[<a href="#RFC8259" class="cite xref">RFC8259</a>]</span>.<a href="#section-2.2-1" class="pilcrow">¶</a></p>
1569c1593
< <p id="section-2.2-3">The format of the <code>request_uri</code> value is at the discretion of the authorization server, but it <span class="bcp14">MUST</span> contain some part generated using a cryptographically strong pseudorandom algorithm such that it is computationally infeasible to predict or guess a valid value (see <span><a href="https://www.rfc-editor.org/rfc/rfc6749#section-10.10" class="relref">Section 10.10</a> of [<a href="#RFC6749" class="xref">RFC6749</a>]</span> for specifics). The authorization server <span class="bcp14">MAY</span> construct the <code>request_uri</code> value using the form <code>urn:ietf:params:oauth:request_uri:&lt;reference-value&gt;</code> with <code>&lt;reference-value&gt;</code> as the random part of the URI that references the respective authorization request data.<a href="#section-2.2-3" class="pilcrow">¶</a></p>
---
> <p id="section-2.2-3">The format of the <code>request_uri</code> value is at the discretion of the authorization server, but it <span class="bcp14">MUST</span> contain some part generated using a cryptographically strong pseudorandom algorithm such that it is computationally infeasible to predict or guess a valid value (see <span><a href="https://rfc-editor.org/rfc/rfc6749#section-10.10" class="relref">Section 10.10</a> of [<a href="#RFC6749" class="cite xref">RFC6749</a>]</span> for specifics). The authorization server <span class="bcp14">MAY</span> construct the <code>request_uri</code> value using the form <code>urn:ietf:params:oauth:request_uri:&lt;reference-value&gt;</code> with <code>&lt;reference-value&gt;</code> as the random part of the URI that references the respective authorization request data.<a href="#section-2.2-3" class="pilcrow">¶</a></p>
1572,1573c1596,1597
< <div id="section-2.2-6">
< <pre class="sourcecode lang-http-message"> HTTP/1.1 201 Created
---
> <div class="lang-http-message sourcecode" id="section-2.2-6">
> <pre> HTTP/1.1 201 Created
1591,1592c1615,1616
< <p id="section-2.3-1">The authorization server returns an error response with the same format as is specified for error responses from the token endpoint in <span><a href="https://www.rfc-editor.org/rfc/rfc6749#section-5.2" class="relref">Section 5.2</a> of [<a href="#RFC6749" class="xref">RFC6749</a>]</span> using the appropriate error code from therein or from <span><a href="https://www.rfc-editor.org/rfc/rfc6749#section-4.1.2.1" class="relref">Section 4.1.2.1</a> of [<a href="#RFC6749" class="xref">RFC6749</a>]</span>.  In those cases where <span><a href="https://www.rfc-editor.org/rfc/rfc6749#section-4.1.2.1" class="relref">Section 4.1.2.1</a> of [<a href="#RFC6749" class="xref">RFC6749</a>]</span> prohibits automatic redirection with an error back to the requesting client and hence doesn't define an error code (for example, when the request fails due to a missing, invalid, or mismatching redirection URI), the <code>invalid_request</code> error code can be used as the default error code. Error codes defined by the OAuth extension can also be used when such an extension is involved in the initial processing of the authorization request that was pushed. Since initial processing of the pushed authorization request does not involve resource owner interaction, error codes related to user interaction, such as <code>consent_required</code> defined by <span>[<a href="#OIDC" class="xref">OIDC</a>]</span>, are never returned.<a href="#section-2.3-1" class="pilcrow">¶</a></p>
< <p id="section-2.3-2">If the client is required to use signed Request Objects, by either the authorization server or the client policy (see <span>[<a href="#RFC9101" class="xref">RFC9101</a>], <a href="https://www.rfc-editor.org/rfc/rfc9101#section-10.5" class="relref">Section 10.5</a></span>), the authorization server <span class="bcp14">MUST</span> only accept requests complying with the definition given in <a href="#request_parameter" class="xref">Section 3</a> and <span class="bcp14">MUST</span> refuse any other request with HTTP status code 400 and error code <code>invalid_request</code>.<a href="#section-2.3-2" class="pilcrow">¶</a></p>
---
> <p id="section-2.3-1">The authorization server returns an error response with the same format as is specified for error responses from the token endpoint in <span><a href="https://rfc-editor.org/rfc/rfc6749#section-5.2" class="relref">Section 5.2</a> of [<a href="#RFC6749" class="cite xref">RFC6749</a>]</span> using the appropriate error code from therein or from <span><a href="https://rfc-editor.org/rfc/rfc6749#section-4.1.2.1" class="relref">Section 4.1.2.1</a> of [<a href="#RFC6749" class="cite xref">RFC6749</a>]</span>.  In those cases where <span><a href="https://rfc-editor.org/rfc/rfc6749#section-4.1.2.1" class="relref">Section 4.1.2.1</a> of [<a href="#RFC6749" class="cite xref">RFC6749</a>]</span> prohibits automatic redirection with an error back to the requesting client and hence doesn't define an error code (for example, when the request fails due to a missing, invalid, or mismatching redirection URI), the <code>invalid_request</code> error code can be used as the default error code. Error codes defined by the OAuth extension can also be used when such an extension is involved in the initial processing of the authorization request that was pushed. Since initial processing of the pushed authorization request does not involve resource owner interaction, error codes related to user interaction, such as <code>consent_required</code> defined by <span>[<a href="#OIDC" class="cite xref">OIDC</a>]</span>, are never returned.<a href="#section-2.3-1" class="pilcrow">¶</a></p>
> <p id="section-2.3-2">If the client is required to use signed Request Objects, by either the authorization server or the client policy (see <span>[<a href="#RFC9101" class="cite xref">RFC9101</a>], <a href="https://rfc-editor.org/rfc/rfc9101#section-10.5" class="relref">Section 10.5</a></span>), the authorization server <span class="bcp14">MUST</span> only accept requests complying with the definition given in <a href="#request_parameter" class="auto internal xref">Section 3</a> and <span class="bcp14">MUST</span> refuse any other request with HTTP status code 400 and error code <code>invalid_request</code>.<a href="#section-2.3-2" class="pilcrow">¶</a></p>
1609,1610c1633,1634
< <div id="section-2.3-6">
< <pre class="sourcecode lang-http-message"> HTTP/1.1 400 Bad Request
---
> <div class="lang-http-message sourcecode" id="section-2.3-6">
> <pre> HTTP/1.1 400 Bad Request
1628c1652
< <p id="section-2.4-1">OAuth 2.0 <span>[<a href="#RFC6749" class="xref">RFC6749</a>]</span> allows clients to use unregistered <code>redirect_uri</code> values in certain circumstances or for the authorization server to apply its own matching semantics to the <code>redirect_uri</code> value presented by the client at the authorization endpoint. However, the OAuth security BCP <span>[<a href="#I-D.ietf-oauth-security-topics" class="xref">OAUTH-SECURITY-TOPICS</a>]</span> as well as the OAuth 2.1 specification <span>[<a href="#I-D.ietf-oauth-v2-1" class="xref">OAUTH-V2</a>]</span> require an authorization server to exactly match the <code>redirect_uri</code> parameter against the set of redirect URIs previously established for a particular client. This is a means for early detection of client impersonation attempts and prevents token leakage and open redirection. As a downside, this can make client management more cumbersome since the redirect URI is typically the most volatile part of a client policy.<a href="#section-2.4-1" class="pilcrow">¶</a></p>
---
> <p id="section-2.4-1">OAuth 2.0 <span>[<a href="#RFC6749" class="cite xref">RFC6749</a>]</span> allows clients to use unregistered <code>redirect_uri</code> values in certain circumstances or for the authorization server to apply its own matching semantics to the <code>redirect_uri</code> value presented by the client at the authorization endpoint. However, the OAuth security BCP <span>[<a href="#I-D.ietf-oauth-security-topics" class="cite xref">OAUTH-SECURITY-TOPICS</a>]</span> as well as the OAuth 2.1 specification <span>[<a href="#I-D.ietf-oauth-v2-1" class="cite xref">OAUTH-V2</a>]</span> require an authorization server to exactly match the <code>redirect_uri</code> parameter against the set of redirect URIs previously established for a particular client. This is a means for early detection of client impersonation attempts and prevents token leakage and open redirection. As a downside, this can make client management more cumbersome since the redirect URI is typically the most volatile part of a client policy.<a href="#section-2.4-1" class="pilcrow">¶</a></p>
1642,1645c1666,1669
< <p id="section-3-1">Clients <span class="bcp14">MAY</span> use the <code>request</code> parameter as defined in JAR <span>[<a href="#RFC9101" class="xref">RFC9101</a>]</span> to push a Request Object JWT to the authorization server. The rules for processing, signing, and encryption of the Request Object as defined in JAR <span>[<a href="#RFC9101" class="xref">RFC9101</a>]</span> apply. Request parameters required by a given client authentication method are included in the <code>application/x-www-form-urlencoded</code> request directly and are the only parameters other than <code>request</code> in the form body (e.g., mutual TLS client authentication <span>[<a href="#RFC8705" class="xref">RFC8705</a>]</span> uses the <code>client_id</code> HTTP request parameter, while JWT assertion-based client authentication <span>[<a href="#RFC7523" class="xref">RFC7523</a>]</span> uses <code>client_assertion</code> and <code>client_assertion_type</code>). All other request parameters, i.e., those pertaining to the authorization request itself, <span class="bcp14">MUST</span> appear as claims of the JWT representing the authorization request.<a href="#section-3-1" class="pilcrow">¶</a></p>
< <p id="section-3-2">The following is an example of a pushed authorization request using a signed Request Object with the same authorization request payload as the example in <a href="#request" class="xref">Section 2.1</a>. The client is authenticated with JWT client assertion-based authentication <span>[<a href="#RFC7523" class="xref">RFC7523</a>]</span> (extra line breaks and spaces for display purposes only):<a href="#section-3-2" class="pilcrow">¶</a></p>
< <div id="section-3-3">
< <pre class="sourcecode lang-http-message"> POST /as/par HTTP/1.1
---
> <p id="section-3-1">Clients <span class="bcp14">MAY</span> use the <code>request</code> parameter as defined in JAR <span>[<a href="#RFC9101" class="cite xref">RFC9101</a>]</span> to push a Request Object JWT to the authorization server. The rules for processing, signing, and encryption of the Request Object as defined in JAR <span>[<a href="#RFC9101" class="cite xref">RFC9101</a>]</span> apply. Request parameters required by a given client authentication method are included in the <code>application/x-www-form-urlencoded</code> request directly and are the only parameters other than <code>request</code> in the form body (e.g., mutual TLS client authentication <span>[<a href="#RFC8705" class="cite xref">RFC8705</a>]</span> uses the <code>client_id</code> HTTP request parameter, while JWT assertion-based client authentication <span>[<a href="#RFC7523" class="cite xref">RFC7523</a>]</span> uses <code>client_assertion</code> and <code>client_assertion_type</code>). All other request parameters, i.e., those pertaining to the authorization request itself, <span class="bcp14">MUST</span> appear as claims of the JWT representing the authorization request.<a href="#section-3-1" class="pilcrow">¶</a></p>
> <p id="section-3-2">The following is an example of a pushed authorization request using a signed Request Object with the same authorization request payload as the example in <a href="#request" class="auto internal xref">Section 2.1</a>. The client is authenticated with JWT client assertion-based authentication <span>[<a href="#RFC7523" class="cite xref">RFC7523</a>]</span> (extra line breaks and spaces for display purposes only):<a href="#section-3-2" class="pilcrow">¶</a></p>
> <div class="lang-http-message sourcecode" id="section-3-3">
> <pre> POST /as/par HTTP/1.1
1676c1700
< <p id="section-3-4">The authorization server <span class="bcp14">MUST</span> take the following steps beyond the processing rules defined in <a href="#request" class="xref">Section 2.1</a>:<a href="#section-3-4" class="pilcrow">¶</a></p>
---
> <p id="section-3-4">The authorization server <span class="bcp14">MUST</span> take the following steps beyond the processing rules defined in <a href="#request" class="auto internal xref">Section 2.1</a>:<a href="#section-3-4" class="pilcrow">¶</a></p>
1678c1702
< <li id="section-3-5.1">If applicable, decrypt the Request Object as specified in JAR <span>[<a href="#RFC9101" class="xref">RFC9101</a>], <a href="https://www.rfc-editor.org/rfc/rfc9101#section-6.1" class="relref">Section 6.1</a></span>.<a href="#section-3-5.1" class="pilcrow">¶</a>
---
> <li id="section-3-5.1">If applicable, decrypt the Request Object as specified in JAR <span>[<a href="#RFC9101" class="cite xref">RFC9101</a>], <a href="https://rfc-editor.org/rfc/rfc9101#section-6.1" class="relref">Section 6.1</a></span>.<a href="#section-3-5.1" class="pilcrow">¶</a>
1680c1704
<         <li id="section-3-5.2">Validate the Request Object signature as specified in JAR <span>[<a href="#RFC9101" class="xref">RFC9101</a>], <a href="https://www.rfc-editor.org/rfc/rfc9101#section-6.2" class="relref">Section 6.2</a></span>.<a href="#section-3-5.2" class="pilcrow">¶</a>
---
>         <li id="section-3-5.2">Validate the Request Object signature as specified in JAR <span>[<a href="#RFC9101" class="cite xref">RFC9101</a>], <a href="https://rfc-editor.org/rfc/rfc9101#section-6.2" class="relref">Section 6.2</a></span>.<a href="#section-3-5.2" class="pilcrow">¶</a>
1685,1687c1709,1711
< <p id="section-3-6">The following RSA key pair, represented in JSON Web Key (JWK) format <span>[<a href="#RFC7517" class="xref">RFC7517</a>]</span>, can be used to validate or recreate the Request Object signature in the above example (extra line breaks and indentation within values for display purposes only):<a href="#section-3-6" class="pilcrow">¶</a></p>
< <div id="section-3-7">
< <pre class="sourcecode lang-json"> {
---
> <p id="section-3-6">The following RSA key pair, represented in JSON Web Key (JWK) format <span>[<a href="#RFC7517" class="cite xref">RFC7517</a>]</span>, can be used to validate or recreate the Request Object signature in the above example (extra line breaks and indentation within values for display purposes only):<a href="#section-3-6" class="pilcrow">¶</a></p>
> <div class="lang-json sourcecode" id="section-3-7">
> <pre> {
1729,1731c1753,1755
< <p id="section-4-1">The client uses the <code>request_uri</code> value returned by the authorization server to build an authorization request as defined in <span>[<a href="#RFC9101" class="xref">RFC9101</a>]</span>. This is shown in the following example where the client directs the user agent to make the following HTTP request (extra line breaks and indentation for display purposes only):<a href="#section-4-1" class="pilcrow">¶</a></p>
< <div id="section-4-2">
< <pre class="sourcecode lang-http-message"> GET /authorize?client_id=s6BhdRkqt3&amp;request_uri=urn%3Aietf%3Aparams
---
> <p id="section-4-1">The client uses the <code>request_uri</code> value returned by the authorization server to build an authorization request as defined in <span>[<a href="#RFC9101" class="cite xref">RFC9101</a>]</span>. This is shown in the following example where the client directs the user agent to make the following HTTP request (extra line breaks and indentation for display purposes only):<a href="#section-4-1" class="pilcrow">¶</a></p>
> <div class="lang-http-message sourcecode" id="section-4-2">
> <pre> GET /authorize?client_id=s6BhdRkqt3&amp;request_uri=urn%3Aietf%3Aparams
1740c1764
<         <p id="section-4-6.1">Note: Authorization server and clients <span class="bcp14">MAY</span> use metadata as defined in Sections <a href="#as_metadata" class="xref">5</a> and <a href="#c_metadata" class="xref">6</a> to signal the desired behavior.<a href="#section-4-6.1" class="pilcrow">¶</a></p>
---
>         <p id="section-4-6.1">Note: Authorization server and clients <span class="bcp14">MAY</span> use metadata as defined in Sections <a href="#as_metadata" class="auto internal xref">5</a> and <a href="#c_metadata" class="auto internal xref">6</a> to signal the desired behavior.<a href="#section-4-6.1" class="pilcrow">¶</a></p>
1749c1773
< <p id="section-5-1">The following authorization server metadata parameters <span>[<a href="#RFC8414" class="xref">RFC8414</a>]</span> are introduced to signal the server's capability and policy with respect to PAR.<a href="#section-5-1" class="pilcrow">¶</a></p>
---
> <p id="section-5-1">The following authorization server metadata parameters <span>[<a href="#RFC8414" class="cite xref">RFC8414</a>]</span> are introduced to signal the server's capability and policy with respect to PAR.<a href="#section-5-1" class="pilcrow">¶</a></p>
1760c1784
< <p id="section-5-3">Note that the presence of <code>pushed_authorization_request_endpoint</code> is sufficient for a client to determine that it may use the PAR flow. A <code>request_uri</code> value obtained from the PAR endpoint is usable at the authorization endpoint regardless of other authorization server metadata such as <code>request_uri_parameter_supported</code> or <code>require_request_uri_registration</code> <span>[<a href="#OIDC.Disco" class="xref">OIDC.Disco</a>]</span>.<a href="#section-5-3" class="pilcrow">¶</a></p>
---
> <p id="section-5-3">Note that the presence of <code>pushed_authorization_request_endpoint</code> is sufficient for a client to determine that it may use the PAR flow. A <code>request_uri</code> value obtained from the PAR endpoint is usable at the authorization endpoint regardless of other authorization server metadata such as <code>request_uri_parameter_supported</code> or <code>require_request_uri_registration</code> <span>[<a href="#OIDC.Disco" class="cite xref">OIDC.Disco</a>]</span>.<a href="#section-5-3" class="pilcrow">¶</a></p>
1768c1792
< <p id="section-6-1">The Dynamic Client Registration Protocol <span>[<a href="#RFC7591" class="xref">RFC7591</a>]</span> defines an API for dynamically registering OAuth 2.0 client metadata with authorization servers. The metadata defined by <span>[<a href="#RFC7591" class="xref">RFC7591</a>]</span>, and registered extensions to it, also imply a general data model for clients that is useful for authorization server implementations even when the Dynamic Client Registration Protocol isn't in play. Such implementations will typically have some sort of user interface available for managing client configuration. The following client metadata parameter is introduced by this document to indicate whether pushed authorization requests are required for the given client.<a href="#section-6-1" class="pilcrow">¶</a></p>
---
> <p id="section-6-1">The Dynamic Client Registration Protocol <span>[<a href="#RFC7591" class="cite xref">RFC7591</a>]</span> defines an API for dynamically registering OAuth 2.0 client metadata with authorization servers. The metadata defined by <span>[<a href="#RFC7591" class="cite xref">RFC7591</a>]</span>, and registered extensions to it, also imply a general data model for clients that is useful for authorization server implementations even when the Dynamic Client Registration Protocol isn't in play. Such implementations will typically have some sort of user interface available for managing client configuration. The following client metadata parameter is introduced by this document to indicate whether pushed authorization requests are required for the given client.<a href="#section-6-1" class="pilcrow">¶</a></p>
1791c1815
< given in JAR <span>[<a href="#RFC9101" class="xref">RFC9101</a>], <a href="https://www.rfc-editor.org/rfc/rfc9101#section-10.2" class="relref">Section 10.2</a></span>, clause (d) on request URI entropy.<a href="#section-7.1-1" class="pilcrow">¶</a></p>
---
> given in JAR <span>[<a href="#RFC9101" class="cite xref">RFC9101</a>], <a href="https://rfc-editor.org/rfc/rfc9101#section-10.2" class="relref">Section 10.2</a></span>, clause (d) on request URI entropy.<a href="#section-7.1-1" class="pilcrow">¶</a></p>
1824c1848
< <p id="section-7.5-1">An attacker could capture the request URI from one request and then substitute it into a different authorization request. For example, in the context of OpenID Connect, an attacker could replace a request URI asking for a high level of authentication assurance with one that requires a lower level of assurance. Clients <span class="bcp14">SHOULD</span> make use of PKCE <span>[<a href="#RFC7636" class="xref">RFC7636</a>]</span>, a unique <code>state</code> parameter <span>[<a href="#RFC6749" class="xref">RFC6749</a>]</span>, or the OIDC "nonce" parameter <span>[<a href="#OIDC" class="xref">OIDC</a>]</span> in the pushed Request Object to prevent this attack.<a href="#section-7.5-1" class="pilcrow">¶</a></p>
---
> <p id="section-7.5-1">An attacker could capture the request URI from one request and then substitute it into a different authorization request. For example, in the context of OpenID Connect, an attacker could replace a request URI asking for a high level of authentication assurance with one that requires a lower level of assurance. Clients <span class="bcp14">SHOULD</span> make use of PKCE <span>[<a href="#RFC7636" class="cite xref">RFC7636</a>]</span>, a unique <code>state</code> parameter <span>[<a href="#RFC6749" class="cite xref">RFC6749</a>]</span>, or the OIDC "nonce" parameter <span>[<a href="#OIDC" class="cite xref">OIDC</a>]</span> in the pushed Request Object to prevent this attack.<a href="#section-7.5-1" class="pilcrow">¶</a></p>
1847,1848c1871,1872
< <p id="section-9.1-1">IANA has registered the following values in the IANA "OAuth Authorization Server Metadata" registry of <span>[<a href="#IANA.OAuth.Parameters" class="xref">IANA.OAuth.Parameters</a>]</span> established by <span>[<a href="#RFC8414" class="xref">RFC8414</a>]</span>.<a href="#section-9.1-1" class="pilcrow">¶</a></p>
< <span class="break"></span><dl class="dlParallel dlCompact" id="section-9.1-2">
---
> <p id="section-9.1-1">IANA has registered the following values in the IANA "OAuth Authorization Server Metadata" registry of <span>[<a href="#IANA.OAuth.Parameters" class="cite xref">IANA.OAuth.Parameters</a>]</span> established by <span>[<a href="#RFC8414" class="cite xref">RFC8414</a>]</span>.<a href="#section-9.1-1" class="pilcrow">¶</a></p>
> <span class="break"></span><dl class="dlCompact dlParallel" id="section-9.1-2">
1864c1888
<             <a href="#as_metadata" class="xref">Section 5</a> of RFC 9126<a href="#section-9.1-2.8" class="pilcrow">¶</a>
---
>             <a href="#as_metadata" class="auto internal xref">Section 5</a> of RFC 9126<a href="#section-9.1-2.8" class="pilcrow">¶</a>
1868c1892
< <span class="break"></span><dl class="dlParallel dlCompact" id="section-9.1-3">
---
> <span class="break"></span><dl class="dlCompact dlParallel" id="section-9.1-3">
1884c1908
<             <a href="#as_metadata" class="xref">Section 5</a> of RFC 9126<a href="#section-9.1-3.8" class="pilcrow">¶</a>
---
>             <a href="#as_metadata" class="auto internal xref">Section 5</a> of RFC 9126<a href="#section-9.1-3.8" class="pilcrow">¶</a>
1895,1896c1919,1920
< <p id="section-9.2-1">IANA has registered the following value in the IANA "OAuth Dynamic Client Registration Metadata" registry of <span>[<a href="#IANA.OAuth.Parameters" class="xref">IANA.OAuth.Parameters</a>]</span> established by <span>[<a href="#RFC7591" class="xref">RFC7591</a>]</span>.<a href="#section-9.2-1" class="pilcrow">¶</a></p>
< <span class="break"></span><dl class="dlParallel dlCompact" id="section-9.2-2">
---
> <p id="section-9.2-1">IANA has registered the following value in the IANA "OAuth Dynamic Client Registration Metadata" registry of <span>[<a href="#IANA.OAuth.Parameters" class="cite xref">IANA.OAuth.Parameters</a>]</span> established by <span>[<a href="#RFC7591" class="cite xref">RFC7591</a>]</span>.<a href="#section-9.2-1" class="pilcrow">¶</a></p>
> <span class="break"></span><dl class="dlCompact dlParallel" id="section-9.2-2">
1912c1936
<             <a href="#c_metadata" class="xref">Section 6</a> of RFC 9126<a href="#section-9.2-2.8" class="pilcrow">¶</a>
---
>             <a href="#c_metadata" class="auto internal xref">Section 6</a> of RFC 9126<a href="#section-9.2-2.8" class="pilcrow">¶</a>
1923,1924c1947,1948
< <p id="section-9.3-1">IANA has registered the following value in the "OAuth URI" registry of <span>[<a href="#IANA.OAuth.Parameters" class="xref">IANA.OAuth.Parameters</a>]</span> established by <span>[<a href="#RFC6755" class="xref">RFC6755</a>]</span>.<a href="#section-9.3-1" class="pilcrow">¶</a></p>
< <span class="break"></span><dl class="dlParallel dlCompact" id="section-9.3-2">
---
> <p id="section-9.3-1">IANA has registered the following value in the "OAuth URI" registry of <span>[<a href="#IANA.OAuth.Parameters" class="cite xref">IANA.OAuth.Parameters</a>]</span> established by <span>[<a href="#RFC6755" class="cite xref">RFC6755</a>]</span>.<a href="#section-9.3-1" class="pilcrow">¶</a></p>
> <span class="break"></span><dl class="dlCompact dlParallel" id="section-9.3-2">
1940c1964
<             <a href="#par-response" class="xref">Section 2.2</a> of RFC 9126<a href="#section-9.3-2.8" class="pilcrow">¶</a>
---
>             <a href="#par-response" class="auto internal xref">Section 2.2</a> of RFC 9126<a href="#section-9.3-2.8" class="pilcrow">¶</a>
