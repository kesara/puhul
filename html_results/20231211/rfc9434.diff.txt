18c18
< <meta content="xml2rfc 3.17.4" name="generator">
---
> <meta content="xml2rfc 3.18.2" name="generator">
26,29c26,29
<   xml2rfc 3.17.4
<     Python 3.9.15
<     ConfigArgParse 1.5.3
<     google-i18n-address 3.0.0
---
>   xml2rfc 3.18.2
>     Python 3.11.7
>     ConfigArgParse 1.7
>     google-i18n-address 3.1.0
32,37c32,37
<     lxml 4.9.0
<     platformdirs 3.8.0
<     pycountry 22.3.5
<     PyYAML 6.0
<     requests 2.28.0
<     setuptools 44.1.1
---
>     lxml 4.9.3
>     platformdirs 4.1.0
>     pycountry 23.12.7
>     PyYAML 6.0.1
>     requests 2.31.0
>     setuptools 65.5.0
39,40c39
<     wcwidth 0.2.5
<     weasyprint 56.1
---
>     wcwidth 0.2.12
42c41
< <link href="rfc9434.xml" rel="alternate" type="application/rfc+xml">
---
> <link href="rfc/rfc9434.xml" rel="alternate" type="application/rfc+xml">
86a86
>   overflow-wrap: break-word;
317a318,320
> blockquote > *:last-child {
>   margin-bottom: 0;
> }
655d657
< 
1207a1210
> <link href="https://datatracker.ietf.org/doc/draft-ietf-drip-arch-31" rel="prev">
1210c1213
<   <link href="https://datatracker.ietf.org/doc/draft-ietf-drip-arch-31" rel="prev">
---
>   <script type="application/javascript">async function addMetadata(){try{const e=document.styleSheets[0].cssRules;for(let t=0;t<e.length;t++)if(/#identifiers/.exec(e[t].selectorText)){const a=e[t].cssText.replace("#identifiers","#external-updates");document.styleSheets[0].insertRule(a,document.styleSheets[0].cssRules.length)}}catch(e){console.log(e)}const e=document.getElementById("external-metadata");if(e)try{var t,a="",o=function(e){const t=document.getElementsByTagName("meta");for(let a=0;a<t.length;a++)if(t[a].getAttribute("name")===e)return t[a].getAttribute("content");return""}("rfc.number");if(o){t="https://www.rfc-editor.org/rfc/rfc"+o+".json";try{const e=await fetch(t);a=await e.json()}catch(e){t=document.URL.indexOf("html")>=0?document.URL.replace(/html$/,"json"):document.URL+".json";const o=await fetch(t);a=await o.json()}}if(!a)return;e.style.display="block";const s="",d="https://datatracker.ietf.org/doc",n="https://datatracker.ietf.org/ipr/search",c="https://www.rfc-editor.org/info",l=a.doc_id.toLowerCase(),i=a.doc_id.slice(0,3).toLowerCase(),f=a.doc_id.slice(3).replace(/^0+/,""),u={status:"Status",obsoletes:"Obsoletes",obsoleted_by:"Obsoleted By",updates:"Updates",updated_by:"Updated By",see_also:"See Also",errata_url:"Errata"};let h="<dl style='overflow:hidden' id='external-updates'>";["status","obsoletes","obsoleted_by","updates","updated_by","see_also","errata_url"].forEach(e=>{if("status"==e){a[e]=a[e].toLowerCase();var t=a[e].split(" "),o=t.length,w="",p=1;for(let e=0;e<o;e++)p<o?w=w+r(t[e])+" ":w+=r(t[e]),p++;a[e]=w}else if("obsoletes"==e||"obsoleted_by"==e||"updates"==e||"updated_by"==e){var g,m="",b=1;g=a[e].length;for(let t=0;t<g;t++)a[e][t]&&(a[e][t]=String(a[e][t]).toLowerCase(),m=b<g?m+"<a href='"+s+"/rfc/".concat(a[e][t])+"'>"+a[e][t].slice(3)+"</a>, ":m+"<a href='"+s+"/rfc/".concat(a[e][t])+"'>"+a[e][t].slice(3)+"</a>",b++);a[e]=m}else if("see_also"==e){var y,L="",C=1;y=a[e].length;for(let t=0;t<y;t++)if(a[e][t]){a[e][t]=String(a[e][t]);var _=a[e][t].slice(0,3),v=a[e][t].slice(3).replace(/^0+/,"");L=C<y?"RFC"!=_?L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+_+" "+v+"</a>, ":L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+v+"</a>, ":"RFC"!=_?L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+_+" "+v+"</a>":L+"<a href='"+s+"/info/"+_.toLowerCase().concat(v.toLowerCase())+"'>"+v+"</a>",C++}a[e]=L}else if("errata_url"==e){var R="";R=a[e]?R+"<a href='"+a[e]+"'>Errata exist</a> | <a href='"+d+"/"+l+"'>Datatracker</a>| <a href='"+n+"/?"+i+"="+f+"&submit="+i+"'>IPR</a> | <a href='"+c+"/"+l+"'>Info page</a>":"<a href='"+d+"/"+l+"'>Datatracker</a> | <a href='"+n+"/?"+i+"="+f+"&submit="+i+"'>IPR</a> | <a href='"+c+"/"+l+"'>Info page</a>",a[e]=R}""!=a[e]?"Errata"==u[e]?h+=`<dt>More info:</dt><dd>${a[e]}</dd>`:h+=`<dt>${u[e]}:</dt><dd>${a[e]}</dd>`:"Errata"==u[e]&&(h+=`<dt>More info:</dt><dd>${a[e]}</dd>`)}),h+="</dl>",e.innerHTML=h}catch(e){console.log(e)}else console.log("Could not locate metadata <div> element");function r(e){return e.charAt(0).toUpperCase()+e.slice(1)}}window.removeEventListener("load",addMetadata),window.addEventListener("load",addMetadata);</script>
1213c1216
< <script src="https://www.rfc-editor.org/js/metadata.min.js"></script>
---
> <script src="metadata.min.js"></script>
1575c1578
<             <li class="normal" id="section-1.2.2-2.3">The Net-RID SP publishes, via the Discovery and Synchronization Service (DSS) over the Internet, that it has operations in various 4-D airspace volumes (<span><a href="https://www.rfc-editor.org/rfc/rfc9153#section-2.2" class="relref">Section 2.2</a> of [<a href="#RFC9153" class="cite xref">RFC9153</a>]</span>), describing the volumes but not the operations.<a href="#section-1.2.2-2.3" class="pilcrow">¶</a>
---
>             <li class="normal" id="section-1.2.2-2.3">The Net-RID SP publishes, via the Discovery and Synchronization Service (DSS) over the Internet, that it has operations in various 4-D airspace volumes (<span><a href="https://rfc-editor.org/rfc/rfc9153#section-2.2" class="relref">Section 2.2</a> of [<a href="#RFC9153" class="cite xref">RFC9153</a>]</span>), describing the volumes but not the operations.<a href="#section-1.2.2-2.3" class="pilcrow">¶</a>
1747c1750
< <p id="section-2-4">Some of the acronyms have plural forms that remain the same as their singular forms, e.g., "UAS" can expand to "Unmanned Aircraft System" (singular) or "Unmanned Aircraft Systems" (plural), as appropriate for the context.  This usage is consistent with <span><a href="https://www.rfc-editor.org/rfc/rfc9153#section-2.2" class="relref">Section 2.2</a> of [<a href="#RFC9153" class="cite xref">RFC9153</a>]</span>.<a href="#section-2-4" class="pilcrow">¶</a></p>
---
> <p id="section-2-4">Some of the acronyms have plural forms that remain the same as their singular forms, e.g., "UAS" can expand to "Unmanned Aircraft System" (singular) or "Unmanned Aircraft Systems" (plural), as appropriate for the context.  This usage is consistent with <span><a href="https://rfc-editor.org/rfc/rfc9153#section-2.2" class="relref">Section 2.2</a> of [<a href="#RFC9153" class="cite xref">RFC9153</a>]</span>.<a href="#section-2-4" class="pilcrow">¶</a></p>
1819c1822
< <p id="section-3-2">Self-asserting in this usage means that, given the Host Identity (HI), the HHIT Overlay Routable Cryptographic Hash IDentifier (ORCHID) construction (see <span><a href="https://www.rfc-editor.org/rfc/rfc9374#section-3.5" class="relref">Section 3.5</a> of [<a href="#RFC9374" class="cite xref">RFC9374</a>]</span>), and a signature of the DIME on the HHIT and HI, the HHIT can be verified by the receiver as a trusted UAS ID. The explicit registration hierarchy within the HHIT provides registration discovery (managed by a DIME) to either yield the HI for  third-party (seeking UAS ID endorsement) validation or prove that the HHIT and HI have been registered uniquely.<a href="#section-3-2" class="pilcrow">¶</a></p>
---
> <p id="section-3-2">Self-asserting in this usage means that, given the Host Identity (HI), the HHIT Overlay Routable Cryptographic Hash IDentifier (ORCHID) construction (see <span><a href="https://rfc-editor.org/rfc/rfc9374#section-3.5" class="relref">Section 3.5</a> of [<a href="#RFC9374" class="cite xref">RFC9374</a>]</span>), and a signature of the DIME on the HHIT and HI, the HHIT can be verified by the receiver as a trusted UAS ID. The explicit registration hierarchy within the HHIT provides registration discovery (managed by a DIME) to either yield the HI for  third-party (seeking UAS ID endorsement) validation or prove that the HHIT and HI have been registered uniquely.<a href="#section-3-2" class="pilcrow">¶</a></p>
1826c1829
< <p id="section-3.1-2">However, Broadcast RID, especially its support for Bluetooth 4, imposes severe constraints. A previous revision of the ASTM UAS RID, <span>[<a href="#F3411-19" class="cite xref">F3411-19</a>]</span>, allowed a UAS ID of types (1, 2, and 3), each of 20 bytes. <span>[<a href="#F3411-22a" class="cite xref">F3411-22a</a>]</span> adds type 4, Specific Session ID, for other Standards Development Organizations (SDOs) to extend ASTM UAS RID. Type 4 uses one byte to index the Specific Session ID subtype, leaving 19 bytes (see ID-1 of DRIP Requirements <span>[<a href="#RFC9153" class="cite xref">RFC9153</a>]</span>). As described in <span><a href="https://www.rfc-editor.org/rfc/rfc9153#section-3" class="relref">Section 3</a> of [<a href="#RFC9153" class="cite xref">RFC9153</a>]</span>, ASTM has allocated Specific Session ID subtype 1 to IETF DRIP.<a href="#section-3.1-2" class="pilcrow">¶</a></p>
---
> <p id="section-3.1-2">However, Broadcast RID, especially its support for Bluetooth 4, imposes severe constraints. A previous revision of the ASTM UAS RID, <span>[<a href="#F3411-19" class="cite xref">F3411-19</a>]</span>, allowed a UAS ID of types (1, 2, and 3), each of 20 bytes. <span>[<a href="#F3411-22a" class="cite xref">F3411-22a</a>]</span> adds type 4, Specific Session ID, for other Standards Development Organizations (SDOs) to extend ASTM UAS RID. Type 4 uses one byte to index the Specific Session ID subtype, leaving 19 bytes (see ID-1 of DRIP Requirements <span>[<a href="#RFC9153" class="cite xref">RFC9153</a>]</span>). As described in <span><a href="https://rfc-editor.org/rfc/rfc9153#section-3" class="relref">Section 3</a> of [<a href="#RFC9153" class="cite xref">RFC9153</a>]</span>, ASTM has allocated Specific Session ID subtype 1 to IETF DRIP.<a href="#section-3.1-2" class="pilcrow">¶</a></p>
2066c2069
< <p id="section-10-1">Broadcast RID messages can contain personal data (<span><a href="https://www.rfc-editor.org/rfc/rfc6973#section-3.2" class="relref">Section 3.2</a> of [<a href="#RFC6973" class="cite xref">RFC6973</a>]</span>), such as the operator ID, and, in most jurisdictions, must contain the pilot/GCS location. The DRIP architectural approach for personal data protection is symmetric encryption of the personal data using a session key known to the UAS and its USS, as follows. Authorized Observers obtain plaintext in either of two ways: 1) an Observer can send the UAS ID and the cyphertext to a server that offers decryption as a service, and 2) an Observer can send just the UAS ID to a server that returns the session key so that the Observer can directly, locally decrypt all cyphertext sent by that UA during that session (UAS operation). In either case, the server can be a public safety USS, the Observer's own USS, or the UA's USS if the latter can be determined (which, under DRIP, can be from the UAS ID itself). Personal data is protected unless the UAS is otherwise configured, i.e., as part of DRIP-enhanced RID subsystem provisioning, as part of UTM operation authorization, or via subsequent authenticated communications from a cognizant authority. Personal data protection <span class="bcp14">MUST NOT</span> be used if the UAS loses connectivity to its USS; if the UAS loses connectivity, Observers nearby likely also won't have connectivity enabling decryption of the personal data. The UAS always has the option to abort the operation if personal data protection is disallowed, but if this occurs during flight, the UA then <span class="bcp14">MUST</span> broadcast the personal data without protection until it lands and is powered off. Note that normative language was used only minimally in this section, as privacy protection requires refinement of the DRIP architecture and specification of interoperable protocol extensions, which are left for future DRIP documents.<a href="#section-10-1" class="pilcrow">¶</a></p>
---
> <p id="section-10-1">Broadcast RID messages can contain personal data (<span><a href="https://rfc-editor.org/rfc/rfc6973#section-3.2" class="relref">Section 3.2</a> of [<a href="#RFC6973" class="cite xref">RFC6973</a>]</span>), such as the operator ID, and, in most jurisdictions, must contain the pilot/GCS location. The DRIP architectural approach for personal data protection is symmetric encryption of the personal data using a session key known to the UAS and its USS, as follows. Authorized Observers obtain plaintext in either of two ways: 1) an Observer can send the UAS ID and the cyphertext to a server that offers decryption as a service, and 2) an Observer can send just the UAS ID to a server that returns the session key so that the Observer can directly, locally decrypt all cyphertext sent by that UA during that session (UAS operation). In either case, the server can be a public safety USS, the Observer's own USS, or the UA's USS if the latter can be determined (which, under DRIP, can be from the UAS ID itself). Personal data is protected unless the UAS is otherwise configured, i.e., as part of DRIP-enhanced RID subsystem provisioning, as part of UTM operation authorization, or via subsequent authenticated communications from a cognizant authority. Personal data protection <span class="bcp14">MUST NOT</span> be used if the UAS loses connectivity to its USS; if the UAS loses connectivity, Observers nearby likely also won't have connectivity enabling decryption of the personal data. The UAS always has the option to abort the operation if personal data protection is disallowed, but if this occurs during flight, the UA then <span class="bcp14">MUST</span> broadcast the personal data without protection until it lands and is powered off. Note that normative language was used only minimally in this section, as privacy protection requires refinement of the DRIP architecture and specification of interoperable protocol extensions, which are left for future DRIP documents.<a href="#section-10-1" class="pilcrow">¶</a></p>
