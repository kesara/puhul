356c356
<       +------------+-----------+------------+-----------------------+
---
>       +============+===========+============+=======================+
493c493
<                +-------+----------+-------+-------+-------+
---
>                +=======+==========+=======+=======+=======+
567,568c567,568
<        addresses (D1, D2, D3, ...).  In this case, the ALTO client has
<        to invoke the ALTO Cross-Domain Server Discovery Procedure (as
---
>       addresses (D1, D2, D3, ...).  In this case, the ALTO client has to
>       invoke the ALTO Cross-Domain Server Discovery Procedure (as
571,586c571,585
<        IRD_URIS_S1, is a list of one or more URIs of Information
<        Resource Directories (IRDs, see Section 9 of [RFC7285]).
<        Considering the order and preference values, the client has to
<        check these IRDs for a suitable Endpoint Cost Service and query
<        it.  The ECS is an optional service (see Section 11.5.1 of
<        [RFC7285]), and therefore, it may well be that an IRD does not
<        refer to an ECS.
< 
<        Calling the Cross-Domain Server Discovery Procedure only once
<        with the single source address as a parameter -- as opposed to
<        multiple calls, e.g., one for each destination address -- is not
<        only a matter of efficiency.  In the given scenario, it is
<        advisable to send all ECS queries to the same ALTO server.  This
<        ensures that the results can be compared (e.g., for sorting
<        candidate resource providers), even when cost metrics lack a
<        well-defined base unit -- e.g., the "routingcost" metric.
---
>       IRD_URIS_S1, is a list of one or more URIs of Information Resource
>       Directories (IRDs, see Section 9 of [RFC7285]).  Considering the
>       order and preference values, the client has to check these IRDs
>       for a suitable Endpoint Cost Service and query it.  The ECS is an
>       optional service (see Section 11.5.1 of [RFC7285]), and therefore,
>       it may well be that an IRD does not refer to an ECS.
> 
>       Calling the Cross-Domain Server Discovery Procedure only once with
>       the single source address as a parameter -- as opposed to multiple
>       calls, e.g., one for each destination address -- is not only a
>       matter of efficiency.  In the given scenario, it is advisable to
>       send all ECS queries to the same ALTO server.  This ensures that
>       the results can be compared (e.g., for sorting candidate resource
>       providers), even when cost metrics lack a well-defined base unit
>       -- e.g., the "routingcost" metric.
592,595c591,594
<        IRD_URIS_D1 = XDOMDISC(D1,"ALTO:https").  The result,
<        IRD_URIS_D1, is a list of one or more URIs of IRDs.  Considering
<        the order and preference values, the client has to check these
<        IRDs for a suitable ECS and query it.
---
>       IRD_URIS_D1 = XDOMDISC(D1,"ALTO:https").  The result, IRD_URIS_D1,
>       is a list of one or more URIs of IRDs.  Considering the order and
>       preference values, the client has to check these IRDs for a
>       suitable ECS and query it.
607,612c606,611
<        ALTO client may also group the list based on destination
<        addresses and perform separately for each destination address the
<        same steps as in Case 2, as specified above.  However, comparing
<        results between these subqueries may be difficult, in particular
<        if the cost metric is a relative preference without a well-
<        defined base unit (e.g., the "routingcost" metric).
---
>       ALTO client may also group the list based on destination addresses
>       and perform separately for each destination address the same steps
>       as in Case 2, as specified above.  However, comparing results
>       between these subqueries may be difficult, in particular if the
>       cost metric is a relative preference without a well-defined base
>       unit (e.g., the "routingcost" metric).
868a868
>   
1127,1147c1127,1145
<        1.2  Use an inter-ALTO-server data replication protocol.
<             Possibly, the ALTO protocol itself -- maybe with some
<             extensions -- could be used for that purpose; however, this
<             has not been studied in detail so far.
< 
<    2.  Accept that different ALTO servers (possibly operated by
<        different organizations, e.g., ISPs) do not have the same
<        knowledge.
< 
<        2.1  Allow ALTO clients to send arbitrary queries to any ALTO
<             server (e.g., the one discovered using [RFC7286]).  If this
<             server cannot answer the query itself, it will fetch the
<             data on behalf of the client, using the ALTO protocol or a
<             to-be-defined inter-ALTO-server request forwarding protocol.
< 
<        2.2  Allow ALTO clients to send arbitrary queries to any ALTO
<             server (e.g., the one discovered using [RFC7286]).  If this
<             server cannot answer the query itself, it will redirect the
<             client to the "right" ALTO server that has the desired
<             information, using a small to-be-defined extension of the
<             ALTO protocol.
---
>       1.2Use an inter-ALTO-server data replication protocol.  Possibly,
>          the ALTO protocol itself -- maybe with some extensions -- could
>          be used for that purpose; however, this has not been studied in
>          detail so far.
> 
>    2. Accept that different ALTO servers (possibly operated by different
>       organizations, e.g., ISPs) do not have the same knowledge.
> 
>       2.1Allow ALTO clients to send arbitrary queries to any ALTO server
>          (e.g., the one discovered using [RFC7286]).  If this server
>          cannot answer the query itself, it will fetch the data on
>          behalf of the client, using the ALTO protocol or a to-be-
>          defined inter-ALTO-server request forwarding protocol.
> 
>       2.2Allow ALTO clients to send arbitrary queries to any ALTO server
>          (e.g., the one discovered using [RFC7286]).  If this server
>          cannot answer the query itself, it will redirect the client to
>          the "right" ALTO server that has the desired information, using
>          a small to-be-defined extension of the ALTO protocol.
1150,1151c1148
<             indexes ALTO servers and redirects and/or gives cached
<             results.
---
>          indexes ALTO servers and redirects and/or gives cached results.
1153,1155c1150,1152
<        2.4  ALTO clients need to use a new discovery mechanism to
<             discover the ALTO server that has the desired information
<             and contact it directly.
---
>       2.4ALTO clients need to use a new discovery mechanism to discover
>          the ALTO server that has the desired information and contact it
>          directly.
1765d1761
< 
1775d1770
< 
