66,87c66,89
<    1.  Introduction
<      1.1.  Conventions Used in This Document
<      1.2.  Scope of Experimentation
<    2.  Protocol Overview
<      2.1.  Initial Connection
<      2.2.  Subsequent Connections
<      2.3.  Indexing the Pins
<    3.  Message Definitions
<    4.  Cryptographic Operations
<      4.1.  Pinning Secret
<      4.2.  Pinning Ticket
<      4.3.  Pinning Protection Key
<      4.4.  Pinning Proof
<    5.  Operational Considerations
<      5.1.  Protection Key Synchronization
<      5.2.  Ticket Lifetime
<      5.3.  Certificate Renewal
<      5.4.  Certificate Revocation
<      5.5.  Disabling Pinning
<      5.6.  Server Compromise
<      5.7.  Disaster Recovery
<    6.  Security Considerations
---
>    1.  Introduction (Introduction)
>      1.1.  Conventions Used in This Document (Conventions Used in This
>            Document)
>      1.2.  Scope of Experimentation (Scope of Experimentation)
>    2.  Protocol Overview (Protocol Overview)
>      2.1.  Initial Connection (Initial Connection)
>      2.2.  Subsequent Connections (Subsequent Connections)
>      2.3.  Indexing the Pins (Indexing the Pins)
>    3.  Message Definitions (Message Definitions)
>    4.  Cryptographic Operations (Cryptographic Operations)
>      4.1.  Pinning Secret (Pinning Secret)
>      4.2.  Pinning Ticket (Pinning Ticket)
>      4.3.  Pinning Protection Key (Pinning Protection Key)
>      4.4.  Pinning Proof (Pinning Proof)
>    5.  Operational Considerations (Operational Considerations)
>      5.1.  Protection Key Synchronization (Protection Key
>            Synchronization)
>      5.2.  Ticket Lifetime (Ticket Lifetime)
>      5.3.  Certificate Renewal (Certificate Renewal)
>      5.4.  Certificate Revocation (Certificate Revocation)
>      5.5.  Disabling Pinning (Disabling Pinning)
>      5.6.  Server Compromise (Server Compromise)
>      5.7.  Disaster Recovery (Disaster Recovery)
>    6.  Security Considerations (Security Considerations)
89,104c91,109
<      6.2.  Pervasive Monitoring
<      6.3.  Server-Side Error Detection
<      6.4.  Client Policy and SSL Proxies
<      6.5.  Client-Side Error Behavior
<      6.6.  Stolen and Forged Tickets
<      6.7.  Client Privacy
<      6.8.  Ticket Protection Key Management
<    7.  IANA Considerations
<    8.  References
<      8.1.  Normative References
<      8.2.  Informative References
<    Appendix A.  Previous Work
<      A.1.  Comparison: HPKP
<      A.2.  Comparison: TACK
<    Acknowledgments
<    Authors' Addresses
---
>            (Trust-on-First-Use (TOFU) and MITM Attacks)
>      6.2.  Pervasive Monitoring (Pervasive Monitoring)
>      6.3.  Server-Side Error Detection (Server-Side Error Detection)
>      6.4.  Client Policy and SSL Proxies (Client Policy and SSL
>            Proxies)
>      6.5.  Client-Side Error Behavior (Client-Side Error Behavior)
>      6.6.  Stolen and Forged Tickets (Stolen and Forged Tickets)
>      6.7.  Client Privacy (Client Privacy)
>      6.8.  Ticket Protection Key Management (Ticket Protection Key
>            Management)
>    7.  IANA Considerations (IANA Considerations)
>    8.  References (References)
>      8.1.  Normative References (Normative References)
>      8.2.  Informative References (Informative References)
>    Appendix A.  Previous Work (Previous Work)
>      A.1.  Comparison: HPKP (Comparison: HPKP)
>      A.2.  Comparison: TACK (Comparison: TACK)
>    Acknowledgments (Acknowledgments)
>    Authors' Addresses (Authors' Addresses)
1057,1059c1062,1064
<    3.   Generate a single CSR (Certificate Signing Request) for the
<         first key pair, where you include the domain name in the CN
<         (Common Name) field:
---
>    3. Generate a single CSR (Certificate Signing Request) for the first
>       key pair, where you include the domain name in the CN (Common
>       Name) field:
1072,1073c1077,1078
<         Note that only the first key pair has been uploaded to the
<         server so far.
---
>       Note that only the first key pair has been uploaded to the server
>       so far.
1076,1078c1081,1083
<         somewhere encrypted like a password manager.  It won't expire,
<         as it's just a key pair; it just needs to be ready for when you
<         need to get your next certificate.
---
>       somewhere encrypted like a password manager.  It won't expire, as
>       it's just a key pair; it just needs to be ready for when you need
>       to get your next certificate.
1082,1083c1087,1088
<         server has been compromised, and you need to replace the key
<         pair and certificate.
---
>       server has been compromised, and you need to replace the key pair
>       and certificate.
1088,1089c1093,1094
<    9.   Generate a new backup key pair (backup2), get its hash, and
<         store it in a safe place (again, not on the live server).
---
>    9. Generate a new backup key pair (backup2), get its hash, and store
>       it in a safe place (again, not on the live server).
1091,1093c1096,1098
<    10.  Replace your old certificate and old key pair, update the
<         "Public-Key-Pins" header to remove the old hash, and add the new
<         "backup2" key pair.
---
>    10.Replace your old certificate and old key pair, update the "Public-
>       Key-Pins" header to remove the old hash, and add the new "backup2"
>       key pair.
1155d1159
< 
1161d1164
< 
