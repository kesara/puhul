829,830c829,831
<    Public Key:  The public key used to verify signatures generated by
<       the log.  A log MUST NOT use the same keypair as any other log.
---
>    Public Key:
>       The public key used to verify signatures generated by the log.  A
>       log MUST NOT use the same keypair as any other log.
834,850c835,855
<    Maximum Merge Delay:  The MMD the log has committed to.  This
<       document deliberately does not specify any limits on the value to
<       allow for experimentation.
< 
<    Version:  The version of the protocol supported by the log (currently
<       1 or 2).
< 
<    Maximum Chain Length:  The longest certificate chain submission the
<       log is willing to accept, if the log imposes any limit.
< 
<    STH Frequency Count:  The maximum number of STHs the log may produce
<       in any period equal to the Maximum Merge Delay (see Section 4.10).
< 
<    Final STH:  If a log has been closed down (i.e., no longer accepts
<       new entries), existing entries may still be valid.  In this case,
<       the client should know the final valid STH in the log to ensure no
<       new entries can be added without detection.  This value MUST be
---
>    Maximum Merge Delay:
>       The MMD the log has committed to.  This document deliberately does
>       not specify any limits on the value to allow for experimentation.
> 
>    Version:
>       The version of the protocol supported by the log (currently 1 or
>       2).
> 
>    Maximum Chain Length:
>       The longest certificate chain submission the log is willing to
>       accept, if the log imposes any limit.
> 
>    STH Frequency Count:
>       The maximum number of STHs the log may produce in any period equal
>       to the Maximum Merge Delay (see Section 4.10).
> 
>    Final STH:
>       If a log has been closed down (i.e., no longer accepts new
>       entries), existing entries may still be valid.  In this case, the
>       client should know the final valid STH in the log to ensure no new
>       entries can be added without detection.  This value MUST be
1307,1314c1312,1321
<    type:  A URN reference identifying the problem.  To facilitate
<       automated response to errors, this document defines a set of
<       standard tokens for use in the type field within the URN namespace
<       of: "urn:ietf:params:trans:error:".
< 
<    detail:  A human-readable string describing the error that prevented
<       the log from processing the request, ideally with sufficient
<       detail to enable the error to be rectified.
---
>    type:
>       A URN reference identifying the problem.  To facilitate automated
>       response to errors, this document defines a set of standard tokens
>       for use in the type field within the URN namespace of:
>       "urn:ietf:params:trans:error:".
> 
>    detail:
>       A human-readable string describing the error that prevented the
>       log from processing the request, ideally with sufficient detail to
>       enable the error to be rectified.
1365c1372,1373
<       chain:  An array of zero or more JSON strings, each of which is a
---
>       chain:
>          An array of zero or more JSON strings, each of which is a
1695,1701c1703,1710
<       certificates:  An array of JSON strings, each of which is a
<          base64-encoded CA certificate that is acceptable to the log.
< 
<       max_chain_length:  If the server has chosen to limit the length of
<          chains it accepts, this is the maximum number of certificates
<          in the chain, in decimal.  If there is no limit, this is
<          omitted.
---
>       certificates:
>          An array of JSON strings, each of which is a base64-encoded CA
>          certificate that is acceptable to the log.
> 
>       max_chain_length:
>          If the server has chosen to limit the length of chains it
>          accepts, this is the maximum number of certificates in the
>          chain, in decimal.  If there is no limit, this is omitted.
2118,2123c2127,2134
<    Signature algorithm:  SCT signatures must remain valid so signature
<       algorithms can only be added, not removed.
< 
<    Hash algorithm:  A log would have to support the old and new hash
<       algorithms to allow backwards compatibility with clients that are
<       not aware of a hash algorithm change.
---
>    Signature algorithm:
>       SCT signatures must remain valid so signature algorithms can only
>       be added, not removed.
> 
>    Hash algorithm:
>       A log would have to support the old and new hash algorithms to
>       allow backwards compatibility with clients that are not aware of a
>       hash algorithm change.
2150c2161
<    +=====+===================+===+===========+=============+===========+
---
>     +=====+===================+===+=========+=============+===========+
2153c2164
<    +=====+===================+===+===========+=============+===========+
---
>     +=====+===================+===+=========+=============+===========+
2157c2168
<    +-----+-------------------+---+-----------+-------------+-----------+
---
>     +-----+-------------------+---+---------+-------------+-----------+
2948d2958
< 
2954d2963
< 
2960d2968
< 
