178,188c178,190
<    MAX_PAYLOADS:  This parameter represents the maximum number of
<       payloads that can be transmitted at any one time.
< 
<    NON_MAX_RETRANSMIT:  This parameter represents the maximum number of
<       times a request for the retransmission of missing payloads can
<       occur without a response from the remote peer.  By default,
<       NON_MAX_RETRANSMIT has the same value as MAX_RETRANSMIT
<       (Section 4.8 of [RFC7252]).
< 
<    NON_TIMEOUT:  This parameter represents the maximum period of delay
<       between sending sets of MAX_PAYLOADS payloads for the same body.
---
>    MAX_PAYLOADS:
>       This parameter represents the maximum number of payloads that can
>       be transmitted at any one time.
> 
>    NON_MAX_RETRANSMIT:
>       This parameter represents the maximum number of times a request
>       for the retransmission of missing payloads can occur without a
>       response from the remote peer.  By default, NON_MAX_RETRANSMIT has
>       the same value as MAX_RETRANSMIT (Section 4.8 of [RFC7252]).
> 
>    NON_TIMEOUT:
>       This parameter represents the maximum period of delay between
>       sending sets of MAX_PAYLOADS payloads for the same body.
192,202c194,207
<    NON_TIMEOUT_RANDOM:  This parameter represents the initial actual
<       delay between sending the first two MAX_PAYLOADS_SETs of the same
<       body.  It is a random duration between NON_TIMEOUT and
<       (NON_TIMEOUT * ACK_RANDOM_FACTOR).
< 
<    NON_RECEIVE_TIMEOUT:  This parameter represents the maximum time to
<       wait for a missing payload before requesting retransmission.  By
<       default, NON_RECEIVE_TIMEOUT has a value of twice NON_TIMEOUT.
< 
<    NON_PROBING_WAIT:  This parameter is used to limit the potential wait
<       needed when using PROBING_RATE.
---
>    NON_TIMEOUT_RANDOM:
>       This parameter represents the initial actual delay between sending
>       the first two MAX_PAYLOADS_SETs of the same body.  It is a random
>       duration between NON_TIMEOUT and (NON_TIMEOUT *
>       ACK_RANDOM_FACTOR).
> 
>    NON_RECEIVE_TIMEOUT:
>       This parameter represents the maximum time to wait for a missing
>       payload before requesting retransmission.  By default,
>       NON_RECEIVE_TIMEOUT has a value of twice NON_TIMEOUT.
> 
>    NON_PROBING_WAIT:
>       This parameter is used to limit the potential wait needed when
>       using PROBING_RATE.
204,205c209,210
<    NON_PARTIAL_TIMEOUT:  This parameter is used for expiring partially
<       received bodies.
---
>    NON_PARTIAL_TIMEOUT:
>       This parameter is used for expiring partially received bodies.
361,373c366,378
<    Implementation Note 1:  'non-probing-wait' ideally should be left
<       having some jitter and so should not be hard-coded with an
<       explicit value.  It is suggested to use a base value (using
<       NON_TIMEOUT instead of NON_TIMEOUT_RANDOM); the jitter
<       (ACK_RANDOM_FACTOR - 1) is then added to each time the value is
<       checked.
< 
<    Implementation Note 2:  If any of the signal channel session
<       configuration parameters is updated, the 'non-probing-wait' and
<       'non-partial-timeout' values should be recalculated according to
<       the definition algorithms provided in Section 7.2 of [RFC9177]
<       unless explicit values are provided as part of the negotiated
<       configuration.
---
>    Implementation Note 1:
>       'non-probing-wait' ideally should be left having some jitter and
>       so should not be hard-coded with an explicit value.  It is
>       suggested to use a base value (using NON_TIMEOUT instead of
>       NON_TIMEOUT_RANDOM); the jitter (ACK_RANDOM_FACTOR - 1) is then
>       added to each time the value is checked.
> 
>    Implementation Note 2:
>       If any of the signal channel session configuration parameters is
>       updated, the 'non-probing-wait' and 'non-partial-timeout' values
>       should be recalculated according to the definition algorithms
>       provided in Section 7.2 of [RFC9177] unless explicit values are
>       provided as part of the negotiated configuration.
