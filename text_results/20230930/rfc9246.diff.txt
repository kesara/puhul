156,161c156,162
<       |  MI-16  {HIGH} The CDNI Metadata interface shall allow signaling
<       |     of authorization checks and validation that are to be
<       |     performed by the Surrogate before delivery.  For example,
<       |     this could potentially include the need to validate
<       |     information (e.g., Expiry time, Client IP address) required
<       |     for access authorization.
---
>       |  MI-16
>       |     {HIGH} The CDNI Metadata interface shall allow signaling of
>       |     authorization checks and validation that are to be performed
>       |     by the Surrogate before delivery.  For example, this could
>       |     potentially include the need to validate information (e.g.,
>       |     Expiry time, Client IP address) required for access
>       |     authorization.
194,211c195,213
<    Target CDN URI:  A URI created by the CSP to direct a UA towards the
<       upstream CDN (uCDN).  The Target CDN URI can be signed by the CSP
<       and verified by the uCDN and possibly further downstream CDNs
<       (dCDNs).
< 
<    Redirection URI:  A URI created by the uCDN to redirect a UA towards
<       the dCDN.  The Redirection URI can be signed by the uCDN and
<       verified by the dCDN.  In a cascaded CDNI scenario, there can be
<       more than one Redirection URI.
< 
<    Signed Token Renewal:  A series of signed JWTs that are used for
<       subsequent access to a set of related resources in a CDN, such as
<       a set of HTTP Adaptive Streaming files.  Every time a signed JWT
<       is used to access a particular resource, a new signed JWT is sent
<       along with the resource that can be used to request the next
<       resource in the set.  When generating a new signed JWT in Signed
<       Token Renewal, parameters are carried over from one signed JWT to
<       the next.
---
>    Target CDN URI:
>       A URI created by the CSP to direct a UA towards the upstream CDN
>       (uCDN).  The Target CDN URI can be signed by the CSP and verified
>       by the uCDN and possibly further downstream CDNs (dCDNs).
> 
>    Redirection URI:
>       A URI created by the uCDN to redirect a UA towards the dCDN.  The
>       Redirection URI can be signed by the uCDN and verified by the
>       dCDN.  In a cascaded CDNI scenario, there can be more than one
>       Redirection URI.
> 
>    Signed Token Renewal:
>       A series of signed JWTs that are used for subsequent access to a
>       set of related resources in a CDN, such as a set of HTTP Adaptive
>       Streaming files.  Every time a signed JWT is used to access a
>       particular resource, a new signed JWT is sent along with the
>       resource that can be used to request the next resource in the set.
>       When generating a new signed JWT in Signed Token Renewal,
>       parameters are carried over from one signed JWT to the next.
390,393c392,395
<    URI Signing Package (URISigningPackage):  The URI attribute that
<       encapsulates all the URI Signing claims in a signed JWT encoded
<       format.  This attribute is exposed in the Signed URI as a path-
<       style parameter or a form-style parameter.
---
>    URI Signing Package (URISigningPackage):
>       The URI attribute that encapsulates all the URI Signing claims in
>       a signed JWT encoded format.  This attribute is exposed in the
>       Signed URI as a path-style parameter or a form-style parameter.
885,886c887,889
<          Description:  URI Signing enforcement flag.  Specifically, this
<             flag indicates if the access to content is subject to URI
---
>          Description:
>             URI Signing enforcement flag.  Specifically, this flag
>             indicates if the access to content is subject to URI
898,899c901,903
<          Description:  A list of valid Issuers against which the Issuer
<             claim in the signed JWT may be cross-referenced.
---
>          Description:
>             A list of valid Issuers against which the Issuer claim in
>             the signed JWT may be cross-referenced.
903,905c907,910
<          Mandatory-to-Specify:  No.  The default is an empty list.  An
<             empty list means that any Issuer in the trusted key store of
<             Issuers is acceptable.
---
>          Mandatory-to-Specify:
>             No.  The default is an empty list.  An empty list means that
>             any Issuer in the trusted key store of Issuers is
>             acceptable.
909,910c914,915
<          Description:  The attribute name to use for the URI Signing
<             Package.
---
>          Description:
>             The attribute name to use for the URI Signing Package.
918,920c923,926
<          Description:  The header part of JWT that is used for verifying
<             a signed JWT when the JWT token in the URI Signing Package
<             does not contain a header part.
---
>          Description:
>             The header part of JWT that is used for verifying a signed
>             JWT when the JWT token in the URI Signing Package does not
>             contain a header part.
924,925c930,932
<          Mandatory-to-Specify:  No.  By default, the header is assumed
<             to be included in the JWT token.
---
>          Mandatory-to-Specify:
>             No.  By default, the header is assumed to be included in the
>             JWT token.
970,972c977,980
<       Field value:  this characterizes the URI Signing verification
<          performed by the Surrogate on the request.  The allowed values
<          are registered in Section 6.4.
---
>       Field value:
>          this characterizes the URI Signing verification performed by
>          the Surrogate on the request.  The allowed values are
>          registered in Section 6.4.
981,982c989,991
<       Field value:  a string for providing further information in case
<          the signed JWT was rejected, e.g., for debugging purposes.
---
>       Field value:
>          a string for providing further information in case the signed
>          JWT was rejected, e.g., for debugging purposes.
1284,1286c1293,1296
<    Purpose:  The purpose of this payload type is to distinguish
<       UriSigning Metadata interface (MI) objects (and any associated
<       capability advertisement).
---
>    Purpose:
>       The purpose of this payload type is to distinguish UriSigning
>       Metadata interface (MI) objects (and any associated capability
>       advertisement).
1471,1472c1481,1482
<    Claim Description:  CDNI Signed Token Transport Method for Signed
<       Token Renewal
---
>    Claim Description:
>       CDNI Signed Token Transport Method for Signed Token Renewal
1518,1524c1528,1535
<    Replay attacks:  A (valid) Signed URI may be used to perform replay
<       attacks.  The vulnerability to replay attacks can be reduced by
<       picking a relatively short window between the Not Before time and
<       Expiration Time attributes, although this is limited by the fact
<       that any HTTP-based request needs a window of at least a couple of
<       seconds to prevent sudden network issues from denying legitimate
<       UAs access to the content.  One may also reduce exposure to replay
---
>    Replay attacks:
>       A (valid) Signed URI may be used to perform replay attacks.  The
>       vulnerability to replay attacks can be reduced by picking a
>       relatively short window between the Not Before time and Expiration
>       Time attributes, although this is limited by the fact that any
>       HTTP-based request needs a window of at least a couple of seconds
>       to prevent sudden network issues from denying legitimate UAs
>       access to the content.  One may also reduce exposure to replay
1536,1545c1547,1556
<    Illegitimate clients behind a NAT:  In cases where there are multiple
<       users behind the same NAT, all users will have the same IP address
<       from the point of view of the dCDN.  This results in the dCDN not
<       being able to distinguish between different users based on Client
<       IP Address, which can lead to illegitimate users being able to
<       access the content.  One way to reduce exposure to this kind of
<       attack is to not only check for Client IP but also for other
<       attributes, e.g., attributes that can be found in HTTP headers.
<       However, this may be easily circumvented by a sophisticated
<       attacker.
---
>    Illegitimate clients behind a NAT:
>       In cases where there are multiple users behind the same NAT, all
>       users will have the same IP address from the point of view of the
>       dCDN.  This results in the dCDN not being able to distinguish
>       between different users based on Client IP Address, which can lead
>       to illegitimate users being able to access the content.  One way
>       to reduce exposure to this kind of attack is to not only check for
>       Client IP but also for other attributes, e.g., attributes that can
>       be found in HTTP headers.  However, this may be easily
>       circumvented by a sophisticated attacker.
