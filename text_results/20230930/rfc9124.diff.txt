886,887c886,888
<    Threat Escalation:  If the attacker is able to exploit the known
<       vulnerability, then this threat can be escalated to all types.
---
>    Threat Escalation:
>       If the attacker is able to exploit the known vulnerability, then
>       this threat can be escalated to all types.
914,915c915,917
<    Threat Escalation:  If the attacker is able to exploit the known
<       vulnerability, then this threat can be escalated to all types.
---
>    Threat Escalation:
>       If the attacker is able to exploit the known vulnerability, then
>       this threat can be escalated to all types.
957,959c959,962
<    Threat Escalation:  An attacker that can cause a device to
<       misinterpret the received firmware image may gain elevation of
<       privilege and potentially expand this to all types of threats.
---
>    Threat Escalation:
>       An attacker that can cause a device to misinterpret the received
>       firmware image may gain elevation of privilege and potentially
>       expand this to all types of threats.
973,975c976,979
<    Threat Escalation:  An attacker that can cause a device to
<       misinterpret the received code may gain elevation of privilege and
<       potentially expand this to all types of threats.
---
>    Threat Escalation:
>       An attacker that can cause a device to misinterpret the received
>       code may gain elevation of privilege and potentially expand this
>       to all types of threats.
1017,1019c1021,1024
<    Threat Escalation:  If the attacker is able to exploit a known
<       vulnerability or if the attacker can supply their own firmware,
<       then this threat can be escalated to all types.
---
>    Threat Escalation:
>       If the attacker is able to exploit a known vulnerability or if the
>       attacker can supply their own firmware, then this threat can be
>       escalated to all types.
1098,1101c1103,1107
<    Threat Escalation:  If the network operator expects configuration
<       that is present in devices deployed in Network A, but not in
<       devices deployed in Network B, then the device may experience
<       degraded security, leading to threats of all types.
---
>    Threat Escalation:
>       If the network operator expects configuration that is present in
>       devices deployed in Network A, but not in devices deployed in
>       Network B, then the device may experience degraded security,
>       leading to threats of all types.
1164,1166c1170,1172
<    Threat Escalation:  By overriding elements such as payload
<       installation instructions or a firmware digest, this threat can be
<       escalated to all types.
---
>    Threat Escalation:
>       By overriding elements such as payload installation instructions
>       or a firmware digest, this threat can be escalated to all types.
1469,1470c1475,1477
<    Implemented by:  Transport Security / Manifest format triggering
<       generation of reports
---
>    Implemented by:
>       Transport Security / Manifest format triggering generation of
>       reports
1485,1486c1492,1494
<    Implemented by:  Hardware-assisted isolation technologies, which are
<       outside the scope of the manifest format
---
>    Implemented by:
>       Hardware-assisted isolation technologies, which are outside the
>       scope of the manifest format
1502,1503c1510,1512
<    Implemented by:  Secure storage technology, which is a system design/
<       implementation aspect outside the scope of the manifest format
---
>    Implemented by:
>       Secure storage technology, which is a system design/implementation
>       aspect outside the scope of the manifest format
1513,1515c1522,1525
<    Implemented by:  Testing infrastructure.  While outside the scope of
<       the manifest format, proper testing of low-level software is
<       essential for avoiding unnecessary downtime or worse situations.
---
>    Implemented by:
>       Testing infrastructure.  While outside the scope of the manifest
>       format, proper testing of low-level software is essential for
>       avoiding unnecessary downtime or worse situations.
1529,1531c1539,1542
<    Implemented by:  Physical and network security for protecting the
<       environment where firmware updates are prepared to avoid
<       unauthorized access to this infrastructure
---
>    Implemented by:
>       Physical and network security for protecting the environment where
>       firmware updates are prepared to avoid unauthorized access to this
>       infrastructure
1549,1550c1560,1562
<    Implemented by:  Proper system design with sufficient resources and
<       implementation avoiding TOCTOU attacks
---
>    Implemented by:
>       Proper system design with sufficient resources and implementation
>       avoiding TOCTOU attacks
1597,1611c1609,1626
<    URIs (Section 3.12):  This allows the device operator to direct
<       devices to their own infrastructure in order to reduce network
<       load.
< 
<    Conditions:  This allows the device operator to impose additional
<       constraints on the installation of the manifest.
< 
<    Directives (Section 3.16):  This allows the device operator to add
<       more instructions, such as time of installation.
< 
<    Processing Steps (Section 3.9):  If an intermediary performs an
<       action on behalf of a device, it may need to override the
<       processing steps.  It is still possible for a device to verify the
<       final content and the result of any processing step that specifies
<       a digest.  Some processing steps should be non-overridable.
---
>    URIs (Section 3.12):
>       This allows the device operator to direct devices to their own
>       infrastructure in order to reduce network load.
> 
>    Conditions:
>       This allows the device operator to impose additional constraints
>       on the installation of the manifest.
> 
>    Directives (Section 3.16):
>       This allows the device operator to add more instructions, such as
>       time of installation.
> 
>    Processing Steps (Section 3.9):
>       If an intermediary performs an action on behalf of a device, it
>       may need to override the processing steps.  It is still possible
>       for a device to verify the final content and the result of any
>       processing step that specifies a digest.  Some processing steps
>       should be non-overridable.
2075d2089
< 
2081d2094
< 
2087d2099
< 
