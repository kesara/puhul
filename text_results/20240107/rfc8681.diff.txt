19,20c19,20
<    GF(2), a second one for RLC over the Galois Field GF(2^(8)), each
<    time with the possibility of controlling the code density.  They can
---
>    GF(2), a second one for RLC over the Galois Field GF(2^8), each time
>    with the possibility of controlling the code density.  They can
78,79c78,79
<    4.  Sliding Window RLC FEC Scheme over GF(2^(8)) for Arbitrary
<            Packet Flows
---
>    4.  Sliding Window RLC FEC Scheme over GF(2^8) for Arbitrary Packet
>            Flows
106c106
<            GF(2^(8))
---
>            GF(2^8)
173c173
<    (the "binary case") or GF(2^(8)), each time with the possibility of
---
>    (the "binary case") or GF(2^8), each time with the possibility of
226,227c226,227
<    over GF(2^(m)) (where m is 1 or 8, depending on the FEC scheme) used
<    in the linear combination are not individually listed in the repair
---
>    over GF(2^m) (where m is 1 or 8, depending on the FEC scheme) used in
>    the linear combination are not individually listed in the repair
240c240
<       coding coefficients over GF(2^(m)) as the sender;
---
>       coding coefficients over GF(2^m) as the sender;
254,257c254,257
<    3.  Procedures: This section describes procedures specific to this
<        FEC scheme, namely: RLC parameters derivation, ADUI and source
<        symbols mapping, pseudorandom number generator, and coding
<        coefficients generation function;
---
>    3. Procedures: This section describes procedures specific to this FEC
>       scheme, namely: RLC parameters derivation, ADUI and source symbols
>       mapping, pseudorandom number generator, and coding coefficients
>       generation function;
278c278
<    a^(b)  a to the power of b
---
>    a^b  a to the power of b
281c281
<       elements.  We assume that q = 2^(m) in this document
---
>       elements.  We assume that q = 2^m in this document
505c505
<    dependent, for instance, 2^(32)-1 with FEC schemes 9 and 10).
---
>    dependent, for instance, 2^32-1 with FEC schemes 9 and 10).
606c606
<    GF(2^(8)), the only difference being the value of the m parameter.
---
>    GF(2^8), the only difference being the value of the m parameter.
608c608
<    With RLC over GF(2^(8)) FEC scheme (Section 4), m is equal to 8.
---
>    With RLC over GF(2^8) FEC scheme (Section 4), m is equal to 8.
708c708
<    elements of the field GF(2^(m)) are represented by polynomials with
---
>    elements of the field GF(2^m) are represented by polynomials with
714c714
<    With GF(2^(8)), multiplication between two elements is the
---
>    With GF(2^8), multiplication between two elements is the
716c716
<    The following irreducible polynomial is used for GF(2^(8)):
---
>    The following irreducible polynomial is used for GF(2^8):
718c718
<       x^(8) + x^(4) + x^(3) + x^(2) + 1
---
>       x^8 + x^4 + x^3 + x^2 + 1
729c729
<    With the RLC over GF(2^(8)) FEC scheme, a linear combination of the
---
>    With the RLC over GF(2^8) FEC scheme, a linear combination of the
738c738
<    where * is the multiplication over GF(2^(8)).  In practice various
---
>    where * is the multiplication over GF(2^8).  In practice various
757c757
< 4.  Sliding Window RLC FEC Scheme over GF(2^(8)) for Arbitrary Packet
---
> 4.  Sliding Window RLC FEC Scheme over GF(2^8) for Arbitrary Packet
761c761
<    Linear Codes (RLC) over GF(2^(8)).
---
>    Linear Codes (RLC) over GF(2^8).
854c854
<       source symbol, and after reaching the maximum value (2^(32)-1),
---
>       source symbol, and after reaching the maximum value (2^32-1),
916,920c916,919
<    field):
<       this unsigned integer indicates the number of source symbols in
<       the encoding window when this repair symbol was generated.  When a
<       FEC Repair Packet contains several repair symbols, this NSS value
<       applies to all of them;
---
>    field):  this unsigned integer indicates the number of source symbols
>       in the encoding window when this repair symbol was generated.
>       When a FEC Repair Packet contains several repair symbols, this NSS
>       value applies to all of them;
923,927c922,925
<    field):
<       this unsigned integer indicates the ESI of the first source symbol
<       in the encoding window when this repair symbol was generated.
<       When a FEC Repair Packet contains several repair symbols, this
<       FSS_ESI value applies to all of them;
---
>    field):  this unsigned integer indicates the ESI of the first source
>       symbol in the encoding window when this repair symbol was
>       generated.  When a FEC Repair Packet contains several repair
>       symbols, this FSS_ESI value applies to all of them;
1104,1106c1102,1104
<       over GF(2^(8))), an additional consequence being a higher
<       processing overhead at the receiver.  In any case, the attack
<       results in a form of Denial of Service (DoS) or corrupted content.
---
>       over GF(2^8)), an additional consequence being a higher processing
>       overhead at the receiver.  In any case, the attack results in a
>       form of Denial of Service (DoS) or corrupted content.
1205c1203
< 8.1.  Operational Recommendations: Finite Field GF(2) Versus GF(2^(8))
---
> 8.1.  Operational Recommendations: Finite Field GF(2) Versus GF(2^8)
1209,1217c1207,1215
<    the RLC over GF(2^(8)) FEC scheme will be mostly used since it
<    warrants a higher packet loss protection.  In case of small encoding
<    windows, the associated processing overhead is not an issue (e.g., we
<    measured decoding speeds between 745 Mbps and 2.8 Gbps on an ARM
<    Cortex-A15 embedded board in [Roca17] depending on the code rate and
<    the channel conditions, using an encoding window of size 18 or 23
<    symbols; see the above article for the details).  Of course the CPU
<    overhead will increase with the encoding window size, because more
<    operations in the GF(2^(8)) finite field will be needed.
---
>    the RLC over GF(2^8) FEC scheme will be mostly used since it warrants
>    a higher packet loss protection.  In case of small encoding windows,
>    the associated processing overhead is not an issue (e.g., we measured
>    decoding speeds between 745 Mbps and 2.8 Gbps on an ARM Cortex-A15
>    embedded board in [Roca17] depending on the code rate and the channel
>    conditions, using an encoding window of size 18 or 23 symbols; see
>    the above article for the details).  Of course the CPU overhead will
>    increase with the encoding window size, because more operations in
>    the GF(2^8) finite field will be needed.
1231c1229
<    over GF(2^(8)), it is usually appropriate that small encoding windows
---
>    over GF(2^8), it is usually appropriate that small encoding windows
1258c1256
<       GF(2^(8)) FEC Scheme for Arbitrary Packet Flows, as defined in
---
>       GF(2^8) FEC Scheme for Arbitrary Packet Flows, as defined in
1437c1435
<                  +-------+-------------+----------------+
---
>                  +=======+=============+================+
1490c1488
<    seed values, we carried out the same test for the first 2^(16) seed
---
>    seed values, we carried out the same test for the first 2^16 seed
1504c1502
<     +-------+-----------------+-----------------+---------------------+
---
>     +=======+=================+=================+=====================+
1822d1819
< 
1830d1826
< 
