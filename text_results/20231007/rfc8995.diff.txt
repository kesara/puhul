351,376c351,380
<    Circuit Proxy:  A stateful implementation of the Join Proxy.  This is
<       the assumed type of proxy.
< 
<    drop-ship:  The physical distribution of equipment containing the
<       "factory default" configuration to a final destination.  In zero-
<       touch scenarios, there is no staging or preconfiguration during
<       drop-ship.
< 
<    Domain:  The set of entities that share a common local trust anchor.
<       This includes the proxy, registrar, domain CA, management
<       components, and any existing entity that is already a member of
<       the domain.
< 
<    Domain CA:  The domain Certification Authority (CA) provides
<       certification functionalities to the domain.  At a minimum, it
<       provides certification functionalities to a registrar and manages
<       the private key that defines the domain.  Optionally, it certifies
<       all elements.
< 
<    domainID:  The domain IDentity is a unique value based upon the
<       registrar's CA certificate.  Section 5.8.2 specifies how it is
<       calculated.
< 
<    enrollment:  The process where a device presents key material to a
<       network and acquires a network-specific identity.  For example,
<       when a certificate signing request is presented to a CA, and a
---
>    Circuit Proxy:
>       A stateful implementation of the Join Proxy.  This is the assumed
>       type of proxy.
> 
>    drop-ship:
>       The physical distribution of equipment containing the "factory
>       default" configuration to a final destination.  In zero-touch
>       scenarios, there is no staging or preconfiguration during drop-
>       ship.
> 
>    Domain:
>       The set of entities that share a common local trust anchor.  This
>       includes the proxy, registrar, domain CA, management components,
>       and any existing entity that is already a member of the domain.
> 
>    Domain CA:
>       The domain Certification Authority (CA) provides certification
>       functionalities to the domain.  At a minimum, it provides
>       certification functionalities to a registrar and manages the
>       private key that defines the domain.  Optionally, it certifies all
>       elements.
> 
>    domainID:
>       The domain IDentity is a unique value based upon the registrar's
>       CA certificate.  Section 5.8.2 specifies how it is calculated.
> 
>    enrollment:
>       The process where a device presents key material to a network and
>       acquires a network-specific identity.  For example, when a
>       certificate signing request is presented to a CA, and a
379,385c383,390
<    IDevID:  An Initial Device Identifier X.509 certificate installed by
<       the vendor on new equipment.  This is a term from 802.1AR
<       [IDevID].
< 
<    imprint:  The process where a device obtains the cryptographic key
<       material to identify and trust future interactions with a network.
<       This term is taken from Konrad Lorenz's work in biology with new
---
>    IDevID:
>       An Initial Device Identifier X.509 certificate installed by the
>       vendor on new equipment.  This is a term from 802.1AR [IDevID].
> 
>    imprint:
>       The process where a device obtains the cryptographic key material
>       to identify and trust future interactions with a network.  This
>       term is taken from Konrad Lorenz's work in biology with new
397,404c402,424
<    Join Proxy:  A domain entity that helps the pledge join the domain.
<       A Join Proxy facilitates communication for devices that find
<       themselves in an environment where they are not provided
<       connectivity until after they are validated as members of the
<       domain.  For simplicity, this document sometimes uses the term of
<       "proxy" to indicate the Join Proxy.  The pledge is unaware that
<       they are communicating with a proxy rather than directly with a
<       registrar.
---
>    Join Proxy:
>       A domain entity that helps the pledge join the domain.  A Join
>       Proxy facilitates communication for devices that find themselves
>       in an environment where they are not provided connectivity until
>       after they are validated as members of the domain.  For
>       simplicity, this document sometimes uses the term of "proxy" to
>       indicate the Join Proxy.  The pledge is unaware that they are
>       communicating with a proxy rather than directly with a registrar.
> 
>    Join Registrar (and Coordinator):
>       A representative of the domain that is configured, perhaps
>       autonomically, to decide whether a new device is allowed to join
>       the domain.  The administrator of the domain interfaces with a
>       "Join Registrar (and Coordinator)" to control this process.
>       Typically, a Join Registrar is "inside" its domain.  For
>       simplicity, this document often refers to this as just
>       "registrar".  Within [RFC8993], it is referred to as the "Join
>       Registrar Autonomic Service Agent (ASA)".  Other communities use
>       the abbreviation "JRC".
> 
>    LDevID:
>       A Local Device Identifier X.509 certificate installed by the owner
>       of the equipment.  This is a term from 802.1AR [IDevID].
406,445c426,454
<    Join Registrar (and Coordinator):  A representative of the domain
<       that is configured, perhaps autonomically, to decide whether a new
<       device is allowed to join the domain.  The administrator of the
<       domain interfaces with a "Join Registrar (and Coordinator)" to
<       control this process.  Typically, a Join Registrar is "inside" its
<       domain.  For simplicity, this document often refers to this as
<       just "registrar".  Within [RFC8993], it is referred to as the
<       "Join Registrar Autonomic Service Agent (ASA)".  Other communities
<       use the abbreviation "JRC".
< 
<    LDevID:  A Local Device Identifier X.509 certificate installed by the
<       owner of the equipment.  This is a term from 802.1AR [IDevID].
< 
<    manufacturer:  The term manufacturer is used throughout this document
<       as the entity that created the device.  This is typically the
<       original equipment manufacturer (OEM), but in more complex
<       situations, it could be a value added retailer (VAR), or possibly
<       even a systems integrator.  In general, a goal of BRSKI is to
<       eliminate small distinctions between different sales channels.
<       The reason for this is that it permits a single device, with a
<       uniform firmware load, to be shipped directly to all customers.
<       This eliminates costs for the manufacturer.  This also reduces the
<       number of products supported in the field, increasing the chance
<       that firmware will be more up to date.
< 
<    MASA Audit-Log:  An anonymized list of previous owners maintained by
<       the MASA on a per-device (per-pledge) basis, as described in
<       Section 5.8.1.
< 
<    MASA Service:  A third-party MASA service on the global Internet.
<       The MASA signs vouchers.  It also provides a repository for audit-
<       log information of privacy-protected bootstrapping events.  It
<       does not track ownership.
< 
<    nonced:  A voucher (or request) that contains a nonce (the normal
<       case).
< 
<    nonceless:  A voucher (or request) that does not contain a nonce and
<       either relies upon accurate clocks for expiration or does not
<       expire.
---
>    manufacturer:
>       The term manufacturer is used throughout this document as the
>       entity that created the device.  This is typically the original
>       equipment manufacturer (OEM), but in more complex situations, it
>       could be a value added retailer (VAR), or possibly even a systems
>       integrator.  In general, a goal of BRSKI is to eliminate small
>       distinctions between different sales channels.  The reason for
>       this is that it permits a single device, with a uniform firmware
>       load, to be shipped directly to all customers.  This eliminates
>       costs for the manufacturer.  This also reduces the number of
>       products supported in the field, increasing the chance that
>       firmware will be more up to date.
> 
>    MASA Audit-Log:
>       An anonymized list of previous owners maintained by the MASA on a
>       per-device (per-pledge) basis, as described in Section 5.8.1.
> 
>    MASA Service:
>       A third-party MASA service on the global Internet.  The MASA signs
>       vouchers.  It also provides a repository for audit-log information
>       of privacy-protected bootstrapping events.  It does not track
>       ownership.
> 
>    nonced:
>       A voucher (or request) that contains a nonce (the normal case).
> 
>    nonceless:
>       A voucher (or request) that does not contain a nonce and either
>       relies upon accurate clocks for expiration or does not expire.
447c456,457
<    offline:  When an architectural component cannot perform real-time
---
>    offline:
>       When an architectural component cannot perform real-time
452,459c462,470
<    Ownership Tracker:  An Ownership Tracker service on the global
<       Internet.  The Ownership Tracker uses business processes to
<       accurately track ownership of all devices shipped against domains
<       that have purchased them.  Although optional, this component
<       allows vendors to provide additional value in cases where their
<       sales and distribution channels allow for accurate tracking of
<       such ownership.  Tracking information about ownership is indicated
<       in vouchers, as described in [RFC8366].
---
>    Ownership Tracker:
>       An Ownership Tracker service on the global Internet.  The
>       Ownership Tracker uses business processes to accurately track
>       ownership of all devices shipped against domains that have
>       purchased them.  Although optional, this component allows vendors
>       to provide additional value in cases where their sales and
>       distribution channels allow for accurate tracking of such
>       ownership.  Tracking information about ownership is indicated in
>       vouchers, as described in [RFC8366].
461c472,473
<    Pledge:  The prospective (unconfigured) device, which has an identity
---
>    Pledge:
>       The prospective (unconfigured) device, which has an identity
464,467c476,480
<    (Public) Key Infrastructure:  The collection of systems and processes
<       that sustains the activities of a public key system.  The
<       registrar acts as a "Registration Authority"; see [RFC5280] and
<       Section 7 of [RFC5272].
---
>    (Public) Key Infrastructure:
>       The collection of systems and processes that sustains the
>       activities of a public key system.  The registrar acts as a
>       "Registration Authority"; see [RFC5280] and Section 7 of
>       [RFC5272].
475,479c488,492
<    Voucher:  A signed artifact from the MASA that indicates the
<       cryptographic identity of the registrar it should trust to a
<       pledge.  There are different types of vouchers depending on how
<       that trust is asserted.  Multiple voucher types are defined in
<       [RFC8366].
---
>    Voucher:
>       A signed artifact from the MASA that indicates the cryptographic
>       identity of the registrar it should trust to a pledge.  There are
>       different types of vouchers depending on how that trust is
>       asserted.  Multiple voucher types are defined in [RFC8366].
1918,1932c1931,1947
<    assertion:  The pledge indicates support for the mechanism described
<       in this document, by putting the value "proximity" in the voucher-
<       request, and MUST include the proximity-registrar-cert field
<       (below).
< 
<    proximity-registrar-cert:  In a pledge voucher-request, this is the
<       first certificate in the TLS server "certificate_list" sequence
<       (see [RFC8446], Section 4.4.2) presented by the registrar to the
<       pledge.  That is, it is the end-entity certificate.  This MUST be
<       populated in a pledge voucher-request.
< 
<    serial-number:  The serial number of the pledge is included in the
<       voucher-request from the pledge.  This value is included as a
<       sanity check only, but it is not to be forwarded by the registrar
<       as described in Section 5.5.
---
>    assertion:
>       The pledge indicates support for the mechanism described in this
>       document, by putting the value "proximity" in the voucher-request,
>       and MUST include the proximity-registrar-cert field (below).
> 
>    proximity-registrar-cert:
>       In a pledge voucher-request, this is the first certificate in the
>       TLS server "certificate_list" sequence (see [RFC8446],
>       Section 4.4.2) presented by the registrar to the pledge.  That is,
>       it is the end-entity certificate.  This MUST be populated in a
>       pledge voucher-request.
> 
>    serial-number:
>       The serial number of the pledge is included in the voucher-request
>       from the pledge.  This value is included as a sanity check only,
>       but it is not to be forwarded by the registrar as described in
>       Section 5.5.
2114,2115c2129,2131
<    nonce:  This value, if present, is copied from the pledge voucher-
<       request.  The registrar voucher-request MAY omit the nonce as per
---
>    nonce:
>       This value, if present, is copied from the pledge voucher-request.
>       The registrar voucher-request MAY omit the nonce as per
2118,2132c2134,2150
<    serial-number:  The serial number of the pledge the registrar would
<       like a voucher for.  The registrar determines this value by
<       parsing the authenticated pledge IDevID certificate; see
<       Section 2.3.  The registrar MUST verify that the serial-number
<       field it parsed matches the serial-number field the pledge
<       provided in its voucher-request.  This provides a sanity check
<       useful for detecting error conditions and logging.  The registrar
<       MUST NOT simply copy the serial-number field from a pledge
<       voucher-request as that field is claimed but not certified.
< 
<    idevid-issuer:  The Issuer value from the pledge IDevID certificate
<       is included to ensure unique interpretation of the serial-number.
<       In the case of a nonceless (offline) voucher-request, an
<       appropriate value needs to be configured from the same out-of-band
<       source as the serial-number.
---
>    serial-number:
>       The serial number of the pledge the registrar would like a voucher
>       for.  The registrar determines this value by parsing the
>       authenticated pledge IDevID certificate; see Section 2.3.  The
>       registrar MUST verify that the serial-number field it parsed
>       matches the serial-number field the pledge provided in its
>       voucher-request.  This provides a sanity check useful for
>       detecting error conditions and logging.  The registrar MUST NOT
>       simply copy the serial-number field from a pledge voucher-request
>       as that field is claimed but not certified.
> 
>    idevid-issuer:
>       The Issuer value from the pledge IDevID certificate is included to
>       ensure unique interpretation of the serial-number.  In the case of
>       a nonceless (offline) voucher-request, an appropriate value needs
>       to be configured from the same out-of-band source as the serial-
>       number.
2381,2382c2399,2401
<    assertion:  The method used to verify the relationship between the
<       pledge and registrar.  See Section 5.5.5.
---
>    assertion:
>       The method used to verify the relationship between the pledge and
>       registrar.  See Section 5.5.5.
2388,2414c2407,2436
<    serial-number:  The serial-number as provided in the voucher-request.
<       Also see Section 5.5.5.
< 
<    domain-cert-revocation-checks:  Set as appropriate for the pledge's
<       capabilities and as documented in [RFC8366].  The MASA MAY set
<       this field to "false" since setting it to "true" would require
<       that revocation information be available to the pledge, and this
<       document does not make normative requirements for [RFC6961],
<       Section 4.4.2.1 of [RFC8446], or equivalent integrations.
< 
<    expires-on:  This is set for nonceless vouchers.  The MASA ensures
<       the voucher lifetime is consistent with any revocation or pinned-
<       domain-cert consistency checks the pledge might perform.  See
<       Section 2.6.1.  There are three times to consider: (a) a
<       configured voucher lifetime in the MASA, (b) the expiry time for
<       the registrar's certificate, and (c) any CRL lifetime.  The
<       expires-on field SHOULD be before the earliest of these three
<       values.  Typically, (b) will be some significant time in the
<       future, but (c) will typically be short (on the order of a week or
<       less).  The RECOMMENDED period for (a) is on the order of 20
<       minutes, so it will typically determine the life span of the
<       resulting voucher.  20 minutes is sufficient time to reach the
<       post-provisional state in the pledge, at which point there is an
<       established trust relationship between the pledge and registrar.
<       The subsequent operations can take as long as required from that
<       point onwards.  The lifetime of the voucher has no impact on the
<       life span of the ownership relationship.
---
>    serial-number:
>       The serial-number as provided in the voucher-request.  Also see
>       Section 5.5.5.
> 
>    domain-cert-revocation-checks:
>       Set as appropriate for the pledge's capabilities and as documented
>       in [RFC8366].  The MASA MAY set this field to "false" since
>       setting it to "true" would require that revocation information be
>       available to the pledge, and this document does not make normative
>       requirements for [RFC6961], Section 4.4.2.1 of [RFC8446], or
>       equivalent integrations.
> 
>    expires-on:
>       This is set for nonceless vouchers.  The MASA ensures the voucher
>       lifetime is consistent with any revocation or pinned-domain-cert
>       consistency checks the pledge might perform.  See Section 2.6.1.
>       There are three times to consider: (a) a configured voucher
>       lifetime in the MASA, (b) the expiry time for the registrar's
>       certificate, and (c) any CRL lifetime.  The expires-on field
>       SHOULD be before the earliest of these three values.  Typically,
>       (b) will be some significant time in the future, but (c) will
>       typically be short (on the order of a week or less).  The
>       RECOMMENDED period for (a) is on the order of 20 minutes, so it
>       will typically determine the life span of the resulting voucher.
>       20 minutes is sufficient time to reach the post-provisional state
>       in the pledge, at which point there is an established trust
>       relationship between the pledge and registrar.  The subsequent
>       operations can take as long as required from that point onwards.
>       The lifetime of the voucher has no impact on the life span of the
>       ownership relationship.
2779,2781c2801,2804
<    date:  The date field provides the registrar an opportunity to divide
<       the log around known events such as the purchase date.  Depending
<       on the context known to the registrar or administrator, events
---
>    date:
>       The date field provides the registrar an opportunity to divide the
>       log around known events such as the purchase date.  Depending on
>       the context known to the registrar or administrator, events
2787,2792c2810,2816
<    domainID:  If the log includes an unexpected domainID, then the
<       pledge could have imprinted on an unexpected domain.  The
<       registrar can be expected to use a variety of techniques to define
<       "unexpected" ranging from acceptlists of prior domains to anomaly
<       detection (e.g., "this device was previously bound to a different
<       domain than any other device deployed").  Log entries can also be
---
>    domainID:
>       If the log includes an unexpected domainID, then the pledge could
>       have imprinted on an unexpected domain.  The registrar can be
>       expected to use a variety of techniques to define "unexpected"
>       ranging from acceptlists of prior domains to anomaly detection
>       (e.g., "this device was previously bound to a different domain
>       than any other device deployed").  Log entries can also be
2798,2811c2822,2837
<    nonce:  Nonceless entries mean the logged domainID could
<       theoretically trigger a reset of the pledge and then take over
<       management by using the existing nonceless voucher.
< 
<    assertion:  The assertion leaf in the voucher and audit-log indicates
<       why the MASA issued the voucher.  A "verified" entry means that
<       the MASA issued the associated voucher as a result of positive
<       verification of ownership.  However, this entry does not indicate
<       whether or not the pledge was actually deployed in the prior
<       domain.  A "logged" assertion informs the registrar that the prior
<       vouchers were issued with minimal verification.  A "proximity"
<       assertion assures the registrar that the pledge was truly
<       communicating with the prior domain and thus provides assurance
<       that the prior domain really has deployed the pledge.
---
>    nonce:
>       Nonceless entries mean the logged domainID could theoretically
>       trigger a reset of the pledge and then take over management by
>       using the existing nonceless voucher.
> 
>    assertion:
>       The assertion leaf in the voucher and audit-log indicates why the
>       MASA issued the voucher.  A "verified" entry means that the MASA
>       issued the associated voucher as a result of positive verification
>       of ownership.  However, this entry does not indicate whether or
>       not the pledge was actually deployed in the prior domain.  A
>       "logged" assertion informs the registrar that the prior vouchers
>       were issued with minimal verification.  A "proximity" assertion
>       assures the registrar that the pledge was truly communicating with
>       the prior domain and thus provides assurance that the prior domain
>       really has deployed the pledge.
3035,3036c3061,3063
<    Pledge:  The pledge could be compromised and provide an attack vector
<       for malware.  The entity is trusted to only imprint using secure
---
>    Pledge:
>       The pledge could be compromised and provide an attack vector for
>       malware.  The entity is trusted to only imprint using secure
3041,3057c3068,3087
<    Join Proxy:  Provides proxy functionalities but is not involved in
<       security considerations.
< 
<    Registrar:  When interacting with a MASA, a registrar makes all
<       decisions.  For Ownership Audit Vouchers (see [RFC8366]), the
<       registrar is provided an opportunity to accept MASA decisions.
< 
<    Vendor Service, MASA:  This form of manufacturer service is trusted
<       to accurately log all claim attempts and to provide authoritative
<       log information to registrars.  The MASA does not know which
<       devices are associated with which domains.  These claims could be
<       strengthened by using cryptographic log techniques to provide
<       append only, cryptographic assured, publicly auditable logs.
< 
<    Vendor Service, Ownership Validation:  This form of manufacturer
<       service is trusted to accurately know which device is owned by
<       which domain.
---
>    Join Proxy:
>       Provides proxy functionalities but is not involved in security
>       considerations.
> 
>    Registrar:
>       When interacting with a MASA, a registrar makes all decisions.
>       For Ownership Audit Vouchers (see [RFC8366]), the registrar is
>       provided an opportunity to accept MASA decisions.
> 
>    Vendor Service, MASA:
>       This form of manufacturer service is trusted to accurately log all
>       claim attempts and to provide authoritative log information to
>       registrars.  The MASA does not know which devices are associated
>       with which domains.  These claims could be strengthened by using
>       cryptographic log techniques to provide append only, cryptographic
>       assured, publicly auditable logs.
> 
>    Vendor Service, Ownership Validation:
>       This form of manufacturer service is trusted to accurately know
>       which device is owned by which domain.
5702d5731
< 
5708d5736
< 
5718d5745
< 
5723d5749
< 
5729d5754
< 
