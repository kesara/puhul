115,124c115,125
<    Media Type:  The general type of media data used by a real-time
<       application.  The media type corresponds to the value used in the
<       <media> field of a Session Description Protocol (SDP) "m=" line.
<       The media types defined at the time of this writing are "audio",
<       "video", "text", "image", "application", and "message" [RFC4566]
<       [RFC6466].
< 
<    Quality of Service (QoS):  Network mechanisms that are intended to
<       ensure that the packets within a flow or with a specific marking
<       are transported with certain properties.
---
>    Media Type:
>       The general type of media data used by a real-time application.
>       The media type corresponds to the value used in the <media> field
>       of a Session Description Protocol (SDP) "m=" line.  The media
>       types defined at the time of this writing are "audio", "video",
>       "text", "image", "application", and "message" [RFC4566] [RFC6466].
> 
>    Quality of Service (QoS):
>       Network mechanisms that are intended to ensure that the packets
>       within a flow or with a specific marking are transported with
>       certain properties.
190,222c191,226
<    Equal treatment of media:  The use of a single RTP session normally
<       results in similar network treatment for all types of media used
<       within the session.  Applications that require significantly
<       different network QoS or RTCP configuration for different RTP
<       streams are better suited to sending those RTP streams in separate
<       RTP sessions, using separate transport-layer flows for each, since
<       that method provides greater flexibility.  Further guidance on how
<       to provide differential treatment for some media streams is given
<       in [RFC8872] and [RFC7657].
< 
<    Compatible RTCP behaviour:  The RTCP timing rules enforce a single
<       RTCP reporting interval for all participants in an RTP session.
<       Flows with very different media sending rates or RTCP feedback
<       requirements cannot be multiplexed together, since this leads to
<       either excessive or insufficient RTCP for some flows, depending on
<       how the RTCP session bandwidth, and hence the reporting interval,
<       are configured.  For example, it is likely infeasible to find a
<       single RTCP configuration that simultaneously suits both a low-
<       rate audio flow with no feedback and a high-quality video flow
<       with sophisticated RTCP-based feedback.  Thus, combining these
<       into a single RTP session is difficult and/or inadvisable.
< 
<    Signalled support:  The extensions defined in this memo are not
<       compatible with unmodified endpoints that are compatible with
<       [RFC3550].  Their use requires signalling and mutual agreement by
<       all participants within an RTP session.  This requirement can be a
<       problem for signalling solutions that can't negotiate with all
<       participants.  For declarative signalling solutions, mandating
<       that the session use multiple media types in one RTP session can
<       be a way of attempting to ensure that all participants in the RTP
<       session follow the requirement.  However, for signalling solutions
<       that lack methods for enforcing a requirement that a receiver
<       support a specific feature, this can still cause issues.
---
>    Equal treatment of media:
>       The use of a single RTP session normally results in similar
>       network treatment for all types of media used within the session.
>       Applications that require significantly different network QoS or
>       RTCP configuration for different RTP streams are better suited to
>       sending those RTP streams in separate RTP sessions, using separate
>       transport-layer flows for each, since that method provides greater
>       flexibility.  Further guidance on how to provide differential
>       treatment for some media streams is given in [RFC8872] and
>       [RFC7657].
> 
>    Compatible RTCP behaviour:
>       The RTCP timing rules enforce a single RTCP reporting interval for
>       all participants in an RTP session.  Flows with very different
>       media sending rates or RTCP feedback requirements cannot be
>       multiplexed together, since this leads to either excessive or
>       insufficient RTCP for some flows, depending on how the RTCP
>       session bandwidth, and hence the reporting interval, are
>       configured.  For example, it is likely infeasible to find a single
>       RTCP configuration that simultaneously suits both a low-rate audio
>       flow with no feedback and a high-quality video flow with
>       sophisticated RTCP-based feedback.  Thus, combining these into a
>       single RTP session is difficult and/or inadvisable.
> 
>    Signalled support:
>       The extensions defined in this memo are not compatible with
>       unmodified endpoints that are compatible with [RFC3550].  Their
>       use requires signalling and mutual agreement by all participants
>       within an RTP session.  This requirement can be a problem for
>       signalling solutions that can't negotiate with all participants.
>       For declarative signalling solutions, mandating that the session
>       use multiple media types in one RTP session can be a way of
>       attempting to ensure that all participants in the RTP session
>       follow the requirement.  However, for signalling solutions that
>       lack methods for enforcing a requirement that a receiver support a
>       specific feature, this can still cause issues.
256,267c260,271
<    Ability to operate with limited payload type space:  An RTP session
<       has only a single 7-bit payload type space for all its payload
<       type numbers.  Some applications might find this space to be
<       limiting (i.e., overly restrictive) when using different media
<       types and RTP payload formats within a single RTP session.
< 
<    Avoidance of incompatible extensions:  Some RTP and RTCP extensions
<       rely on the existence of multiple RTP sessions and relate RTP
<       streams between sessions.  Others report on particular media types
<       and cannot be used with other media types.  Applications that send
<       multiple types of media into a single RTP session need to avoid
<       such extensions.
---
>    Ability to operate with limited payload type space:
>       An RTP session has only a single 7-bit payload type space for all
>       its payload type numbers.  Some applications might find this space
>       to be limiting (i.e., overly restrictive) when using different
>       media types and RTP payload formats within a single RTP session.
> 
>    Avoidance of incompatible extensions:
>       Some RTP and RTCP extensions rely on the existence of multiple RTP
>       sessions and relate RTP streams between sessions.  Others report
>       on particular media types and cannot be used with other media
>       types.  Applications that send multiple types of media into a
>       single RTP session need to avoid such extensions.
733d736
< 
743d745
< 
751d752
< 
