316,340c316,343
<    Option Type:  8-bit identifier of the type of Option that needs to be
<       allocated.  Unrecognized Types MUST be ignored on processing.  For
<       the Hop-by-Hop Options Header or Destination Options Header,
<       [RFC8200] defines how to encode the three high-order bits of the
<       Option Type field.  The two high-order bits specify the action
<       that must be taken if the processing IPv6 node does not recognize
<       the Option Type; for AltMark, these two bits MUST be set to 00
<       (skip over this Option and continue processing the header).  The
<       third-highest-order bit specifies whether the Option Data can
<       change en route to the packet's final destination; for AltMark,
<       the value of this bit MUST be set to 0 (Option Data does not
<       change en route).  In this way, since the three high-order bits of
<       the AltMark Option are set to 000, it means that nodes can simply
<       skip this Option if they do not recognize it and that the data of
<       this Option does not change en route; indeed the source is the
<       only one that can write it.
< 
<    Opt Data Len:  4.  It is the length of the Option Data Fields of this
<       Option in bytes.
< 
<    FlowMonID:  20-bit unsigned integer.  The FlowMon identifier is
<       described in Section 5.3.  As further discussed below, it has been
<       picked as 20 bits since it is a reasonable value and a good
<       compromise in relation to the chance of collision.  It MUST be set
<       pseudo-randomly by the source node or by a centralized controller.
---
>    Option Type:
>       8-bit identifier of the type of Option that needs to be allocated.
>       Unrecognized Types MUST be ignored on processing.  For the Hop-by-
>       Hop Options Header or Destination Options Header, [RFC8200]
>       defines how to encode the three high-order bits of the Option Type
>       field.  The two high-order bits specify the action that must be
>       taken if the processing IPv6 node does not recognize the Option
>       Type; for AltMark, these two bits MUST be set to 00 (skip over
>       this Option and continue processing the header).  The third-
>       highest-order bit specifies whether the Option Data can change en
>       route to the packet's final destination; for AltMark, the value of
>       this bit MUST be set to 0 (Option Data does not change en route).
>       In this way, since the three high-order bits of the AltMark Option
>       are set to 000, it means that nodes can simply skip this Option if
>       they do not recognize it and that the data of this Option does not
>       change en route; indeed the source is the only one that can write
>       it.
> 
>    Opt Data Len:
>       4.  It is the length of the Option Data Fields of this Option in
>       bytes.
> 
>    FlowMonID:
>       20-bit unsigned integer.  The FlowMon identifier is described in
>       Section 5.3.  As further discussed below, it has been picked as 20
>       bits since it is a reasonable value and a good compromise in
>       relation to the chance of collision.  It MUST be set pseudo-
>       randomly by the source node or by a centralized controller.
529,571c532,574
<    Single-Marking Methodology:  This approach uses only the L bit to
<       calculate both packet loss and delay.  In this case, the D flag
<       MUST be set to zero on transmit and ignored by the monitoring
<       points.  The alternation of the values of the L bit can be used as
<       a time reference to calculate the delay.  Whenever the L bit
<       changes and a new batch starts, a network node can store the
<       timestamp of the first packet of the new batch; that timestamp can
<       be compared with the timestamp of the first packet of the same
<       batch on a second node to compute packet delay.  But, this
<       measurement is accurate only if no packet loss occurs and if there
<       is no packet reordering at the edges of the batches.  A different
<       approach can also be considered, and it is based on the concept of
<       the mean delay.  The mean delay for each batch is calculated by
<       considering the average arrival time of the packets for the
<       relative batch.  There are limitations also in this case indeed;
<       each node needs to collect all the timestamps and calculate the
<       average timestamp for each batch.  In addition, the information is
<       limited to a mean value.
< 
<    Double-Marking Methodology:  This approach is more complete and uses
<       the L bit only to calculate packet loss, and the D bit (Delay
<       flag) is fully dedicated to delay measurements.  The idea is to
<       use the first marking with the L bit to create the alternate flow
<       and, within the batches identified by the L bit, a second marking
<       is used to select the packets for measuring delay.  The D bit
<       creates a new set of marked packets that are fully identified over
<       the network so that a network node can store the timestamps of
<       these packets; these timestamps can be compared with the
<       timestamps of the same packets on a second node to compute packet
<       delay values for each packet.  The most efficient and robust mode
<       is to select a single double-marked packet for each batch; in this
<       way, there is no time gap to consider between the double-marked
<       packets to avoid their reorder.  Regarding the rule for the
<       selection of the packet to be double-marked, the same
<       considerations in Section 5.1 also apply here, and the double-
<       marked packet can be chosen within the available counting interval
<       that is not affected by factors such as clock errors.  If a
<       double-marked packet is lost, the delay measurement for the
<       considered batch is simply discarded, but this is not a big
<       problem because it is easy to recognize the problematic batch and
<       skip the measurement just for that one.  So in order to have more
<       information about the delay and to overcome out-of-order issues,
<       this method is preferred.
---
>    Single-Marking Methodology:
>       This approach uses only the L bit to calculate both packet loss
>       and delay.  In this case, the D flag MUST be set to zero on
>       transmit and ignored by the monitoring points.  The alternation of
>       the values of the L bit can be used as a time reference to
>       calculate the delay.  Whenever the L bit changes and a new batch
>       starts, a network node can store the timestamp of the first packet
>       of the new batch; that timestamp can be compared with the
>       timestamp of the first packet of the same batch on a second node
>       to compute packet delay.  But, this measurement is accurate only
>       if no packet loss occurs and if there is no packet reordering at
>       the edges of the batches.  A different approach can also be
>       considered, and it is based on the concept of the mean delay.  The
>       mean delay for each batch is calculated by considering the average
>       arrival time of the packets for the relative batch.  There are
>       limitations also in this case indeed; each node needs to collect
>       all the timestamps and calculate the average timestamp for each
>       batch.  In addition, the information is limited to a mean value.
> 
>    Double-Marking Methodology:
>       This approach is more complete and uses the L bit only to
>       calculate packet loss, and the D bit (Delay flag) is fully
>       dedicated to delay measurements.  The idea is to use the first
>       marking with the L bit to create the alternate flow and, within
>       the batches identified by the L bit, a second marking is used to
>       select the packets for measuring delay.  The D bit creates a new
>       set of marked packets that are fully identified over the network
>       so that a network node can store the timestamps of these packets;
>       these timestamps can be compared with the timestamps of the same
>       packets on a second node to compute packet delay values for each
>       packet.  The most efficient and robust mode is to select a single
>       double-marked packet for each batch; in this way, there is no time
>       gap to consider between the double-marked packets to avoid their
>       reorder.  Regarding the rule for the selection of the packet to be
>       double-marked, the same considerations in Section 5.1 also apply
>       here, and the double-marked packet can be chosen within the
>       available counting interval that is not affected by factors such
>       as clock errors.  If a double-marked packet is lost, the delay
>       measurement for the considered batch is simply discarded, but this
>       is not a big problem because it is easy to recognize the
>       problematic batch and skip the measurement just for that one.  So
>       in order to have more information about the delay and to overcome
>       out-of-order issues, this method is preferred.
752,780c755,785
<    Harm caused by the measurement:  Alternate Marking implies the
<       insertion of an Options Header to the IPv6 packets by the source
<       node, but this must be performed in a way that does not alter the
<       quality of service experienced by the packets and that preserves
<       stability and performance of routers doing the measurements.  As
<       already discussed in Section 4, the design of the AltMark Option
<       has been chosen with throughput in mind, such that it can be
<       implemented without affecting the user experience.
< 
<    Harm to the measurement:  Alternate-Marking measurements could be
<       harmed by routers altering the fields of the AltMark Option (e.g.,
<       marking of the packets or FlowMonID) or by a malicious attacker
<       adding the AltMark Option to the packets in order to consume the
<       resources of network devices and entities involved.  As described
<       above, the source node is the only one that writes the Options
<       Header while the intermediate nodes and destination node only read
<       it without modifying the Options Header.  But, for example, an on-
<       path attacker can modify the flags, whether intentionally or
<       accidentally, or deliberately insert an Option to the packet flow
<       or delete the Option from the packet flow.  The consequent effect
<       could be to give the appearance of loss or delay or to invalidate
<       the measurement by modifying Option identifiers, such as
<       FlowMonID.  The malicious implication can be to cause actions from
<       the network administrator where an intervention is not necessary
<       or to hide real issues in the network.  Since the measurement
<       itself may be affected by network nodes intentionally altering the
<       bits of the AltMark Option or injecting Options Headers as a means
<       for Denial of Service (DoS), the Alternate Marking MUST be applied
<       in the context of a controlled domain, where the network nodes are
---
>    Harm caused by the measurement:
>       Alternate Marking implies the insertion of an Options Header to
>       the IPv6 packets by the source node, but this must be performed in
>       a way that does not alter the quality of service experienced by
>       the packets and that preserves stability and performance of
>       routers doing the measurements.  As already discussed in
>       Section 4, the design of the AltMark Option has been chosen with
>       throughput in mind, such that it can be implemented without
>       affecting the user experience.
> 
>    Harm to the measurement:
>       Alternate-Marking measurements could be harmed by routers altering
>       the fields of the AltMark Option (e.g., marking of the packets or
>       FlowMonID) or by a malicious attacker adding the AltMark Option to
>       the packets in order to consume the resources of network devices
>       and entities involved.  As described above, the source node is the
>       only one that writes the Options Header while the intermediate
>       nodes and destination node only read it without modifying the
>       Options Header.  But, for example, an on-path attacker can modify
>       the flags, whether intentionally or accidentally, or deliberately
>       insert an Option to the packet flow or delete the Option from the
>       packet flow.  The consequent effect could be to give the
>       appearance of loss or delay or to invalidate the measurement by
>       modifying Option identifiers, such as FlowMonID.  The malicious
>       implication can be to cause actions from the network administrator
>       where an intervention is not necessary or to hide real issues in
>       the network.  Since the measurement itself may be affected by
>       network nodes intentionally altering the bits of the AltMark
>       Option or injecting Options Headers as a means for Denial of
>       Service (DoS), the Alternate Marking MUST be applied in the
>       context of a controlled domain, where the network nodes are
