123,124c123,124
<       General description:  describes the motivation and the goals of
<          the test case.
---
>       General description:
>          describes the motivation and the goals of the test case.
129,135c129,135
<       List of metrics to evaluate the desired behavior:  this indicates
<          the minimum set of metrics (e.g., link utilization, media
<          sending rate) that a proposed algorithm needs to measure to
<          validate the expected rate adaptation behavior.  It should also
<          indicate the time granularity (e.g., averaged over 10 ms, 100
<          ms, or 1 s) for measuring certain metrics.  Typical measurement
<          interval is 200 ms.
---
>       List of metrics to evaluate the desired behavior:
>          this indicates the minimum set of metrics (e.g., link
>          utilization, media sending rate) that a proposed algorithm
>          needs to measure to validate the expected rate adaptation
>          behavior.  It should also indicate the time granularity (e.g.,
>          averaged over 10 ms, 100 ms, or 1 s) for measuring certain
>          metrics.  Typical measurement interval is 200 ms.
202,203c202,203
<          Minimum bottleneck-link capacity:  defines the minimum capacity
<             of the end-to-end path.
---
>          Minimum bottleneck-link capacity:
>             defines the minimum capacity of the end-to-end path.
205,214c205,209
<          Reference bottleneck capacity:  defines a reference value for
<             the bottleneck capacity for test cases with time-varying
<             bottleneck capacities.  All bottleneck capacities will be
<             specified as a ratio with respect to the reference capacity
<             value.
< 
<          One-way propagation delay:  describes the end-to-end latency
<             along the path when network queues are empty, i.e., the time
<             it takes for a packet to go from the sender to the receiver
<             without encountering any queuing delay.
---
>          Reference bottleneck capacity:
>             defines a reference value for the bottleneck capacity for
>             test cases with time-varying bottleneck capacities.  All
>             bottleneck capacities will be specified as a ratio with
>             respect to the reference capacity value.
216,217c211,219
<          Maximum end-to-end jitter:  defines the maximum jitter that can
<             be observed along the path.
---
>          One-way propagation delay:
>             describes the end-to-end latency along the path when network
>             queues are empty, i.e., the time it takes for a packet to go
>             from the sender to the receiver without encountering any
>             queuing delay.
> 
>          Maximum end-to-end jitter:
>             defines the maximum jitter that can be observed along the
>             path.
223,229c225,232
<          Bottleneck queue size:  defines the size of queue in terms of
<             queuing time when the queue is full (in milliseconds).
< 
<          Path loss ratio:  characterizes the non-congested, additive
<             losses to be generated on the end-to-end path.  This must
<             describe the loss pattern or loss model used to generate the
<             losses.
---
>          Bottleneck queue size:
>             defines the size of queue in terms of queuing time when the
>             queue is full (in milliseconds).
> 
>          Path loss ratio:
>             characterizes the non-congested, additive losses to be
>             generated on the end-to-end path.  This must describe the
>             loss pattern or loss model used to generate the losses.
243,244c246,247
<             Number of media sources:  defines the total number of media
<                sources.
---
>             Number of media sources:
>                defines the total number of media sources.
246,247c249,250
<             Media codec:  Constant Bit Rate (CBR) or Variable Bit Rate
<                (VBR).
---
>             Media codec:
>                Constant Bit Rate (CBR) or Variable Bit Rate (VBR).
254,266c257,271
<                Adaptability:  describes the adaptation options.  For
<                   example, in the case of video, it defines the
<                   following ranges of adaptation: bit rate, frame rate,
<                   and video resolution.  Similarly, in the case of
<                   voice, it defines the range of bit rate adaptation,
<                   the sampling rate variation, and the variation in
<                   packetization interval.
< 
<                Output variation:  for a VBR encoder, it defines the
<                   encoder output variation from the average target rate
<                   over a particular measurement interval.  For example,
<                   on average the encoder output may vary between 5% to
<                   15% above or below the average target bit rate when
---
>                Adaptability:
>                   describes the adaptation options.  For example, in the
>                   case of video, it defines the following ranges of
>                   adaptation: bit rate, frame rate, and video
>                   resolution.  Similarly, in the case of voice, it
>                   defines the range of bit rate adaptation, the sampling
>                   rate variation, and the variation in packetization
>                   interval.
> 
>                Output variation:
>                   for a VBR encoder, it defines the encoder output
>                   variation from the average target rate over a
>                   particular measurement interval.  For example, on
>                   average the encoder output may vary between 5% to 15%
>                   above or below the average target bit rate when
271,276c276,281
<                Responsiveness to a new bit rate request:  the lag in
<                   time between a new bit rate request from the
<                   congestion control algorithm and actual rate changes
<                   in encoder output.  Depending on the encoder, this
<                   value may be specified in absolute time (e.g., 10 ms
<                   to 1000 ms) or other appropriate metric (e.g., next
---
>                Responsiveness to a new bit rate request:
>                   the lag in time between a new bit rate request from
>                   the congestion control algorithm and actual rate
>                   changes in encoder output.  Depending on the encoder,
>                   this value may be specified in absolute time (e.g., 10
>                   ms to 1000 ms) or other appropriate metric (e.g., next
283,285c288,291
<             Media content:  describes the chosen video scenario.  For
<                example, video test sequences are available at [xiph-seq]
<                and [HEVC-seq].  Different video scenarios give different
---
>             Media content:
>                describes the chosen video scenario.  For example, video
>                test sequences are available at [xiph-seq] and
>                [HEVC-seq].  Different video scenarios give different
293,300c299,308
<             Media timeline:  describes the point when the media source
<                is introduced and removed from the testbed.  For example,
<                the media source may start transmitting immediately when
<                the test case begins, or after a few seconds.
< 
<             Startup behavior:  the media starts at a defined bit rate,
<                which may be the minimum, maximum bit rate, or a value in
<                between (in Kbps).
---
>             Media timeline:
>                describes the point when the media source is introduced
>                and removed from the testbed.  For example, the media
>                source may start transmitting immediately when the test
>                case begins, or after a few seconds.
> 
>             Startup behavior:
>                the media starts at a defined bit rate, which may be the
>                minimum, maximum bit rate, or a value in between (in
>                Kbps).
308,327c316,339
<             Type of sources:  defines the types of competing traffic
<                sources.  Types of competing traffic flows are listed in
<                [RFC8868].  For example, the number of TCP flows
<                connected to a web browser, the mean size and
<                distribution of the content downloaded.
< 
<             Number of sources:  defines the total number of competing
<                sources of each media type per traffic direction.
< 
<             Congestion control:  enumerates the congestion control used
<                by each type of competing traffic.
< 
<             Traffic timeline:  describes when the competing traffic
<                starts and ends in the test case.
< 
<       Additional attributes:  describes attributes essential for
<          implementing a test case that are not included in the above
<          structure.  These attributes must be well defined, so that the
<          other implementers of that particular test case are able to
<          implement it easily.
---
>             Type of sources:
>                defines the types of competing traffic sources.  Types of
>                competing traffic flows are listed in [RFC8868].  For
>                example, the number of TCP flows connected to a web
>                browser, the mean size and distribution of the content
>                downloaded.
> 
>             Number of sources:
>                defines the total number of competing sources of each
>                media type per traffic direction.
> 
>             Congestion control:
>                enumerates the congestion control used by each type of
>                competing traffic.
> 
>             Traffic timeline:
>                describes when the competing traffic starts and ends in
>                the test case.
> 
>       Additional attributes:
>          describes attributes essential for implementing a test case
>          that are not included in the above structure.  These attributes
>          must be well defined, so that the other implementers of that
>          particular test case are able to implement it easily.
380,382c392,394
<    One-way propagation delay:  50 ms.  Implementers are encouraged to
<       run the experiment with additional propagation delays mentioned in
<       [RFC8868].
---
>    One-way propagation delay:
>       50 ms.  Implementers are encouraged to run the experiment with
>       additional propagation delays mentioned in [RFC8868].
387,389c399,402
<    Bottleneck queue type:  "tail drop".  Implementers are encouraged to
<       run the experiment with other Active Queue Management (AQM)
<       schemes, such as FQ-CoDel and PIE.
---
>    Bottleneck queue type:
>       "tail drop".  Implementers are encouraged to run the experiment
>       with other Active Queue Management (AQM) schemes, such as FQ-CoDel
>       and PIE.
421,428c434,442
<             Bit rate range:  150 Kbps - 1.5 Mbps.  In real-life
<                applications, the bit rate range can vary a lot depending
<                on the provided service; for example, the maximum bit
<                rate can be up to 4 Mbps.  However, for running tests to
<                evaluate the congestion control algorithms, it is more
<                important to have a look at how they react to a certain
<                amount of bandwidth change.  Also it is possible that the
<                media traffic generator used in a particular simulator or
---
>             Bit rate range:
>                150 Kbps - 1.5 Mbps.  In real-life applications, the bit
>                rate range can vary a lot depending on the provided
>                service; for example, the maximum bit rate can be up to 4
>                Mbps.  However, for running tests to evaluate the
>                congestion control algorithms, it is more important to
>                have a look at how they react to a certain amount of
>                bandwidth change.  Also it is possible that the media
>                traffic generator used in a particular simulator or
436,442c450,451
<             Frame resolution:  144p - 720p (or 1080p).  This resolution
<                range is selected based on the bit rate range.  If a
<                different bit rate range is used in the test cases, then
<                a suitable frame resolution range also needs to be
<                selected.
< 
<             Frame rate:  10 fps - 30 fps.  This frame rate range is
---
>             Frame resolution:
>                144p - 720p (or 1080p).  This resolution range is
444,445c453,454
<                rate range is used in the test cases, then the frame rate
<                range also needs to be suitably adjusted.
---
>                rate range is used in the test cases, then a suitable
>                frame resolution range also needs to be selected.
447,449c456,465
<          Variation from target bit rate:  +/-5%. Unless otherwise
<             specified in the test case(s), bit rate variation should be
<             calculated over a one (1) second period of time.
---
>             Frame rate:
>                10 fps - 30 fps.  This frame rate range is selected based
>                on the bit rate range.  If a different bit rate range is
>                used in the test cases, then the frame rate range also
>                needs to be suitably adjusted.
> 
>          Variation from target bit rate:
>             +/-5%. Unless otherwise specified in the test case(s), bit
>             rate variation should be calculated over a one (1) second
>             period of time.
453c469,470
<       Media content:  The media content should represent a typical video
---
>       Media content:
>          The media content should represent a typical video
457,462c474,479
<       Media startup behavior:  150 Kbps.  It should be noted that
<          applications can use smart ways to select an optimal startup
<          bit rate value for a certain network condition.  In such cases,
<          the candidate proposals may show the effectiveness of such a
<          smart approach as additional information for the evaluation
<          process.
---
>       Media startup behavior:
>          150 Kbps.  It should be noted that applications can use smart
>          ways to select an optimal startup bit rate value for a certain
>          network condition.  In such cases, the candidate proposals may
>          show the effectiveness of such a smart approach as additional
>          information for the evaluation process.
499,506c516,524
<    Expected behavior:  The candidate algorithm is expected to detect the
<       path capacity constraint, converge to the bottleneck link's
<       capacity, and adapt the flow to avoid unwanted media rate
<       oscillation when the sending bit rate is approaching the
<       bottleneck link's capacity.  Such oscillations might occur when
<       the media flow(s) attempts to reach its maximum bit rate but
<       overshoots the usage of the available bottleneck capacity, then to
<       rectify, it reduces the bit rate and starts to ramp up again.
---
>    Expected behavior:
>       The candidate algorithm is expected to detect the path capacity
>       constraint, converge to the bottleneck link's capacity, and adapt
>       the flow to avoid unwanted media rate oscillation when the sending
>       bit rate is approaching the bottleneck link's capacity.  Such
>       oscillations might occur when the media flow(s) attempts to reach
>       its maximum bit rate but overshoots the usage of the available
>       bottleneck capacity, then to rectify, it reduces the bit rate and
>       starts to ramp up again.
510,513c528,532
<    Testbed topology:  One media source S1 is connected to the
<       corresponding R1.  The media traffic is transported over the
<       forward path and corresponding feedback/control traffic is
<       transported over the backward path.
---
>    Testbed topology:
>       One media source S1 is connected to the corresponding R1.  The
>       media traffic is transported over the forward path and
>       corresponding feedback/control traffic is transported over the
>       backward path.
597,603c616,623
<    Expected behavior:  The candidate algorithm is expected to detect the
<       variation in available capacity and adapt the media stream(s)
<       accordingly.  The flows stabilize around their maximum bit rate as
<       the maximum link capacity is large enough to accommodate the
<       flows.  When the available capacity drops, the flows adapt by
<       decreasing their sending bit rate, and when congestion disappears,
<       the flows are again expected to ramp up.
---
>    Expected behavior:
>       The candidate algorithm is expected to detect the variation in
>       available capacity and adapt the media stream(s) accordingly.  The
>       flows stabilize around their maximum bit rate as the maximum link
>       capacity is large enough to accommodate the flows.  When the
>       available capacity drops, the flows adapt by decreasing their
>       sending bit rate, and when congestion disappears, the flows are
>       again expected to ramp up.
607,608c627,629
<    Testbed topology:  Two (2) media sources S1 and S2 are connected to
<       their corresponding destinations R1 and R2.  The media traffic is
---
>    Testbed topology:
>       Two (2) media sources S1 and S2 are connected to their
>       corresponding destinations R1 and R2.  The media traffic is
681,687c702,709
<    Testbed topology:  One (1) media source S1 is connected to
<       corresponding R1, but both endpoints are additionally receiving
<       and sending data, respectively.  The media traffic (S1->R1) is
<       transported over the forward path, and the corresponding feedback/
<       control traffic is transported over the backward path.  Likewise,
<       media traffic (S2->R2) is transported over the backward path, and
<       the corresponding feedback/control traffic is transported over the
---
>    Testbed topology:
>       One (1) media source S1 is connected to corresponding R1, but both
>       endpoints are additionally receiving and sending data,
>       respectively.  The media traffic (S1->R1) is transported over the
>       forward path, and the corresponding feedback/control traffic is
>       transported over the backward path.  Likewise, media traffic
>       (S2->R2) is transported over the backward path, and the
>       corresponding feedback/control traffic is transported over the
746,754c768,777
<    Test-specific information:  This test uses path capacity variations
<       to create a congested feedback link.  Table 3 lists the variation
<       patterns applied to the forward path, and Table 4 lists the
<       variation patterns applied to the backward path.  When using
<       background non-adaptive UDP traffic to induce a time-varying
<       bottleneck for congestion-controlled media flows, the physical
<       path capacity is 4 Mbps for both directions, and the UDP traffic
<       source rate changes over time as (4-x) Mbps in each direction,
<       where x is the bottleneck capacity specified in Table 4.
---
>    Test-specific information:
>       This test uses path capacity variations to create a congested
>       feedback link.  Table 3 lists the variation patterns applied to
>       the forward path, and Table 4 lists the variation patterns applied
>       to the backward path.  When using background non-adaptive UDP
>       traffic to induce a time-varying bottleneck for congestion-
>       controlled media flows, the physical path capacity is 4 Mbps for
>       both directions, and the UDP traffic source rate changes over time
>       as (4-x) Mbps in each direction, where x is the bottleneck
>       capacity specified in Table 4.
802,808c825,832
<    Expected behavior:  It is expected that the competing flows will
<       converge to an optimum bit rate to accommodate all the flows with
<       minimum possible latency and loss.  Specifically, the test
<       introduces three media flows at different time instances.  When
<       the second flow appears, there should still be room to accommodate
<       another flow on the bottleneck link.  Lastly, when the third flow
<       appears, the bottleneck link should be saturated.
---
>    Expected behavior:
>       It is expected that the competing flows will converge to an
>       optimum bit rate to accommodate all the flows with minimum
>       possible latency and loss.  Specifically, the test introduces
>       three media flows at different time instances.  When the second
>       flow appears, there should still be room to accommodate another
>       flow on the bottleneck link.  Lastly, when the third flow appears,
>       the bottleneck link should be saturated.
812,815c836,840
<    Testbed topology:  Three media sources S1, S2, and S3 are connected
<       to R1, R2, and R3, respectively.  The media traffic is transported
<       over the forward path, and the corresponding feedback/control
<       traffic is transported over the backward path.
---
>    Testbed topology:
>       Three media sources S1, S2, and S3 are connected to R1, R2, and
>       R3, respectively.  The media traffic is transported over the
>       forward path, and the corresponding feedback/control traffic is
>       transported over the backward path.
853,855c878,880
<                Media timeline:  New media flows are added sequentially,
<                   at short time intervals.  See the test-specific setup
<                   below.
---
>                Media timeline:
>                   New media flows are added sequentially, at short time
>                   intervals.  See the test-specific setup below.
863,865c888,890
<                Media timeline:  New media flows are added sequentially,
<                   at short time intervals.  See the test-specific setup
<                   below.
---
>                Media timeline:
>                   New media flows are added sequentially, at short time
>                   intervals.  See the test-specific setup below.
904,908c929,934
<    Expected behavior:  It is expected that the competing flows will
<       converge to bit rates to accommodate all the flows with minimum
<       possible latency and loss.  The effectiveness of the algorithm
<       depends on how fast and fairly the competing flows converge to
<       their steady states irrespective of the RTT observed.
---
>    Expected behavior:
>       It is expected that the competing flows will converge to bit rates
>       to accommodate all the flows with minimum possible latency and
>       loss.  The effectiveness of the algorithm depends on how fast and
>       fairly the competing flows converge to their steady states
>       irrespective of the RTT observed.
912,916c938,943
<    Testbed topology:  Five (5) media sources S1..S5 are connected to
<       their corresponding media sinks R1..R5.  The media traffic is
<       transported over the forward path, and the corresponding feedback/
<       control traffic is transported over the backward path.  The
<       topology is the same as in Section 5.4.
---
>    Testbed topology:
>       Five (5) media sources S1..S5 are connected to their corresponding
>       media sinks R1..R5.  The media traffic is transported over the
>       forward path, and the corresponding feedback/control traffic is
>       transported over the backward path.  The topology is the same as
>       in Section 5.4.
928,930c955,957
<          One-way propagation delay for each flow:  10 ms for S1-R1, 25
<             ms for S2-R2, 50 ms for S3-R3, 100 ms for S4-R4, and 150 ms
<             S5-R5.
---
>          One-way propagation delay for each flow:
>             10 ms for S1-R1, 25 ms for S2-R2, 50 ms for S3-R3, 100 ms
>             for S4-R4, and 150 ms S5-R5.
942,944c969,971
<                Media timeline:  New media flows are added sequentially,
<                   at short time intervals.  See the test-specific setup
<                   below.
---
>                Media timeline:
>                   New media flows are added sequentially, at short time
>                   intervals.  See the test-specific setup below.
952,954c979,981
<                Media timeline:  New media flows are added sequentially,
<                   at short time intervals.  See the test-specific setup
<                   below.
---
>                Media timeline:
>                   New media flows are added sequentially, at short time
>                   intervals.  See the test-specific setup below.
1000,1003c1027,1031
<    Expected behavior:  Depending on the convergence observed in test
<       cases 5.1 and 5.2, the candidate algorithm may be able to avoid
<       congestion collapse.  In the worst case, the media stream will
<       fall to the minimum media bit rate.
---
>    Expected behavior:
>       Depending on the convergence observed in test cases 5.1 and 5.2,
>       the candidate algorithm may be able to avoid congestion collapse.
>       In the worst case, the media stream will fall to the minimum media
>       bit rate.
1014,1020c1042,1049
<    Testbed topology:  One (1) media source S1 is connected to the
<       corresponding media sink, R1.  In addition, there is a long-lived
<       TCP flow sharing the same bottleneck link.  The media traffic is
<       transported over the forward path, and the corresponding feedback/
<       control traffic is transported over the backward path.  The TCP
<       traffic goes over the forward path from S_tcp with acknowledgment
<       packets going over the backward path from R_tcp.
---
>    Testbed topology:
>       One (1) media source S1 is connected to the corresponding media
>       sink, R1.  In addition, there is a long-lived TCP flow sharing the
>       same bottleneck link.  The media traffic is transported over the
>       forward path, and the corresponding feedback/control traffic is
>       transported over the backward path.  The TCP traffic goes over the
>       forward path from S_tcp with acknowledgment packets going over the
>       backward path from R_tcp.
1118,1123c1147,1153
<    Expected behavior:  The candidate algorithm is expected to avoid flow
<       starvation during the presence of short and bursty competing TCP
<       flows, streaming at least at the minimum media bit rate.  After
<       competing TCP flows terminate, the media streams are expected to
<       be robust enough to eventually recover to previous steady state
<       behavior, and at the very least, avoid persistent starvation.
---
>    Expected behavior:
>       The candidate algorithm is expected to avoid flow starvation
>       during the presence of short and bursty competing TCP flows,
>       streaming at least at the minimum media bit rate.  After competing
>       TCP flows terminate, the media streams are expected to be robust
>       enough to eventually recover to previous steady state behavior,
>       and at the very least, avoid persistent starvation.
1134,1135c1164,1166
<    Testbed topology:  The topology described here is the same as the one
<       described in Figure 6.
---
>    Testbed topology:
>       The topology described here is the same as the one described in
>       Figure 6.
1187,1192c1218,1224
<             Traffic timeline:  Each short TCP flow is modeled as a
<                sequence of file downloads interleaved with idle periods.
<                Not all short TCP flows start at the same time, two of
<                them start in the ON state, while rest of the eight flows
<                start in an OFF state.  For a description of the short
<                TCP flow model, see test-specific information below.
---
>             Traffic timeline:
>                Each short TCP flow is modeled as a sequence of file
>                downloads interleaved with idle periods.  Not all short
>                TCP flows start at the same time, two of them start in
>                the ON state, while rest of the eight flows start in an
>                OFF state.  For a description of the short TCP flow
>                model, see test-specific information below.
1196,1197c1228,1230
<       Short TCP traffic model:  The short TCP model to be used in this
<          test is described in [RFC8868].
---
>       Short TCP traffic model:
>          The short TCP model to be used in this test is described in
>          [RFC8868].
1220,1225c1253,1258
<    Expected behavior:  During the period where the third stream is
<       paused, the two remaining flows are expected to increase their
<       rates and reach the maximum media bit rate.  When the third stream
<       resumes, all three flows are expected to converge to the same
<       original fair share of rates prior to the media pause/resume
<       event.
---
>    Expected behavior:
>       During the period where the third stream is paused, the two
>       remaining flows are expected to increase their rates and reach the
>       maximum media bit rate.  When the third stream resumes, all three
>       flows are expected to converge to the same original fair share of
>       rates prior to the media pause/resume event.
1325,1328c1358,1362
<    Expected behavior:  The candidate algorithm is expected to achieve
<       full utilization at both bottleneck links without starving any of
<       the three congestion-controlled media flows and ensuring fair
<       share of the available bandwidth at each bottleneck.
---
>    Expected behavior:
>       The candidate algorithm is expected to achieve full utilization at
>       both bottleneck links without starving any of the three
>       congestion-controlled media flows and ensuring fair share of the
>       available bandwidth at each bottleneck.
1349,1351c1383,1386
<    Testbed topology:  Three media sources S1, S2, and S3 are connected
<       to respective destinations R1, R2, and R3.  For all three flows,
<       the media traffic is transported over the forward path, and the
---
>    Testbed topology:
>       Three media sources S1, S2, and S3 are connected to respective
>       destinations R1, R2, and R3.  For all three flows, the media
>       traffic is transported over the forward path, and the
1540d1574
< 
1550d1583
< 
1560d1592
< 
1569d1600
< 
