88,95c88,95
<      A.1.  "_443._tcp.www.example.com"
<      A.2.  "_25._tcp.example.com" NSEC Wildcard
<      A.3.  "_25._tcp.example.org" NSEC3 Wildcard
<      A.4.  "_443._tcp.www.example.org" CNAME
<      A.5.  "_443._tcp.www.example.net" DNAME
<      A.6.  "_25._tcp.smtp.example.com" NSEC Denial of Existence
<      A.7.  "_25._tcp.smtp.example.org" NSEC3 Denial of Existence
<      A.8.  "_443._tcp.www.insecure.example" NSEC3 Opt-Out Insecure
---
>      A.1.  _443._tcp.www.example.com
>      A.2.  _25._tcp.example.com NSEC Wildcard
>      A.3.  _25._tcp.example.org NSEC3 Wildcard
>      A.4.  _443._tcp.www.example.org CNAME
>      A.5.  _443._tcp.www.example.net DNAME
>      A.6.  _25._tcp.smtp.example.com NSEC Denial of Existence
>      A.7.  _25._tcp.smtp.example.org NSEC3 Denial of Existence
>      A.8.  _443._tcp.www.insecure.example NSEC3 Opt-Out Insecure
188,189c188,189
<    A client MAY include an extension of type "dnssec_chain" in the
<    (extended) ClientHello.  The "extension_data" field of this extension
---
>    A client MAY include an extension of type dnssec_chain in the
>    (extended) ClientHello.  The extension_data field of this extension
194,195c194,195
<    authenticated TLSA RRset chain needs to be used for the
<    "dnssec_chain" extension.
---
>    authenticated TLSA RRset chain needs to be used for the dnssec_chain
>    extension.
198c198
<    of) this extension receives a "dnssec_chain" extension in the
---
>    of) this extension receives a dnssec_chain extension in the
203c203
<    ServerHello message MUST NOT include the "dnssec_chain" extension.
---
>    ServerHello message MUST NOT include the dnssec_chain extension.
246,250c246,249
<    In TLS 1.3 [RFC8446], when the server receives the "dnssec_chain"
<    extension, it adds its "dnssec_chain" extension to the extension
<    block of the Certificate message containing the end-entity
<    certificate being validated rather than to the extended ServerHello
<    message.
---
>    In TLS 1.3 [RFC8446], when the server receives the dnssec_chain
>    extension, it adds its dnssec_chain extension to the extension block
>    of the Certificate message containing the end-entity certificate
>    being validated rather than to the extended ServerHello message.
257,259c256,258
<    The "extension_data" field of the client's "dnssec_chain" extension
<    MUST contain the server's 16-bit TCP port number in network (big-
<    endian) byte order:
---
>    The extension_data field of the client's dnssec_chain extension MUST
>    contain the server's 16-bit TCP port number in network (big-endian)
>    byte order:
265,267c264,265
<    The "extension_data" field of the server's "dnssec_chain" extension
<    MUST contain a DNSSEC authentication chain encoded in the following
<    form:
---
>    The extension_data field of the server's dnssec_chain extension MUST
>    contain a DNSSEC authentication chain encoded in the following form:
344,346c342,344
<    structure for the HTTPS server at "www.example.com", where there are
<    zone cuts at "com" and "example.com" (record data are omitted here
<    for brevity):
---
>    structure for the HTTPS server at www.example.com, where there are
>    zone cuts at com and example.com (record data are omitted here for
>    brevity):
362c360
<    at "_443._tcp.www.example.com".  The NSEC record in this example
---
>    at _443._tcp.www.example.com.  The NSEC record in this example
380c378
<    "example.com" from the ".com" zone.  This example shows NSEC3 records
---
>    example.com from the .com zone.  This example shows NSEC3 records
436c434
<    "server_name" (SNI) extension [RFC6066].  If the server does not
---
>    server_name (SNI) extension [RFC6066].  If the server does not
439c437
<    NOT send a "dnssec_chain" extension to the client.
---
>    NOT send a dnssec_chain extension to the client.
450,453c448,451
<    the client's "dnssec_chain" extension.  The transport name is "tcp"
<    for TLS servers and "udp" for DTLS servers.  The port number label is
<    the leftmost label, followed by the transport name label, followed by
<    the server domain name (from SNI).
---
>    the client's dnssec_chain extension.  The transport name is "tcp" for
>    TLS servers and "udp" for DTLS servers.  The port number label is the
>    leftmost label, followed by the transport name label, followed by the
>    server domain name (from SNI).
527c525
<    "dnssec_chain" extension for subsequent connections to the same TLS
---
>    dnssec_chain extension for subsequent connections to the same TLS
532c530
<    the server sends no "dnssec_chain".  This is particularly clear with
---
>    the server sends no dnssec_chain.  This is particularly clear with
573c571
<    authenticated handshake with a server that returns a "dnssec_chain"
---
>    authenticated handshake with a server that returns a dnssec_chain
577,582c575,580
<    returns a "dnssec_chain" extension with a non-zero ExtSupport
<    lifetime, the client MUST update any existing pin lifetime for the
<    service (name and port) to a value that is not longer than that
<    indicated by the server.  The client MAY, subject to local policy,
<    create a previously nonexistent pin, again for a lifetime that is not
<    longer than that indicated by the server.
---
>    returns a dnssec_chain extension with a non-zero ExtSupport lifetime,
>    the client MUST update any existing pin lifetime for the service
>    (name and port) to a value that is not longer than that indicated by
>    the server.  The client MAY, subject to local policy, create a
>    previously nonexistent pin, again for a lifetime that is not longer
>    than that indicated by the server.
919c917
<    and, except for the "extension_data" in Appendix A.1, do not contain
---
>    and, except for the extension_data in Appendix A.1, do not contain
930c928
<       except for the "example.com" and "example.net" zones, which use a
---
>       except for the example.com and example.net zones, which use a
945,946c943,944
<    "https://example.com/", "https://example.net/", and
<    "https://example.org/" at the time of writing:
---
>    https://example.com/, https://example.net/, and https://example.org/
>    at the time of writing:
990c988
< A.1.  "_443._tcp.www.example.com"
---
> A.1.  _443._tcp.www.example.com
1051c1049
<    A hex dump of the "extension_data" of the server's "dnssec_chain"
---
>    A hex dump of the extension_data of the server's dnssec_chain
1154c1152
< A.2.  "_25._tcp.example.com" NSEC Wildcard
---
> A.2.  _25._tcp.example.com NSEC Wildcard
1221c1219
< A.3.  "_25._tcp.example.org" NSEC3 Wildcard
---
> A.3.  _25._tcp.example.org NSEC3 Wildcard
1295c1293
< A.4.  "_443._tcp.www.example.org" CNAME
---
> A.4.  _443._tcp.www.example.org CNAME
1368c1366
< A.5.  "_443._tcp.www.example.net" DNAME
---
> A.5.  _443._tcp.www.example.net DNAME
1465c1463
< A.6.  "_25._tcp.smtp.example.com" NSEC Denial of Existence
---
> A.6.  _25._tcp.smtp.example.com NSEC Denial of Existence
1525c1523
< A.7.  "_25._tcp.smtp.example.org" NSEC3 Denial of Existence
---
> A.7.  _25._tcp.smtp.example.org NSEC3 Denial of Existence
1606c1604
< A.8.  "_443._tcp.www.insecure.example" NSEC3 Opt-Out Insecure Delegation
---
> A.8.  _443._tcp.www.insecure.example NSEC3 Opt-Out Insecure Delegation
1664d1661
< 
1674d1670
< 
1683d1678
< 
1691d1685
< 
1697d1690
< 
