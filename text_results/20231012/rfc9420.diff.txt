232,237c232,239
<    Client:  An agent that uses this protocol to establish shared
<       cryptographic state with other clients.  A client is defined by
<       the cryptographic keys it holds.
< 
<    Group:  A group represents a logical collection of clients that share
<       a common secret value at any given time.  Its state is represented
---
>    Client:
>       An agent that uses this protocol to establish shared cryptographic
>       state with other clients.  A client is defined by the
>       cryptographic keys it holds.
> 
>    Group:
>       A group represents a logical collection of clients that share a
>       common secret value at any given time.  Its state is represented
241c243,244
<    Epoch:  A state of a group in which a specific set of authenticated
---
>    Epoch:
>       A state of a group in which a specific set of authenticated
244,256c247,261
<    Member:  A client that is included in the shared state of a group and
<       hence has access to the group's secrets.
< 
<    Key Package:  A signed object describing a client's identity and
<       capabilities, including a hybrid public key encryption (HPKE)
<       [RFC9180] public key that can be used to encrypt to that client.
<       Other clients can use a client's KeyPackage to introduce the
<       client to a new group.
< 
<    Group Context:  An object that summarizes the shared, public state of
<       the group.  The group context is typically distributed in a signed
<       GroupInfo message, which is provided to new members to help them
<       join a group.
---
>    Member:
>       A client that is included in the shared state of a group and hence
>       has access to the group's secrets.
> 
>    Key Package:
>       A signed object describing a client's identity and capabilities,
>       including a hybrid public key encryption (HPKE) [RFC9180] public
>       key that can be used to encrypt to that client.  Other clients can
>       use a client's KeyPackage to introduce the client to a new group.
> 
>    Group Context:
>       An object that summarizes the shared, public state of the group.
>       The group context is typically distributed in a signed GroupInfo
>       message, which is provided to new members to help them join a
>       group.
261,262c266,277
<    Proposal:  A message that proposes a change to the group, e.g.,
<       adding or removing a member.
---
>    Proposal:
>       A message that proposes a change to the group, e.g., adding or
>       removing a member.
> 
>    Commit:
>       A message that implements the changes to the group proposed in a
>       set of Proposals.
> 
>    PublicMessage:
>       An MLS protocol message that is signed by its sender and
>       authenticated as coming from a member of the group in a particular
>       epoch, but not encrypted.
264,277c279,287
<    Commit:  A message that implements the changes to the group proposed
<       in a set of Proposals.
< 
<    PublicMessage:  An MLS protocol message that is signed by its sender
<       and authenticated as coming from a member of the group in a
<       particular epoch, but not encrypted.
< 
<    PrivateMessage:  An MLS protocol message that is signed by its
<       sender, authenticated as coming from a member of the group in a
<       particular epoch, and encrypted so that it is confidential to the
<       members of the group in that epoch.
< 
<    Handshake Message:  A PublicMessage or PrivateMessage carrying an MLS
<       Proposal or Commit object, as opposed to application data.
---
>    PrivateMessage:
>       An MLS protocol message that is signed by its sender,
>       authenticated as coming from a member of the group in a particular
>       epoch, and encrypted so that it is confidential to the members of
>       the group in that epoch.
> 
>    Handshake Message:
>       A PublicMessage or PrivateMessage carrying an MLS Proposal or
>       Commit object, as opposed to application data.
6361,6364c6371,6374
<    Security considerations:  MLS is an encrypted messaging layer
<       designed to be transmitted over arbitrary lower-layer protocols.
<       The security considerations in this document (RFC 9420) also
<       apply.
---
>    Security considerations:
>       MLS is an encrypted messaging layer designed to be transmitted
>       over arbitrary lower-layer protocols.  The security considerations
>       in this document (RFC 9420) also apply.
