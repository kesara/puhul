242,292c242,293
<    pledge identifier:  The pledge identifier identifies the (6LBR)
<       pledge.  The pledge identifier MUST be unique in the set of all
<       pledge identifiers managed by a JRC.  The pledge identifier
<       uniqueness is an important security requirement, as discussed in
<       Section 9.  The pledge identifier is typically the globally unique
<       64-bit Extended Unique Identifier (EUI-64) of the IEEE Std
<       802.15.4 device, in which case it is provisioned by the hardware
<       manufacturer.  The pledge identifier is used to generate the IPv6
<       addresses of the (6LBR) pledge and to identify it during the
<       execution of the join protocol.  Depending on the configuration,
<       the pledge identifier may also be used after the join process to
<       identify the joined node.  For privacy reasons (see Section 10),
<       it is possible to use a pledge identifier different from the EUI-
<       64.  For example, a pledge identifier may be a random byte string,
<       but care needs to be taken that such a string meets the uniqueness
<       requirement.
< 
<    Pre-Shared Key (PSK):  A symmetric cryptographic key shared between
<       the (6LBR) pledge and the JRC.  To look up the PSK for a given
<       pledge, the JRC additionally needs to store the corresponding
<       pledge identifier.  Each (6LBR) pledge MUST be provisioned with a
<       unique PSK.  The PSK MUST be a cryptographically strong key, with
<       at least 128 bits of entropy, indistinguishable by feasible
<       computation from a random uniform string of the same length.  How
<       the PSK is generated and/or provisioned is out of scope of this
<       specification.  This could be done during a provisioning step, or
<       companion documents can specify the use of a key-agreement
<       protocol.  Common pitfalls when generating PSKs are discussed in
<       Section 9.  In the case of recommissioning a device to a new
<       owner, the PSK MUST be changed.  Note that the PSK is different
<       from the link-layer keys K1 and K2 specified in [RFC8180].  The
<       PSK is a long-term secret used to protect the execution of the
<       secure join protocol specified in this document; the link-layer
<       keys are transported as part of the secure join protocol.
< 
<    Optionally, a network identifier:  The network identifier identifies
<       the 6TiSCH network.  The network identifier MUST be carried within
<       Enhanced Beacon (EB) frames.  Typically, the 16-bit Personal Area
<       Network Identifier (PAN ID) defined in [IEEE802.15.4] is used as
<       the network identifier.  However, PAN ID is not considered a
<       stable network identifier as it may change during network lifetime
<       if a collision with another network is detected.  Companion
<       documents can specify the use of a different network identifier
<       for join purposes, but this is out of scope of this specification.
<       Provisioning the network identifier to a pledge is RECOMMENDED.
<       However, due to operational constraints, the network identifier
<       may not be known at the time of provisioning.  If this parameter
<       is not provisioned to the pledge, the pledge will attempt to join
<       one advertised network at a time, which significantly prolongs the
<       join process.  This parameter MUST be provisioned to the 6LBR
<       pledge.
---
>    pledge identifier:
>       The pledge identifier identifies the (6LBR) pledge.  The pledge
>       identifier MUST be unique in the set of all pledge identifiers
>       managed by a JRC.  The pledge identifier uniqueness is an
>       important security requirement, as discussed in Section 9.  The
>       pledge identifier is typically the globally unique 64-bit Extended
>       Unique Identifier (EUI-64) of the IEEE Std 802.15.4 device, in
>       which case it is provisioned by the hardware manufacturer.  The
>       pledge identifier is used to generate the IPv6 addresses of the
>       (6LBR) pledge and to identify it during the execution of the join
>       protocol.  Depending on the configuration, the pledge identifier
>       may also be used after the join process to identify the joined
>       node.  For privacy reasons (see Section 10), it is possible to use
>       a pledge identifier different from the EUI-64.  For example, a
>       pledge identifier may be a random byte string, but care needs to
>       be taken that such a string meets the uniqueness requirement.
> 
>    Pre-Shared Key (PSK):
>       A symmetric cryptographic key shared between the (6LBR) pledge and
>       the JRC.  To look up the PSK for a given pledge, the JRC
>       additionally needs to store the corresponding pledge identifier.
>       Each (6LBR) pledge MUST be provisioned with a unique PSK.  The PSK
>       MUST be a cryptographically strong key, with at least 128 bits of
>       entropy, indistinguishable by feasible computation from a random
>       uniform string of the same length.  How the PSK is generated and/
>       or provisioned is out of scope of this specification.  This could
>       be done during a provisioning step, or companion documents can
>       specify the use of a key-agreement protocol.  Common pitfalls when
>       generating PSKs are discussed in Section 9.  In the case of
>       recommissioning a device to a new owner, the PSK MUST be changed.
>       Note that the PSK is different from the link-layer keys K1 and K2
>       specified in [RFC8180].  The PSK is a long-term secret used to
>       protect the execution of the secure join protocol specified in
>       this document; the link-layer keys are transported as part of the
>       secure join protocol.
> 
>    Optionally, a network identifier:
>       The network identifier identifies the 6TiSCH network.  The network
>       identifier MUST be carried within Enhanced Beacon (EB) frames.
>       Typically, the 16-bit Personal Area Network Identifier (PAN ID)
>       defined in [IEEE802.15.4] is used as the network identifier.
>       However, PAN ID is not considered a stable network identifier as
>       it may change during network lifetime if a collision with another
>       network is detected.  Companion documents can specify the use of a
>       different network identifier for join purposes, but this is out of
>       scope of this specification.  Provisioning the network identifier
>       to a pledge is RECOMMENDED.  However, due to operational
>       constraints, the network identifier may not be known at the time
>       of provisioning.  If this parameter is not provisioned to the
>       pledge, the pledge will attempt to join one advertised network at
>       a time, which significantly prolongs the join process.  This
>       parameter MUST be provisioned to the 6LBR pledge.
301,308c302,310
<    Global IPv6 address of the JRC:  This address is used by the 6LBR
<       pledge to address the JRC during the join process.  The 6LBR
<       pledge may also obtain the IPv6 address of the JRC through other
<       available mechanisms, such as DHCPv6 [RFC8415], Generic Autonomic
<       Signaling Protocol (GRASP) [RFC8990], or Multicast DNS (mDNS)
<       [RFC6762]; the use of these mechanisms is out of scope of this
<       document.  Pledges do not need to be provisioned with this address
<       as they discover it dynamically through CoJP.
---
>    Global IPv6 address of the JRC:
>       This address is used by the 6LBR pledge to address the JRC during
>       the join process.  The 6LBR pledge may also obtain the IPv6
>       address of the JRC through other available mechanisms, such as
>       DHCPv6 [RFC8415], Generic Autonomic Signaling Protocol (GRASP)
>       [RFC8990], or Multicast DNS (mDNS) [RFC6762]; the use of these
>       mechanisms is out of scope of this document.  Pledges do not need
>       to be provisioned with this address as they discover it
>       dynamically through CoJP.
1175,1179c1177,1182
<    role:  The identifier of the role that the pledge requests to play in
<       the network once it joins, encoded as an unsigned integer.
<       Possible values are specified in Table 3.  This parameter MAY be
<       included.  If the parameter is omitted, the default value of 0,
<       i.e., the role "6TiSCH Node", MUST be assumed.
---
>    role:
>       The identifier of the role that the pledge requests to play in the
>       network once it joins, encoded as an unsigned integer.  Possible
>       values are specified in Table 3.  This parameter MAY be included.
>       If the parameter is omitted, the default value of 0, i.e., the
>       role "6TiSCH Node", MUST be assumed.
1189,1196c1192,1199
<    unsupported configuration:  The identifier of the parameters that are
<       not supported by the implementation, encoded as an
<       Unsupported_Configuration object described in Section 8.4.5.  This
<       parameter MAY be included.  If a (6LBR) pledge previously
<       attempted to join and received a valid Join Response message over
<       OSCORE but failed to act on its payload (Configuration object), it
<       SHOULD include this parameter to facilitate the recovery and
<       debugging.
---
>    unsupported configuration:
>       The identifier of the parameters that are not supported by the
>       implementation, encoded as an Unsupported_Configuration object
>       described in Section 8.4.5.  This parameter MAY be included.  If a
>       (6LBR) pledge previously attempted to join and received a valid
>       Join Response message over OSCORE but failed to act on its payload
>       (Configuration object), it SHOULD include this parameter to
>       facilitate the recovery and debugging.
1243,1266c1246,1271
<    link-layer key set:  An array encompassing a set of cryptographic
<       keys and their identifiers that are currently in use in the
<       network or that are scheduled to be used in the future.  The
<       encoding of individual keys is described in Section 8.4.3.  The
<       link-layer key set parameter MAY be included in a Configuration
<       object.  When present, the link-layer key set parameter MUST
<       contain at least one key.  This parameter is also used to
<       implement rekeying in the network.  The installation and use of
<       keys differs for the 6LBR and other (regular) nodes, and this is
<       explained in Sections 8.4.3.1 and 8.4.3.2.
< 
<    short identifier:  A compact identifier assigned to the pledge.  The
<       short identifier structure is described in Section 8.4.4.  The
<       short identifier parameter MAY be included in a Configuration
<       object.
< 
<    JRC address:  The IPv6 address of the JRC, encoded as a byte string,
<       with the length of 16 bytes.  If the length of the byte string is
<       different from 16, the parameter MUST be discarded.  If the JRC is
<       not co-located with the 6LBR and has a different IPv6 address than
<       the 6LBR, this parameter MUST be included.  In the special case
<       where the JRC is co-located with the 6LBR and has the same IPv6
<       address as the 6LBR, this parameter MAY be included.  If the JRC
<       address parameter is not present in the Configuration object, this
---
>    link-layer key set:
>       An array encompassing a set of cryptographic keys and their
>       identifiers that are currently in use in the network or that are
>       scheduled to be used in the future.  The encoding of individual
>       keys is described in Section 8.4.3.  The link-layer key set
>       parameter MAY be included in a Configuration object.  When
>       present, the link-layer key set parameter MUST contain at least
>       one key.  This parameter is also used to implement rekeying in the
>       network.  The installation and use of keys differs for the 6LBR
>       and other (regular) nodes, and this is explained in Sections
>       8.4.3.1 and 8.4.3.2.
> 
>    short identifier:
>       A compact identifier assigned to the pledge.  The short identifier
>       structure is described in Section 8.4.4.  The short identifier
>       parameter MAY be included in a Configuration object.
> 
>    JRC address:
>       The IPv6 address of the JRC, encoded as a byte string, with the
>       length of 16 bytes.  If the length of the byte string is different
>       from 16, the parameter MUST be discarded.  If the JRC is not co-
>       located with the 6LBR and has a different IPv6 address than the
>       6LBR, this parameter MUST be included.  In the special case where
>       the JRC is co-located with the 6LBR and has the same IPv6 address
>       as the 6LBR, this parameter MAY be included.  If the JRC address
>       parameter is not present in the Configuration object, this
1271,1273c1276,1279
<    blacklist:  An array encompassing a list of pledge identifiers that
<       are blacklisted by the JRC, with each pledge identifier encoded as
<       a byte string.  The blacklist parameter MAY be included in a
---
>    blacklist:
>       An array encompassing a list of pledge identifiers that are
>       blacklisted by the JRC, with each pledge identifier encoded as a
>       byte string.  The blacklist parameter MAY be included in a
1288,1298c1294,1305
<    join rate:  The average data rate (in units of bytes/second) of join
<       traffic forwarded into the network that should not be exceeded
<       when a joined node operates as a JP, encoded as an unsigned
<       integer.  The join rate parameter MAY be included in a
<       Configuration object.  This parameter allows the JRC to configure
<       different nodes in the network to operate as JP and to act in case
<       of an attack by throttling the rate at which JP forwards
<       unauthenticated traffic into the network.  When this parameter is
<       present in a Configuration object, the value MUST be used to set
<       the PROBING_RATE of CoAP at the joined node for communication with
<       the JRC.  If this parameter is set to zero, a joined node MUST
---
>    join rate:
>       The average data rate (in units of bytes/second) of join traffic
>       forwarded into the network that should not be exceeded when a
>       joined node operates as a JP, encoded as an unsigned integer.  The
>       join rate parameter MAY be included in a Configuration object.
>       This parameter allows the JRC to configure different nodes in the
>       network to operate as JP and to act in case of an attack by
>       throttling the rate at which JP forwards unauthenticated traffic
>       into the network.  When this parameter is present in a
>       Configuration object, the value MUST be used to set the
>       PROBING_RATE of CoAP at the joined node for communication with the
>       JRC.  If this parameter is set to zero, a joined node MUST
1397,1399c1404,1407
<    key_id:  The identifier of the key, encoded as a CBOR unsigned
<       integer.  This parameter MUST be included.  If the decoded CBOR
<       unsigned integer value is larger than the maximum link-layer key
---
>    key_id:
>       The identifier of the key, encoded as a CBOR unsigned integer.
>       This parameter MUST be included.  If the decoded CBOR unsigned
>       integer value is larger than the maximum link-layer key
1405,1409c1413,1418
<    key_usage:  The identifier of the link-layer algorithm, security
<       level, and link-layer frame types that can be used with the key,
<       encoded as an integer.  This parameter MAY be included.  Possible
<       values and the corresponding link-layer settings are specified in
<       the IANA "Constrained Join Protocol (CoJP) Key Usage" registry
---
>    key_usage:
>       The identifier of the link-layer algorithm, security level, and
>       link-layer frame types that can be used with the key, encoded as
>       an integer.  This parameter MAY be included.  Possible values and
>       the corresponding link-layer settings are specified in the IANA
>       "Constrained Join Protocol (CoJP) Key Usage" registry
1416,1420c1425,1430
<    key_value:  The value of the cryptographic key, encoded as a byte
<       string.  This parameter MUST be included.  If the length of the
<       byte string is different than the corresponding key length for a
<       given algorithm specified by the key_usage parameter, the key MUST
<       be discarded, and the implementation MUST signal the error as
---
>    key_value:
>       The value of the cryptographic key, encoded as a byte string.
>       This parameter MUST be included.  If the length of the byte string
>       is different than the corresponding key length for a given
>       algorithm specified by the key_usage parameter, the key MUST be
>       discarded, and the implementation MUST signal the error as
1423,1426c1433,1437
<    key_addinfo:  Additional information needed to configure the link-
<       layer key, encoded as a byte string.  This parameter MAY be
<       included.  The processing of this parameter is dependent on the
<       link-layer technology in use and a particular keying mode.
---
>    key_addinfo:
>       Additional information needed to configure the link-layer key,
>       encoded as a byte string.  This parameter MAY be included.  The
>       processing of this parameter is dependent on the link-layer
>       technology in use and a particular keying mode.
1618,1636c1629,1649
<    identifier:  The short identifier assigned to the pledge, encoded as
<       a byte string.  This parameter MUST be included.  The identifier
<       MUST be unique in the set of all identifiers assigned in a network
<       that is managed by a JRC.  If the identifier is invalid, the
<       decoder MUST silently ignore the Short_Identifier object.
< 
<    lease_time:  The validity of the identifier in hours after the
<       reception of the CBOR object, encoded as a CBOR unsigned integer.
<       This parameter MAY be included.  The node MUST stop using the
<       assigned short identifier after the expiry of the lease_time
<       interval.  It is up to the JRC to renew the lease before the
<       expiry of the previous interval.  The JRC updates the lease by
<       executing the parameter update exchange with the node and
<       including the Short_Identifier in the Configuration object, as
<       described in Section 8.2.  If the lease expires, then the node
<       SHOULD initiate a new join exchange, as described in Section 8.1.
<       If this parameter is omitted, then the value of positive infinity
<       MUST be assumed, meaning that the identifier is valid for as long
<       as the node participates in the network.
---
>    identifier:
>       The short identifier assigned to the pledge, encoded as a byte
>       string.  This parameter MUST be included.  The identifier MUST be
>       unique in the set of all identifiers assigned in a network that is
>       managed by a JRC.  If the identifier is invalid, the decoder MUST
>       silently ignore the Short_Identifier object.
> 
>    lease_time:
>       The validity of the identifier in hours after the reception of the
>       CBOR object, encoded as a CBOR unsigned integer.  This parameter
>       MAY be included.  The node MUST stop using the assigned short
>       identifier after the expiry of the lease_time interval.  It is up
>       to the JRC to renew the lease before the expiry of the previous
>       interval.  The JRC updates the lease by executing the parameter
>       update exchange with the node and including the Short_Identifier
>       in the Configuration object, as described in Section 8.2.  If the
>       lease expires, then the node SHOULD initiate a new join exchange,
>       as described in Section 8.1.  If this parameter is omitted, then
>       the value of positive infinity MUST be assumed, meaning that the
>       identifier is valid for as long as the node participates in the
>       network.
1697,1698c1710,1712
<    code:  Indicates the capability of acting on the parameter signaled
<       by parameter_label, encoded as an integer.  This parameter MUST be
---
>    code:
>       Indicates the capability of acting on the parameter signaled by
>       parameter_label, encoded as an integer.  This parameter MUST be
1708,1726c1722,1741
<    parameter_addinfo:  Additional information about the parameter that
<       cannot be acted upon.  This parameter MUST be included.  If the
<       code is set to "Unsupported", parameter_addinfo gives additional
<       information to the JRC.  If the parameter indicated by
<       parameter_label cannot be acted upon regardless of its value,
<       parameter_addinfo MUST be set to null, signaling to the JRC that
<       it SHOULD NOT attempt to configure the parameter again.  If the
<       pledge can act on the parameter, but cannot configure the setting
<       indicated by the parameter value, the pledge can hint this to the
<       JRC.  In this case, parameter_addinfo MUST be set to the value of
<       the parameter that cannot be acted upon following the normative
<       parameter structure specified in this document.  For example, it
<       is possible to include the link-layer key set object, signaling
<       that either a subset or the entire key set that was received
<       cannot be acted upon.  In that case, the value of
<       parameter_addinfo follows the link-layer key set structure defined
<       in Section 8.4.2.  If the code is set to "Malformed",
<       parameter_addinfo MUST be set to null, signaling to the JRC that
<       it SHOULD NOT attempt to configure the parameter again.
---
>    parameter_addinfo:
>       Additional information about the parameter that cannot be acted
>       upon.  This parameter MUST be included.  If the code is set to
>       "Unsupported", parameter_addinfo gives additional information to
>       the JRC.  If the parameter indicated by parameter_label cannot be
>       acted upon regardless of its value, parameter_addinfo MUST be set
>       to null, signaling to the JRC that it SHOULD NOT attempt to
>       configure the parameter again.  If the pledge can act on the
>       parameter, but cannot configure the setting indicated by the
>       parameter value, the pledge can hint this to the JRC.  In this
>       case, parameter_addinfo MUST be set to the value of the parameter
>       that cannot be acted upon following the normative parameter
>       structure specified in this document.  For example, it is possible
>       to include the link-layer key set object, signaling that either a
>       subset or the entire key set that was received cannot be acted
>       upon.  In that case, the value of parameter_addinfo follows the
>       link-layer key set structure defined in Section 8.4.2.  If the
>       code is set to "Malformed", parameter_addinfo MUST be set to null,
>       signaling to the JRC that it SHOULD NOT attempt to configure the
>       parameter again.
1923,1928c1938,1944
<    Name:  This is a descriptive name that enables an easier reference to
<       the item.  It is not used in the encoding.  The name MUST be
<       unique.
< 
<    Label:  The value to be used to identify this parameter.  The label
<       is an integer.  The label MUST be unique.
---
>    Name:
>       This is a descriptive name that enables an easier reference to the
>       item.  It is not used in the encoding.  The name MUST be unique.
> 
>    Label:
>       The value to be used to identify this parameter.  The label is an
>       integer.  The label MUST be unique.
1932,1936c1948,1954
<    Description:  This field contains a brief description for the field.
<       The description MUST be unique.
< 
<    Reference:  This field contains a pointer to the public specification
<       for the field, if one exists.
---
>    Description:
>       This field contains a brief description for the field.  The
>       description MUST be unique.
> 
>    Reference:
>       This field contains a pointer to the public specification for the
>       field, if one exists.
1956,1973c1974,1995
<    Name:  This is a descriptive name that enables easier reference to
<       the item.  It is not used in the encoding.  The name MUST be
<       unique.
< 
<    Value:  This is the value used to identify the key usage setting.
<       These values MUST be unique.  The value is an integer.
< 
<    Algorithm:  This is a descriptive name of the link-layer algorithm in
<       use and uniquely determines the key length.  The name is not used
<       in the encoding.  The algorithm MUST be unique.
< 
<    Description:  This field contains a description of the key usage
<       setting.  The field should describe in enough detail how the key
<       is to be used with different frame types, specific for the link-
<       layer technology in question.  The description MUST be unique.
< 
<    Reference:  This contains a pointer to the public specification for
<       the field, if one exists.
---
>    Name:
>       This is a descriptive name that enables easier reference to the
>       item.  It is not used in the encoding.  The name MUST be unique.
> 
>    Value:
>       This is the value used to identify the key usage setting.  These
>       values MUST be unique.  The value is an integer.
> 
>    Algorithm:
>       This is a descriptive name of the link-layer algorithm in use and
>       uniquely determines the key length.  The name is not used in the
>       encoding.  The algorithm MUST be unique.
> 
>    Description:
>       This field contains a description of the key usage setting.  The
>       field should describe in enough detail how the key is to be used
>       with different frame types, specific for the link-layer technology
>       in question.  The description MUST be unique.
> 
>    Reference:
>       This contains a pointer to the public specification for the field,
>       if one exists.
1993,1998c2015,2021
<    Name:  This is a descriptive name that enables easier reference to
<       the item.  It is not used in the encoding.  The name MUST be
<       unique.
< 
<    Value:  This is the value used to identify the diagnostic code.
<       These values MUST be unique.  The value is an integer.
---
>    Name:
>       This is a descriptive name that enables easier reference to the
>       item.  It is not used in the encoding.  The name MUST be unique.
> 
>    Value:
>       This is the value used to identify the diagnostic code.  These
>       values MUST be unique.  The value is an integer.
2003,2004c2026,2028
<    Reference:  This contains a pointer to the public specification for
<       the field, if one exists.
---
>    Reference:
>       This contains a pointer to the public specification for the field,
>       if one exists.
2341d2364
< 
2350d2372
< 
2359d2380
< 
2368d2388
< 
