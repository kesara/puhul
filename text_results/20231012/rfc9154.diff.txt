138,156c138,157
<    Strong Random Authorization Information:  The EPP RFCs define the
<        password-based authorization information value using an XML
<        schema "normalizedString" type, so they don't restrict what can
<        be used in any substantial way.  This operational practice
<        defines the recommended mechanism for creating a strong random
<        authorization value that would be generated by the client.
< 
<    Short-Lived Authorization Information:  The EPP RFCs don't explicitly
<        support short-lived authorization information or a TTL for
<        authorization information, but there are EPP RFC features that
<        can be leveraged to support short-lived authorization
<        information.  All of these features are compatible with the EPP
<        RFCs, though not mandatory to implement.  As stated in
<        Section 2.6 of [RFC5731], authorization information is assigned
<        when a domain object is created, which results in long-lived
<        authorization information.  This specification changes the nature
<        of the authorization information from long lived to short lived.
<        If authorization information is set only when a transfer is in
<        process, the server needs to support an empty authorization
---
>    Strong Random Authorization Information:
>        The EPP RFCs define the password-based authorization information
>        value using an XML schema "normalizedString" type, so they don't
>        restrict what can be used in any substantial way.  This
>        operational practice defines the recommended mechanism for
>        creating a strong random authorization value that would be
>        generated by the client.
> 
>    Short-Lived Authorization Information:
>        The EPP RFCs don't explicitly support short-lived authorization
>        information or a TTL for authorization information, but there are
>        EPP RFC features that can be leveraged to support short-lived
>        authorization information.  All of these features are compatible
>        with the EPP RFCs, though not mandatory to implement.  As stated
>        in Section 2.6 of [RFC5731], authorization information is
>        assigned when a domain object is created, which results in long-
>        lived authorization information.  This specification changes the
>        nature of the authorization information from long lived to short
>        lived.  If authorization information is set only when a transfer
>        is in process, the server needs to support an empty authorization
162,172c163,174
<    Storing Authorization Information Securely:  The EPP RFCs don't
<        specify where and how the authorization information is stored in
<        the client or the server, so there are no restrictions on
<        defining an operational practice for storing the authorization
<        information securely.  The operational practice will require the
<        client to not store the authorization information and will
<        require the server to store the authorization information using a
<        cryptographic hash with at least a 256-bit hash function, such as
<        SHA-256 [FIPS-180-4], and with a per-authorization information
<        random salt with at least 128 bits.  Returning the authorization
<        information set in an EPP info response will not be supported.
---
>    Storing Authorization Information Securely:
>        The EPP RFCs don't specify where and how the authorization
>        information is stored in the client or the server, so there are
>        no restrictions on defining an operational practice for storing
>        the authorization information securely.  The operational practice
>        will require the client to not store the authorization
>        information and will require the server to store the
>        authorization information using a cryptographic hash with at
>        least a 256-bit hash function, such as SHA-256 [FIPS-180-4], and
>        with a per-authorization information random salt with at least
>        128 bits.  Returning the authorization information set in an EPP
>        info response will not be supported.
896,911c898,913
<    <Create> Command:  Change the <create> command to make the
<       authorization information optional, by allowing both a non-empty
<       value and an empty value.  This enables a registrar to optionally
<       create objects without an authorization information value, as
<       described in Section 5.1.
< 
<    <Update> Command:  Change the <update> command to allow unsetting the
<       authorization information, as described in Section 5.2.  This
<       enables the registrar to optionally unset the authorization
<       information when the TTL expires or when the transfer is canceled
<       or rejected.
< 
<    Transfer Approve Command and Transfer Auto-Approve:  Change the
<       transfer approve command and the transfer auto-approve to
<       automatically unset the authorization information.  This sets the
<       default state of the object to not have the authorization
---
>    <Create> Command:
>       Change the <create> command to make the authorization information
>       optional, by allowing both a non-empty value and an empty value.
>       This enables a registrar to optionally create objects without an
>       authorization information value, as described in Section 5.1.
> 
>    <Update> Command:
>       Change the <update> command to allow unsetting the authorization
>       information, as described in Section 5.2.  This enables the
>       registrar to optionally unset the authorization information when
>       the TTL expires or when the transfer is canceled or rejected.
> 
>    Transfer Approve Command and Transfer Auto-Approve:
>       Change the transfer approve command and the transfer auto-approve
>       to automatically unset the authorization information.  This sets
>       the default state of the object to not have the authorization
918,932c920,935
<    Info Response:  Change the <info> command to not return the
<       authorization information in the info response, as described in
<       Section 5.3.  This sets up the implementation of "Transition Phase
<       2 - Storage" (Section 6.2), since the dependency on returning the
<       authorization information in the info response will be removed.
<       This feature is the only one that is not an optional change to the
<       registrar, and this change could potentially break the client, so
<       it's recommended that the registry provide notice of the change.
< 
<    <Info> Command and Transfer Request:  Change the <info> command and
<       the transfer request to ensure that a registrar cannot get an
<       indication that the authorization information is set or not set by
<       returning the EPP error result code of 2202 when comparing a
<       passed authorization to a non-matching set authorization
<       information value or an unset value.
---
>    Info Response:
>       Change the <info> command to not return the authorization
>       information in the info response, as described in Section 5.3.
>       This sets up the implementation of "Transition Phase 2 - Storage"
>       (Section 6.2), since the dependency on returning the authorization
>       information in the info response will be removed.  This feature is
>       the only one that is not an optional change to the registrar, and
>       this change could potentially break the client, so it's
>       recommended that the registry provide notice of the change.
> 
>    <Info> Command and Transfer Request:
>       Change the <info> command and the transfer request to ensure that
>       a registrar cannot get an indication that the authorization
>       information is set or not set by returning the EPP error result
>       code of 2202 when comparing a passed authorization to a non-
>       matching set authorization information value or an unset value.
945,947c948,950
<    Hash New Authorization Information Values:  Change the <create>
<       command and the <update> command to hash rather than encrypt the
<       authorization information.
---
>    Hash New Authorization Information Values:
>       Change the <create> command and the <update> command to hash
>       rather than encrypt the authorization information.
950,958c953,962
<    Information:  Change the <info> command and the <transfer> request
<       command to be able to compare a passed authorization information
<       value with either a hashed or encrypted authorization information
<       value.  This requires that the stored values be self-identifying
<       as being in hashed or encrypted form.
< 
<    Hash Existing Encrypted Authorization Information Values:  Convert
<       the encrypted authorization information values stored in the
<       registry database to hashed values.  This update will not be
---
>    Information:
>       Change the <info> command and the <transfer> request command to be
>       able to compare a passed authorization information value with
>       either a hashed or encrypted authorization information value.
>       This requires that the stored values be self-identifying as being
>       in hashed or encrypted form.
> 
>    Hash Existing Encrypted Authorization Information Values:
>       Convert the encrypted authorization information values stored in
>       the registry database to hashed values.  This update will not be
968,976c972,980
<    Disallow Authorization Information on <Create> Command:  Change the
<       <create> command to not allow the passing of a non-empty
<       authorization information value.  This behavior could potentially
<       break the client, so it's recommended that the registry provide
<       notice of this change.
< 
<    Validate the Strong Random Authorization Information:  Change the
<       validation of the authorization information in the <update>
<       command to ensure at least 128 bits of entropy.
---
>    Disallow Authorization Information on <Create> Command:
>       Change the <create> command to not allow the passing of a non-
>       empty authorization information value.  This behavior could
>       potentially break the client, so it's recommended that the
>       registry provide notice of this change.
> 
>    Validate the Strong Random Authorization Information:
>       Change the validation of the authorization information in the
>       <update> command to ensure at least 128 bits of entropy.
998,999c1002,1004
<    Name of Extension:  "Extensible Provisioning Protocol (EPP) Secure
<       Authorization Information for Transfer"
---
>    Name of Extension:
>       "Extensible Provisioning Protocol (EPP) Secure Authorization
>       Information for Transfer"
1131d1135
< 
1141d1144
< 
