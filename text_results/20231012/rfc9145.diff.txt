181,198c181,203
<    SFC data plane element:  Refers to NSH-aware SF, SFF, the SFC Proxy,
<       or the Classifier as defined in the SFC data plane architecture
<       [RFC7665] and further refined in [RFC8300].
< 
<    SFC control element:  Is a logical entity that instructs one or more
<       SFC data plane elements on how to process NSH packets within an
<       SFC-enabled domain.
< 
<    Key Identifier:  Is used to identify keys to authorized entities.
<       See, for example, "kid" usage in [RFC7635].
< 
<    NSH data:  The NSH is composed of a Base Header, a Service Path
<       Header, and optional Context Headers.  NSH data refers to all the
<       above headers and the packet or frame on which the NSH is imposed
<       to realize an SFP.
< 
<    NSH imposer:  Refers to an SFC data plane element that is entitled to
<       impose the NSH with the Context Headers defined in this document.
---
>    SFC data plane element:
>       Refers to NSH-aware SF, SFF, the SFC Proxy, or the Classifier as
>       defined in the SFC data plane architecture [RFC7665] and further
>       refined in [RFC8300].
> 
>    SFC control element:
>       Is a logical entity that instructs one or more SFC data plane
>       elements on how to process NSH packets within an SFC-enabled
>       domain.
> 
>    Key Identifier:
>       Is used to identify keys to authorized entities.  See, for
>       example, "kid" usage in [RFC7635].
> 
>    NSH data:
>       The NSH is composed of a Base Header, a Service Path Header, and
>       optional Context Headers.  NSH data refers to all the above
>       headers and the packet or frame on which the NSH is imposed to
>       realize an SFP.
> 
>    NSH imposer:
>       Refers to an SFC data plane element that is entitled to impose the
>       NSH with the Context Headers defined in this document.
205,206c210,212
<    Base Header:  Provides information about the service header and the
<       payload protocol.
---
>    Base Header:
>       Provides information about the service header and the payload
>       protocol.
431,440c437,448
<    MAC_KEY:  Consists of the initial MAC_KEY_LEN octets of K, in order.
<       The MAC_KEY is used for calculating the message integrity of the
<       NSH data.  In other words, the integrity protection provided by
<       the cryptographic mechanism is extended to also provide protection
<       for the unencrypted Context Headers and the packet on which the
<       NSH is imposed.
< 
<    ENC_KEY:  Consists of the final ENC_KEY_LEN octets of K, in order.
<       The ENC_KEY is used as the symmetric encryption key for encrypting
<       the Context Headers.
---
>    MAC_KEY:
>       Consists of the initial MAC_KEY_LEN octets of K, in order.  The
>       MAC_KEY is used for calculating the message integrity of the NSH
>       data.  In other words, the integrity protection provided by the
>       cryptographic mechanism is extended to also provide protection for
>       the unencrypted Context Headers and the packet on which the NSH is
>       imposed.
> 
>    ENC_KEY:
>       Consists of the final ENC_KEY_LEN octets of K, in order.  The
>       ENC_KEY is used as the symmetric encryption key for encrypting the
>       Context Headers.
675c683,684
<    Length:     Indicates the length of the variable-length metadata in
---
>    Length:   
>                Indicates the length of the variable-length metadata in
679c688,689
<    Key Id Len:  Variable.  Carries the length of the key identifier in
---
>    Key Id Len:
>                Variable.  Carries the length of the key identifier in
682,683c692,694
<    Key Identifier:  Carries a variable-length Key Identifier object used
<                to identify and deliver keys to SFC data plane elements.
---
>    Key Identifier:
>                Carries a variable-length Key Identifier object used to
>                identify and deliver keys to SFC data plane elements.
695,697c706,709
<    Nonce Length:  Carries the length of the Nonce.  If the Context
<                Headers are only integrity protected, "Nonce Length" is
<                set to zero (that is, no "Nonce" is included).
---
>    Nonce Length:
>                Carries the length of the Nonce.  If the Context Headers
>                are only integrity protected, "Nonce Length" is set to
>                zero (that is, no "Nonce" is included).
699c711,712
<    Nonce:      Carries the Nonce for the authenticated encryption
---
>    Nonce:    
>                Carries the Nonce for the authenticated encryption
756c769,770
<    Length:     Indicates the length of the variable-length metadata in
---
>    Length:   
>                Indicates the length of the variable-length metadata in
793,794c807,809
<       Seconds:  Specifies the integer portion of the number of seconds
<          since the epoch.
---
>       Seconds:
>          Specifies the integer portion of the number of seconds since
>          the epoch.
800,801c815,817
<       Fraction:  Specifies the fractional portion of the number of
<          seconds since the epoch.
---
>       Fraction:
>          Specifies the fractional portion of the number of seconds since
>          the epoch.
1356d1371
< 
1366d1380
< 
1373d1386
< 
