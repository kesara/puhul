483,540c483,542
<    Non-MPLS Interfaces:  Although the description in the previous two
<       sections is based on the use of Prefix-SIDs, tunneling SR-MPLS
<       packets is useful when the top label of a received SR-MPLS packet
<       indicates an Adjacency SID and the corresponding adjacent node to
<       that Adjacency SID is not capable of MPLS forwarding but can still
<       process SR-MPLS packets.  In this scenario, the top label would be
<       replaced by an IP tunnel toward that adjacent node and then
<       forwarded over the corresponding link indicated by the Adjacency
<       SID.
< 
<    When to Use IP-Based Tunnels:  The description in the previous two
<       sections is based on the assumption that an MPLS-over-UDP tunnel
<       is used when the next hop towards the next segment is not MPLS
<       enabled.  However, even in the case where the next hop towards the
<       next segment is MPLS capable, an MPLS-over-UDP tunnel towards the
<       next segment could still be used instead due to local policies.
<       For instance, in the example as described in Figure 4, assume F is
<       now a transit node capable of SR-MPLS while all the other
<       assumptions remain unchanged; since F is not identified by a SID
<       in the stack and an MPLS-over-UDP tunnel is preferred to an MPLS
<       LSP according to local policies, router E replaces the current top
<       label with an MPLS-over-UDP tunnel toward router G and sends it
<       out.  (Note that if an MPLS LSP was preferred, the packet would be
<       forwarded as native SR-MPLS.)
< 
<    IP Header Fields:  When encapsulating an MPLS packet in UDP, the
<       resulting packet is further encapsulated in IP for transmission.
<       IPv4 or IPv6 may be used according to the capabilities of the
<       network.  The address fields are set as described in Section 2.
<       The other IP header fields (such as the ECN field [RFC6040], the
<       Differentiated Services Code Point (DSCP) [RFC2983], or IPv6 Flow
<       Label) on each UDP-encapsulated segment SHOULD be configurable
<       according to the operator's policy; they may be copied from the
<       header of the incoming packet; they may be promoted from the
<       header of the payload packet; they may be set according to
<       instructions programmed to be associated with the SID; or they may
<       be configured dependent on the outgoing interface and payload.
<       The TTL field setting in the encapsulating packet header is
<       handled as described in [RFC7510], which refers to [RFC4023].
< 
<    Entropy and ECMP:  When encapsulating an MPLS packet with an IP
<       tunnel header that is capable of encoding entropy (such as
<       [RFC7510]), the corresponding entropy field (the source port in
<       the case of a UDP tunnel) MAY be filled with an entropy value that
<       is generated by the encapsulator to uniquely identify a flow.
<       However, what constitutes a flow is locally determined by the
<       encapsulator.  For instance, if the MPLS label stack contains at
<       least one entropy label and the encapsulator is capable of reading
<       that entropy label, the entropy label value could be directly
<       copied to the source port of the UDP header.  Otherwise, the
<       encapsulator may have to perform a hash on the whole label stack
<       or the five-tuple of the SR-MPLS payload if the payload is
<       determined as an IP packet.  To avoid recalculating the hash or
<       hunting for the entropy label each time the packet is encapsulated
<       in a UDP tunnel, it MAY be desirable that the entropy value
<       contained in the incoming packet (i.e., the UDP source port value)
<       is retained when stripping the UDP header and is reused as the
<       entropy value of the outgoing packet.
---
>    Non-MPLS Interfaces:
>       Although the description in the previous two sections is based on
>       the use of Prefix-SIDs, tunneling SR-MPLS packets is useful when
>       the top label of a received SR-MPLS packet indicates an Adjacency
>       SID and the corresponding adjacent node to that Adjacency SID is
>       not capable of MPLS forwarding but can still process SR-MPLS
>       packets.  In this scenario, the top label would be replaced by an
>       IP tunnel toward that adjacent node and then forwarded over the
>       corresponding link indicated by the Adjacency SID.
> 
>    When to Use IP-Based Tunnels:
>       The description in the previous two sections is based on the
>       assumption that an MPLS-over-UDP tunnel is used when the next hop
>       towards the next segment is not MPLS enabled.  However, even in
>       the case where the next hop towards the next segment is MPLS
>       capable, an MPLS-over-UDP tunnel towards the next segment could
>       still be used instead due to local policies.  For instance, in the
>       example as described in Figure 4, assume F is now a transit node
>       capable of SR-MPLS while all the other assumptions remain
>       unchanged; since F is not identified by a SID in the stack and an
>       MPLS-over-UDP tunnel is preferred to an MPLS LSP according to
>       local policies, router E replaces the current top label with an
>       MPLS-over-UDP tunnel toward router G and sends it out.  (Note that
>       if an MPLS LSP was preferred, the packet would be forwarded as
>       native SR-MPLS.)
> 
>    IP Header Fields:
>       When encapsulating an MPLS packet in UDP, the resulting packet is
>       further encapsulated in IP for transmission.  IPv4 or IPv6 may be
>       used according to the capabilities of the network.  The address
>       fields are set as described in Section 2.  The other IP header
>       fields (such as the ECN field [RFC6040], the Differentiated
>       Services Code Point (DSCP) [RFC2983], or IPv6 Flow Label) on each
>       UDP-encapsulated segment SHOULD be configurable according to the
>       operator's policy; they may be copied from the header of the
>       incoming packet; they may be promoted from the header of the
>       payload packet; they may be set according to instructions
>       programmed to be associated with the SID; or they may be
>       configured dependent on the outgoing interface and payload.  The
>       TTL field setting in the encapsulating packet header is handled as
>       described in [RFC7510], which refers to [RFC4023].
> 
>    Entropy and ECMP:
>       When encapsulating an MPLS packet with an IP tunnel header that is
>       capable of encoding entropy (such as [RFC7510]), the corresponding
>       entropy field (the source port in the case of a UDP tunnel) MAY be
>       filled with an entropy value that is generated by the encapsulator
>       to uniquely identify a flow.  However, what constitutes a flow is
>       locally determined by the encapsulator.  For instance, if the MPLS
>       label stack contains at least one entropy label and the
>       encapsulator is capable of reading that entropy label, the entropy
>       label value could be directly copied to the source port of the UDP
>       header.  Otherwise, the encapsulator may have to perform a hash on
>       the whole label stack or the five-tuple of the SR-MPLS payload if
>       the payload is determined as an IP packet.  To avoid recalculating
>       the hash or hunting for the entropy label each time the packet is
>       encapsulated in a UDP tunnel, it MAY be desirable that the entropy
>       value contained in the incoming packet (i.e., the UDP source port
>       value) is retained when stripping the UDP header and is reused as
>       the entropy value of the outgoing packet.
808d809
< 
814d814
< 
820d819
< 
826d824
< 
832d829
< 
838d834
< 
