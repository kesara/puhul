197,198c197,199
<    Map-Server:  A network infrastructure component that learns of EID-
<       Prefix mapping entries from an ETR, via the registration mechanism
---
>    Map-Server:
>       A network infrastructure component that learns of EID-Prefix
>       mapping entries from an ETR, via the registration mechanism
202,204c203,206
<    Map-Request:  A control plane message that queries the Mapping System
<       to resolve an EID.  A LISP Map-Request can also be sent to an RLOC
<       to test for reachability and to exchange security keys between an
---
>    Map-Request:
>       A control plane message that queries the Mapping System to resolve
>       an EID.  A LISP Map-Request can also be sent to an RLOC to test
>       for reachability and to exchange security keys between an
208,248c210,253
<    Map-Reply:  A control plane message returned in response to a Map-
<       Request sent to the Mapping System when resolving an EID.  A LISP
<       Map-Reply can also be returned by a decapsulator in response to a
<       Map-Request sent by an encapsulator to test for reachability.
<       This type of Map-Reply is known as an RLOC-Probe Reply.
< 
<    Encapsulated Map-Request:  A LISP Map-Request carried within an ECM.
<       This Map-Request has an additional LISP header prepended.  Sent to
<       UDP destination port 4342.  The "outer" addresses are routable IP
<       addresses, also known as RLOCs.  Used by an ITR when sending to a
<       Map-Resolver and by a Map-Server when forwarding a Map-Request to
<       an ETR.
< 
<    Map-Resolver:  A network infrastructure component that accepts LISP
<       Encapsulated (ECM) Map-Requests, typically from an ITR, and
<       determines whether or not the destination IP address is part of
<       the EID namespace; if it is not, a Negative Map-Reply is returned.
<       Otherwise, the Map-Resolver finds the appropriate EID-to-RLOC
<       mapping by consulting a mapping database system.
< 
<    Negative Map-Reply:  A LISP Map-Reply that contains an empty Locator-
<       Set.  Returned in response to a Map-Request if the destination EID
<       is not registered in the Mapping System, is policy-denied, or
<       fails authentication.
< 
<    Map-Register message:  A LISP message sent by an ETR to a Map-Server
<       to register its associated EID-Prefixes.  In addition to the set
<       of EID-Prefixes to register, the message includes one or more
<       RLOCs to reach ETR(s).  The Map-Server uses these RLOCs when
<       forwarding Map-Requests (reformatted as Encapsulated Map-
<       Requests).  An ETR MAY request that the Map-Server answer Map-
<       Requests on its behalf by setting the "proxy Map-Reply" flag
<       (P-bit) in the message.
< 
<    Map-Notify message:  A LISP message sent by a Map-Server to an ETR to
<       confirm that a Map-Register has been received and processed.  An
<       ETR requests that a Map-Notify be returned by setting the "want-
<       map-notify" flag (M-bit) in the Map-Register message.  Unlike a
<       Map-Reply, a Map-Notify uses UDP port 4342 for both source and
<       destination.  Map-Notify messages are also sent to ITRs by Map-
<       Servers when there are RLOC-Set changes.
---
>    Map-Reply:
>       A control plane message returned in response to a Map-Request sent
>       to the Mapping System when resolving an EID.  A LISP Map-Reply can
>       also be returned by a decapsulator in response to a Map-Request
>       sent by an encapsulator to test for reachability.  This type of
>       Map-Reply is known as an RLOC-Probe Reply.
> 
>    Encapsulated Map-Request:
>       A LISP Map-Request carried within an ECM.  This Map-Request has an
>       additional LISP header prepended.  Sent to UDP destination port
>       4342.  The "outer" addresses are routable IP addresses, also known
>       as RLOCs.  Used by an ITR when sending to a Map-Resolver and by a
>       Map-Server when forwarding a Map-Request to an ETR.
> 
>    Map-Resolver:
>       A network infrastructure component that accepts LISP Encapsulated
>       (ECM) Map-Requests, typically from an ITR, and determines whether
>       or not the destination IP address is part of the EID namespace; if
>       it is not, a Negative Map-Reply is returned.  Otherwise, the Map-
>       Resolver finds the appropriate EID-to-RLOC mapping by consulting a
>       mapping database system.
> 
>    Negative Map-Reply:
>       A LISP Map-Reply that contains an empty Locator-Set.  Returned in
>       response to a Map-Request if the destination EID is not registered
>       in the Mapping System, is policy-denied, or fails authentication.
> 
>    Map-Register message:
>       A LISP message sent by an ETR to a Map-Server to register its
>       associated EID-Prefixes.  In addition to the set of EID-Prefixes
>       to register, the message includes one or more RLOCs to reach
>       ETR(s).  The Map-Server uses these RLOCs when forwarding Map-
>       Requests (reformatted as Encapsulated Map-Requests).  An ETR MAY
>       request that the Map-Server answer Map-Requests on its behalf by
>       setting the "proxy Map-Reply" flag (P-bit) in the message.
> 
>    Map-Notify message:
>       A LISP message sent by a Map-Server to an ETR to confirm that a
>       Map-Register has been received and processed.  An ETR requests
>       that a Map-Notify be returned by setting the "want-map-notify"
>       flag (M-bit) in the Map-Register message.  Unlike a Map-Reply, a
>       Map-Notify uses UDP port 4342 for both source and destination.
>       Map-Notify messages are also sent to ITRs by Map-Servers when
>       there are RLOC-Set changes.
474c479,480
<    A:  This is an authoritative bit.  It is set to 1 when an ITR wants
---
>    A:
>       This is an authoritative bit.  It is set to 1 when an ITR wants
479c485,486
<    M:  This is the map-data-present bit.  When set, it indicates that a
---
>    M:
>       This is the map-data-present bit.  When set, it indicates that a
495c502,503
<    p:  This is the Proxy Ingress Tunnel Router (PITR) bit.  This bit is
---
>    p:
>       This is the Proxy Ingress Tunnel Router (PITR) bit.  This bit is
499c507,508
<    s:  This is the SMR-invoked bit.  This bit is set to 1 when an xTR is
---
>    s:
>       This is the SMR-invoked bit.  This bit is set to 1 when an xTR is
509,511c518,521
<    L:  This is the local-xtr bit.  It is used by an xTR in a LISP site
<       to tell other xTRs in the same site that it is part of the RLOC-
<       Set for the LISP site.  The L-bit is set to 1 when the RLOC is the
---
>    L:
>       This is the local-xtr bit.  It is used by an xTR in a LISP site to
>       tell other xTRs in the same site that it is part of the RLOC-Set
>       for the LISP site.  The L-bit is set to 1 when the RLOC is the
514c524,525
<    D:  This is the dont-map-reply bit.  It is used in the SMR procedure
---
>    D:
>       This is the dont-map-reply bit.  It is used in the SMR procedure
519c530,531
<    IRC:  This 5-bit field is the ITR-RLOC Count, which encodes the
---
>    IRC:
>       This 5-bit field is the ITR-RLOC Count, which encodes the
529,558c541,573
<    Record Count:  This is the number of records in this Map-Request
<       message.  A record is comprised of the portion of the packet that
<       is labeled 'Rec' above and occurs the number of times equal to
<       Record Count.  For this version of the protocol, a receiver MUST
<       accept and process Map-Requests that contain one or more records,
<       but a sender MUST only send Map-Requests containing one record.
< 
<    Nonce:  This is an 8-octet random value created by the sender of the
<       Map-Request.  This nonce will be returned in the Map-Reply.  The
<       nonce is used as an index to identify the corresponding Map-
<       Request when a Map-Reply message is received.  The nonce MUST be
<       generated by a properly seeded pseudo-random source; for example,
<       see [RFC4086].
< 
<    Source-EID-AFI:  This is the address family of the 'Source EID
<       Address' field.
< 
<    Source EID Address:  This is the EID of the source host that
<       originated the packet that caused the Map-Request.  When Map-
<       Requests are used for refreshing a Map-Cache entry or for RLOC-
<       Probing, an AFI value of 0 is used, and this field is of zero
<       length.
< 
<    ITR-RLOC-AFI:  This is the address family of the 'ITR-RLOC Address'
<       field that follows this field.
< 
<    ITR-RLOC Address:  This is used to give the ETR the option of
<       selecting the destination address from any address family for the
<       Map-Reply message.  This address MUST be a routable RLOC address
<       of the sender of the Map-Request message.
---
>    Record Count:
>       This is the number of records in this Map-Request message.  A
>       record is comprised of the portion of the packet that is labeled
>       'Rec' above and occurs the number of times equal to Record Count.
>       For this version of the protocol, a receiver MUST accept and
>       process Map-Requests that contain one or more records, but a
>       sender MUST only send Map-Requests containing one record.
> 
>    Nonce:
>       This is an 8-octet random value created by the sender of the Map-
>       Request.  This nonce will be returned in the Map-Reply.  The nonce
>       is used as an index to identify the corresponding Map-Request when
>       a Map-Reply message is received.  The nonce MUST be generated by a
>       properly seeded pseudo-random source; for example, see [RFC4086].
> 
>    Source-EID-AFI:
>       This is the address family of the 'Source EID Address' field.
> 
>    Source EID Address:
>       This is the EID of the source host that originated the packet that
>       caused the Map-Request.  When Map-Requests are used for refreshing
>       a Map-Cache entry or for RLOC-Probing, an AFI value of 0 is used,
>       and this field is of zero length.
> 
>    ITR-RLOC-AFI:
>       This is the address family of the 'ITR-RLOC Address' field that
>       follows this field.
> 
>    ITR-RLOC Address:
>       This is used to give the ETR the option of selecting the
>       destination address from any address family for the Map-Reply
>       message.  This address MUST be a routable RLOC address of the
>       sender of the Map-Request message.
565,584c580,600
<    EID-Prefix:  This prefix address length is 4 octets for an IPv4
<       address family and 16 octets for an IPv6 address family when the
<       EID-Prefix-AFI is 1 or 2, respectively.  For other AFIs [AFN], the
<       address length varies, and for the LCAF AFI, the format is defined
<       in [RFC8060].  When a Map-Request is sent by an ITR because a data
<       packet is received for a destination where there is no mapping
<       entry, the EID-Prefix is set to the destination IP address of the
<       data packet, and the 'EID mask-len' field is set to 32 or 128 for
<       IPv4 or IPv6, respectively.  When an xTR wants to query a site
<       about the status of a mapping it already has cached, the EID-
<       Prefix used in the Map-Request has the same mask length as the
<       EID-Prefix returned from the site when it sent a Map-Reply
<       message.
< 
<    Map-Reply Record:  When the M-bit is set, this field is the size of a
<       single "Record" in the Map-Reply format.  This Map-Reply record
<       contains the EID-to-RLOC mapping entry associated with the source
<       EID.  This allows the ETR that will receive this Map-Request to
<       cache the data if it chooses to do so.  It is important to note
<       that this mapping has not been validated by the Mapping System.
---
>    EID-Prefix:
>       This prefix address length is 4 octets for an IPv4 address family
>       and 16 octets for an IPv6 address family when the EID-Prefix-AFI
>       is 1 or 2, respectively.  For other AFIs [AFN], the address length
>       varies, and for the LCAF AFI, the format is defined in [RFC8060].
>       When a Map-Request is sent by an ITR because a data packet is
>       received for a destination where there is no mapping entry, the
>       EID-Prefix is set to the destination IP address of the data
>       packet, and the 'EID mask-len' field is set to 32 or 128 for IPv4
>       or IPv6, respectively.  When an xTR wants to query a site about
>       the status of a mapping it already has cached, the EID-Prefix used
>       in the Map-Request has the same mask length as the EID-Prefix
>       returned from the site when it sent a Map-Reply message.
> 
>    Map-Reply Record:
>       When the M-bit is set, this field is the size of a single "Record"
>       in the Map-Reply format.  This Map-Reply record contains the EID-
>       to-RLOC mapping entry associated with the source EID.  This allows
>       the ETR that will receive this Map-Request to cache the data if it
>       chooses to do so.  It is important to note that this mapping has
>       not been validated by the Mapping System.
662c678,679
<    P:  This is the probe-bit, which indicates that the Map-Reply is in
---
>    P:
>       This is the probe-bit, which indicates that the Map-Reply is in
670c687,688
<    E:  This bit indicates that the ETR that sends this Map-Reply message
---
>    E:
>       This bit indicates that the ETR that sends this Map-Reply message
675c693,694
<    S:  This is the Security bit.  When set to 1, the following
---
>    S:
>       This is the Security bit.  When set to 1, the following
688,705c707,728
<    Record Count:  This is the number of records in this reply message.
<       A record is comprised of that portion of the packet labeled
<       'Record' above and occurs the number of times equal to Record
<       Count.  Note that the reply count can be larger than the requested
<       count, for instance, when more-specific prefixes are present.
< 
<    Nonce:  This 64-bit value from the Map-Request is echoed in this
<       'Nonce' field of the Map-Reply.
< 
<    Record TTL:  This is the time in minutes the recipient of the Map-
<       Reply can store the mapping.  If the TTL is 0, the entry MUST be
<       removed from the cache immediately.  If the value is 0xffffffff,
<       the recipient can decide locally how long to store the mapping.
< 
<    Locator Count:  This is the number of Locator entries in the given
<       Record.  A Locator entry comprises what is labeled above as 'Loc'.
<       The Locator count can be 0, indicating that there are no Locators
<       for the EID-Prefix.
---
>    Record Count:
>       This is the number of records in this reply message.  A record is
>       comprised of that portion of the packet labeled 'Record' above and
>       occurs the number of times equal to Record Count.  Note that the
>       reply count can be larger than the requested count, for instance,
>       when more-specific prefixes are present.
> 
>    Nonce:
>       This 64-bit value from the Map-Request is echoed in this 'Nonce'
>       field of the Map-Reply.
> 
>    Record TTL:
>       This is the time in minutes the recipient of the Map-Reply can
>       store the mapping.  If the TTL is 0, the entry MUST be removed
>       from the cache immediately.  If the value is 0xffffffff, the
>       recipient can decide locally how long to store the mapping.
> 
>    Locator Count:
>       This is the number of Locator entries in the given Record.  A
>       Locator entry comprises what is labeled above as 'Loc'.  The
>       Locator count can be 0, indicating that there are no Locators for
>       the EID-Prefix.
717,725c740,760
<       (0) No-Action:  The Map-Cache is kept alive, and no packet
<           encapsulation occurs.
< 
<       (1) Natively-Forward:  The packet is not encapsulated or dropped
<           but natively forwarded.
< 
<       (2) Send-Map-Request:  The Map-Cache entry is created and flagged
<           so that any packet matching this entry invokes sending a Map-
<           Request.
---
>       (0) No-Action:
>           The Map-Cache is kept alive, and no packet encapsulation
>           occurs.
> 
>       (1) Natively-Forward:
>           The packet is not encapsulated or dropped but natively
>           forwarded.
> 
>       (2) Send-Map-Request:
>           The Map-Cache entry is created and flagged so that any packet
>           matching this entry invokes sending a Map-Request.
> 
>       (3) Drop/No-Reason:
>           A packet that matches this Map-Cache entry is dropped.  An
>           ICMP Destination Unreachable message SHOULD be sent.
> 
>       (4) Drop/Policy-Denied:
>           A packet that matches this Map-Cache entry is dropped.  The
>           reason for the Drop action is that a Map-Request for the
>           target EID is being policy-denied by either an xTR or the
>           Mapping System.
727,733c762,765
<       (3) Drop/No-Reason:  A packet that matches this Map-Cache entry is
<           dropped.  An ICMP Destination Unreachable message SHOULD be
<           sent.
< 
<       (4) Drop/Policy-Denied:  A packet that matches this Map-Cache
<           entry is dropped.  The reason for the Drop action is that a
<           Map-Request for the target EID is being policy-denied by
---
>       (5) Drop/Auth-Failure:
>           A packet that matches this Map-Cache entry is dropped.  The
>           reason for the Drop action is that a Map-Request for the
>           target EID fails an authentication verification check by
736,740d767
<       (5) Drop/Auth-Failure:  A packet that matches this Map-Cache entry
<           is dropped.  The reason for the Drop action is that a Map-
<           Request for the target EID fails an authentication
<           verification check by either an xTR or the Mapping System.
< 
747,748c774,776
<    Map-Version Number:  When this 12-bit value in an EID-Record of a
<       Map-Reply message is non-zero, see [RFC9302] for details.
---
>    Map-Version Number:
>       When this 12-bit value in an EID-Record of a Map-Reply message is
>       non-zero, see [RFC9302] for details.
753,754c781,789
<    EID-Prefix:  This prefix is 4 octets for an IPv4 address family and
<       16 octets for an IPv6 address family.
---
>    EID-Prefix:
>       This prefix is 4 octets for an IPv4 address family and 16 octets
>       for an IPv6 address family.
> 
>    Priority:
>       Each RLOC is assigned a unicast Priority.  Lower values are
>       preferable.  When multiple RLOCs have the same Priority, they may
>       be used in a load-split fashion.  A value of 255 means the RLOC
>       MUST NOT be used for unicast forwarding.
756,761c791,792
<    Priority:  Each RLOC is assigned a unicast Priority.  Lower values
<       are preferable.  When multiple RLOCs have the same Priority, they
<       may be used in a load-split fashion.  A value of 255 means the
<       RLOC MUST NOT be used for unicast forwarding.
< 
<    Weight:  When priorities are the same for multiple RLOCs, the Weight
---
>    Weight:
>       When priorities are the same for multiple RLOCs, the Weight
775,778c806,810
<    M Priority:  Each RLOC is assigned a multicast Priority used by an
<       ETR in a receiver multicast site to select an ITR in a source
<       multicast site for building multicast distribution trees.  A value
<       of 255 means the RLOC MUST NOT be used for joining a multicast
---
>    M Priority:
>       Each RLOC is assigned a multicast Priority used by an ETR in a
>       receiver multicast site to select an ITR in a source multicast
>       site for building multicast distribution trees.  A value of 255
>       means the RLOC MUST NOT be used for joining a multicast
781,788c813,821
<    M Weight:  When priorities are the same for multiple RLOCs, the
<       Weight indicates how to balance building multicast distribution
<       trees across multiple ITRs.  The Weight is encoded as a relative
<       weight (similar to the unicast Weights) of the total number of
<       trees built to the source site identified by the EID-Prefix.  If
<       all Weights for a Locator-Set are equal, the receiver of the Map-
<       Reply will decide how to distribute multicast state across ITRs.
<       For more details, see [RFC6831].
---
>    M Weight:
>       When priorities are the same for multiple RLOCs, the Weight
>       indicates how to balance building multicast distribution trees
>       across multiple ITRs.  The Weight is encoded as a relative weight
>       (similar to the unicast Weights) of the total number of trees
>       built to the source site identified by the EID-Prefix.  If all
>       Weights for a Locator-Set are equal, the receiver of the Map-Reply
>       will decide how to distribute multicast state across ITRs.  For
>       more details, see [RFC6831].
793,808c826,842
<    L:  When this bit is set, the Locator is flagged as a local Locator
<       to the ETR that is sending the Map-Reply.  When a Map-Server is
<       doing proxy Map-Replying for a LISP site, the L-bit is set to 0
<       for all Locators in this Locator-Set.
< 
<    p:  When this bit is set, an ETR informs the RLOC-Probing ITR that
<       the Routing Locator Address for which this bit is set is the one
<       being RLOC-Probed and may be different from the source address of
<       the Map-Reply.  An ITR that RLOC-Probes a particular Locator MUST
<       use this Locator for retrieving the data structure used to store
<       the fact that the Locator is reachable.  The p-bit is set for a
<       single Locator in the same Locator-Set.  If an implementation sets
<       more than one p-bit erroneously, the receiver of the Map-Reply
<       MUST select the first set p-bit Locator.  The p-bit MUST NOT be
<       set for Locator-Set records sent in Map-Request and Map-Register
<       messages.
---
>    L:
>       When this bit is set, the Locator is flagged as a local Locator to
>       the ETR that is sending the Map-Reply.  When a Map-Server is doing
>       proxy Map-Replying for a LISP site, the L-bit is set to 0 for all
>       Locators in this Locator-Set.
> 
>    p:
>       When this bit is set, an ETR informs the RLOC-Probing ITR that the
>       Routing Locator Address for which this bit is set is the one being
>       RLOC-Probed and may be different from the source address of the
>       Map-Reply.  An ITR that RLOC-Probes a particular Locator MUST use
>       this Locator for retrieving the data structure used to store the
>       fact that the Locator is reachable.  The p-bit is set for a single
>       Locator in the same Locator-Set.  If an implementation sets more
>       than one p-bit erroneously, the receiver of the Map-Reply MUST
>       select the first set p-bit Locator.  The p-bit MUST NOT be set for
>       Locator-Set records sent in Map-Request and Map-Register messages.
810c844,845
<    R:  This is set when the sender of a Map-Reply has a route to the
---
>    R:
>       This is set when the sender of a Map-Reply has a route to the
815,821c850,857
<    Locator:  This is an IPv4 or IPv6 address (as encoded by the 'Loc-
<       AFI' field) assigned to an ETR and used by an ITR as a destination
<       RLOC address in the outer header of a LISP encapsulated packet.
<       Note that the destination RLOC address of a LISP encapsulated
<       packet MAY be an anycast address.  A source RLOC of a LISP
<       encapsulated packet can be an anycast address as well.  The source
<       or destination RLOC MUST NOT be the broadcast address
---
>    Locator:
>       This is an IPv4 or IPv6 address (as encoded by the 'Loc-AFI'
>       field) assigned to an ETR and used by an ITR as a destination RLOC
>       address in the outer header of a LISP encapsulated packet.  Note
>       that the destination RLOC address of a LISP encapsulated packet
>       MAY be an anycast address.  A source RLOC of a LISP encapsulated
>       packet can be an anycast address as well.  The source or
>       destination RLOC MUST NOT be the broadcast address
973c1009,1010
<    P:  This is the proxy Map-Reply bit.  When set to 1, the ETR sending
---
>    P:
>       This is the proxy Map-Reply bit.  When set to 1, the ETR sending
978c1015,1016
<    S:  This is the security-capable bit.  When set, the procedures from
---
>    S:
>       This is the security-capable bit.  When set, the procedures from
981,988c1019,1026
<    I:  This is the ID-present bit.  This bit is set to 1 to indicate
<       that a 128-bit 'xTR-ID' field and a 64-bit 'Site-ID' field are
<       present at the end of the Map-Register message.  If an xTR is
<       configured with an xTR-ID and Site-ID, it MUST set the I-bit to 1
<       and include its xTR-ID and Site-ID in the Map-Register messages it
<       generates.  The combination of Site-ID plus xTR-ID uniquely
<       identifies an xTR in a LISP domain and serves to track its last
<       seen nonce.
---
>    I:
>       This is the ID-present bit.  This bit is set to 1 to indicate that
>       a 128-bit 'xTR-ID' field and a 64-bit 'Site-ID' field are present
>       at the end of the Map-Register message.  If an xTR is configured
>       with an xTR-ID and Site-ID, it MUST set the I-bit to 1 and include
>       its xTR-ID and Site-ID in the Map-Register messages it generates.
>       The combination of Site-ID plus xTR-ID uniquely identifies an xTR
>       in a LISP domain and serves to track its last seen nonce.
993,1003c1031,1042
<    E:  This is the Map-Register EID-notify bit.  This is used by a
<       First-Hop Router that discovers a dynamic EID.  This EID-notify-
<       based Map-Register is sent by the First-Hop Router to a same site
<       xTR that propagates the Map-Register to the Mapping System.  The
<       site xTR keeps state to later Map-Notify the First-Hop Router
<       after the EID has moved away.  See [EID-MOBILITY] for a detailed
<       use case.
< 
<    T:  This is the use TTL for timeout bit.  When set to 1, the xTR
<       wants the Map-Server to time out registrations based on the value
<       in the 'Record TTL' field of this message.  Otherwise, the default
---
>    E:
>       This is the Map-Register EID-notify bit.  This is used by a First-
>       Hop Router that discovers a dynamic EID.  This EID-notify-based
>       Map-Register is sent by the First-Hop Router to a same site xTR
>       that propagates the Map-Register to the Mapping System.  The site
>       xTR keeps state to later Map-Notify the First-Hop Router after the
>       EID has moved away.  See [EID-MOBILITY] for a detailed use case.
> 
>    T:
>       This is the use TTL for timeout bit.  When set to 1, the xTR wants
>       the Map-Server to time out registrations based on the value in the
>       'Record TTL' field of this message.  Otherwise, the default
1006,1008c1045,1048
<    a:  This is the merge-request bit.  When set to 1, the xTR requests
<       to merge RLOC-Records from different xTRs registering the same
<       EID-Record.  See Signal-Free Multicast [RFC8378] for one use-case
---
>    a:
>       This is the merge-request bit.  When set to 1, the xTR requests to
>       merge RLOC-Records from different xTRs registering the same EID-
>       Record.  See Signal-Free Multicast [RFC8378] for one use-case
1014c1054,1055
<    M:  This is the want-map-notify bit.  When set to 1, an ETR is
---
>    M:
>       This is the want-map-notify bit.  When set to 1, an ETR is
1020,1029c1061,1071
<    Record Count:  This is the number of records in this Map-Register
<       message.  A record is comprised of that portion of the packet
<       labeled 'Record' above and occurs the number of times equal to
<       Record Count.
< 
<    Nonce:  This 8-octet 'Nonce' field is incremented each time a Map-
<       Register message is sent.  When a Map-Register acknowledgment is
<       requested, the nonce is returned by Map-Servers in Map-Notify
<       messages.  Since the entire Map-Register message is authenticated,
<       the 'Nonce' field serves to protect against Map-Register replay
---
>    Record Count:
>       This is the number of records in this Map-Register message.  A
>       record is comprised of that portion of the packet labeled 'Record'
>       above and occurs the number of times equal to Record Count.
> 
>    Nonce:
>       This 8-octet 'Nonce' field is incremented each time a Map-Register
>       message is sent.  When a Map-Register acknowledgment is requested,
>       the nonce is returned by Map-Servers in Map-Notify messages.
>       Since the entire Map-Register message is authenticated, the
>       'Nonce' field serves to protect against Map-Register replay
1041,1058c1083,1103
<    Key ID:  This is a key-id value that identifies a pre-shared secret
<       between an ETR and a Map-Server.  Per-message keys are derived
<       from the pre-shared secret to authenticate the origin and protect
<       the integrity of the Map-Register.  The Key ID allows rotating
<       between multiple pre-shared secrets in a nondisruptive way.  The
<       pre-shared secret MUST be unique per each LISP Site-ID.
< 
<    Algorithm ID:  This field identifies the Key Derivation Function
<       (KDF) and Message Authentication Code (MAC) algorithms used to
<       derive the key and to compute the Authentication Data of a Map-
<       Register.  This 8-bit field identifies the KDF and MAC algorithm
<       pair.  See Section 12.5 for codepoint assignments.
< 
<    Authentication Data Length:  This is the length in octets of the
<       'Authentication Data' field that follows this field.  The length
<       of the 'Authentication Data' field is dependent on the MAC
<       algorithm used.  The length field allows a device that doesn't
<       know the MAC algorithm to correctly parse the packet.
---
>    Key ID:
>       This is a key-id value that identifies a pre-shared secret between
>       an ETR and a Map-Server.  Per-message keys are derived from the
>       pre-shared secret to authenticate the origin and protect the
>       integrity of the Map-Register.  The Key ID allows rotating between
>       multiple pre-shared secrets in a nondisruptive way.  The pre-
>       shared secret MUST be unique per each LISP Site-ID.
> 
>    Algorithm ID:
>       This field identifies the Key Derivation Function (KDF) and
>       Message Authentication Code (MAC) algorithms used to derive the
>       key and to compute the Authentication Data of a Map-Register.
>       This 8-bit field identifies the KDF and MAC algorithm pair.  See
>       Section 12.5 for codepoint assignments.
> 
>    Authentication Data Length:
>       This is the length in octets of the 'Authentication Data' field
>       that follows this field.  The length of the 'Authentication Data'
>       field is dependent on the MAC algorithm used.  The length field
>       allows a device that doesn't know the MAC algorithm to correctly
>       parse the packet.
1100c1145,1146
<    xTR-ID:  'xTR-ID' is a 128-bit field at the end of the Map-Register
---
>    xTR-ID:
>       'xTR-ID' is a 128-bit field at the end of the Map-Register
1106c1152,1153
<    Site-ID:  'Site-ID' is a 64-bit field at the end of the Map-Register
---
>    Site-ID:
>       'Site-ID' is a 64-bit field at the end of the Map-Register
1237c1284,1285
<    OH:   This is the outer IPv4 or IPv6 header, which uses RLOC
---
>    OH: 
>          This is the outer IPv4 or IPv6 header, which uses RLOC
1240c1288,1289
<    UDP:  This is the outer UDP header with destination port 4342.  The
---
>    UDP:
>          This is the outer UDP header with destination port 4342.  The
1244c1293,1294
<    LISP:  Type 8 is defined to be a "LISP Encapsulated Control Message",
---
>    LISP:
>          Type 8 is defined to be a "LISP Encapsulated Control Message",
1252c1302,1303
<    S:    This is the Security bit.  When set to 1, the field following
---
>    S:  
>          This is the Security bit.  When set to 1, the field following
1262c1313,1314
<    D:    This is the DDT-bit.  When set to 1, the sender is requesting a
---
>    D:  
>          This is the DDT-bit.  When set to 1, the sender is requesting a
1269c1321,1322
<    IH:   This is the inner IPv4 or IPv6 header, which can use either
---
>    IH: 
>          This is the inner IPv4 or IPv6 header, which can use either
1274c1327,1328
<    UDP:  This is the inner UDP header, where the port assignments depend
---
>    UDP:
>          This is the inner UDP header, where the port assignments depend
1283c1337,1338
<    LCM:  The format is one of the control message formats described in
---
>    LCM:
>          The format is one of the control message formats described in
