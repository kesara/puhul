189,202c189,210
<    Layer 3 VPN Service Model (L3SM):  A YANG data model that describes
<       the service requirements of an L3VPN that interconnects a set of
<       sites from the point of view of the customer.  The customer
<       service model does not provide details on the service provider
<       network.  The L3VPN customer service model is defined in
<       [RFC8299].
< 
<    Layer 3 VPN Network Model (L3NM):  A YANG data model that describes a
<       VPN service in the service provider network.  It contains
<       information on the service provider network and might include
<       allocated resources.  It can be used by network controllers to
<       manage and control the VPN service configuration in the service
<       provider network.  The corresponding YANG module can be used by a
<       service orchestrator to request a VPN service to a network
---
>    Layer 3 VPN Service Model (L3SM):
>       A YANG data model that describes the service requirements of an
>       L3VPN that interconnects a set of sites from the point of view of
>       the customer.  The customer service model does not provide details
>       on the service provider network.  The L3VPN customer service model
>       is defined in [RFC8299].
> 
>    Layer 3 VPN Network Model (L3NM):
>       A YANG data model that describes a VPN service in the service
>       provider network.  It contains information on the service provider
>       network and might include allocated resources.  It can be used by
>       network controllers to manage and control the VPN service
>       configuration in the service provider network.  The corresponding
>       YANG module can be used by a service orchestrator to request a VPN
>       service to a network controller.
> 
>    Service orchestrator:
>       A functional entity that interacts with the customer of an L3VPN.
>       The service orchestrator interacts with the customer using the
>       L3SM.  The service orchestrator is responsible for the Customer
>       Edge to Provider Edge (CE-PE) attachment circuits, the PE
>       selection, and requesting the VPN service to the network
205,233c213,237
<    Service orchestrator:  A functional entity that interacts with the
<       customer of an L3VPN.  The service orchestrator interacts with the
<       customer using the L3SM.  The service orchestrator is responsible
<       for the Customer Edge to Provider Edge (CE-PE) attachment
<       circuits, the PE selection, and requesting the VPN service to the
<       network controller.
< 
<    Network orchestrator:  A functional entity that is hierarchically
<       intermediate between a service orchestrator and network
<       controllers.  A network orchestrator can manage one or several
<       network controllers.
< 
<    Network controller:  A functional entity responsible for the control
<       and management of the service provider network.
< 
<    VPN node:  An abstraction that represents a set of policies applied
<       on a PE and belonging to a single VPN service.  A VPN service
<       involves one or more VPN nodes.  As it is an abstraction, the
<       network controller will decide how to implement a VPN node.  For
<       example, in a BGP-based VPN, a VPN node could typically be mapped
<       to a Virtual Routing and Forwarding (VRF) instance.
< 
<    VPN network access:  An abstraction that represents the network
<       interfaces that are associated with a given VPN node.  Traffic
<       coming from the VPN network access belongs to the VPN.  The
<       attachment circuits (bearers) between CEs and PEs are terminated
<       in the VPN network access.  A reference to the bearer is
<       maintained to allow keeping the link between the L3SM and L3NM
<       when both models are used in a given deployment.
---
>    Network orchestrator:
>       A functional entity that is hierarchically intermediate between a
>       service orchestrator and network controllers.  A network
>       orchestrator can manage one or several network controllers.
> 
>    Network controller:
>       A functional entity responsible for the control and management of
>       the service provider network.
> 
>    VPN node:
>       An abstraction that represents a set of policies applied on a PE
>       and belonging to a single VPN service.  A VPN service involves one
>       or more VPN nodes.  As it is an abstraction, the network
>       controller will decide how to implement a VPN node.  For example,
>       in a BGP-based VPN, a VPN node could typically be mapped to a
>       Virtual Routing and Forwarding (VRF) instance.
> 
>    VPN network access:
>       An abstraction that represents the network interfaces that are
>       associated with a given VPN node.  Traffic coming from the VPN
>       network access belongs to the VPN.  The attachment circuits
>       (bearers) between CEs and PEs are terminated in the VPN network
>       access.  A reference to the bearer is maintained to allow keeping
>       the link between the L3SM and L3NM when both models are used in a
>       given deployment.
235c239,240
<    VPN site:  A VPN customer's location that is connected to the service
---
>    VPN site:
>       A VPN customer's location that is connected to the service
455,459c460,465
<    Network Topology Modules:  An L3VPN involves nodes that are part of a
<       topology managed by the service provider network.  The topology
<       can be represented using the network topology YANG module defined
<       in [RFC8345] or its extension, such as a network YANG module for
<       Service Attachment Points (SAPs) [YANG-SAPs].
---
>    Network Topology Modules:
>       An L3VPN involves nodes that are part of a topology managed by the
>       service provider network.  The topology can be represented using
>       the network topology YANG module defined in [RFC8345] or its
>       extension, such as a network YANG module for Service Attachment
>       Points (SAPs) [YANG-SAPs].
628,653c634,661
<    'external-connectivity-identifier':  This identifier refers to a
<       profile that defines the external connectivity provided to a VPN
<       service (or a subset of VPN sites).  External connectivity may be
<       access to the Internet or restricted connectivity, such as access
<       to a public/private cloud.
< 
<    'encryption-profile-identifier':  An encryption profile refers to a
<       set of policies related to the encryption schemes and setup that
<       can be applied when building and offering a VPN service.
< 
<    'qos-profile-identifier':  A Quality of Service (QoS) profile refers
<       to a set of policies, such as classification, marking, and actions
<       (e.g., [RFC3644]).
< 
<    'bfd-profile-identifier':  A Bidirectional Forwarding Detection (BFD)
<       profile refers to a set of BFD policies [RFC5880] that can be
<       invoked when building a VPN service.
< 
<    'forwarding-profile-identifier':  A forwarding profile refers to the
<       policies that apply to the forwarding of packets conveyed within a
<       VPN.  Such policies may consist, for example, of applying Access
<       Control Lists (ACLs).
< 
<    'routing-profile-identifier':  A routing profile refers to a set of
<       routing policies that will be invoked (e.g., BGP policies) when
<       delivering the VPN service.
---
>    'external-connectivity-identifier':
>       This identifier refers to a profile that defines the external
>       connectivity provided to a VPN service (or a subset of VPN sites).
>       External connectivity may be access to the Internet or restricted
>       connectivity, such as access to a public/private cloud.
> 
>    'encryption-profile-identifier':
>       An encryption profile refers to a set of policies related to the
>       encryption schemes and setup that can be applied when building and
>       offering a VPN service.
> 
>    'qos-profile-identifier':
>       A Quality of Service (QoS) profile refers to a set of policies,
>       such as classification, marking, and actions (e.g., [RFC3644]).
> 
>    'bfd-profile-identifier':
>       A Bidirectional Forwarding Detection (BFD) profile refers to a set
>       of BFD policies [RFC5880] that can be invoked when building a VPN
>       service.
> 
>    'forwarding-profile-identifier':
>       A forwarding profile refers to the policies that apply to the
>       forwarding of packets conveyed within a VPN.  Such policies may
>       consist, for example, of applying Access Control Lists (ACLs).
> 
>    'routing-profile-identifier':
>       A routing profile refers to a set of routing policies that will be
>       invoked (e.g., BGP policies) when delivering the VPN service.
704,708c712,718
<    'vpn-id':  An identifier that is used to uniquely identify the L3VPN
<       service within the L3NM scope.
< 
<    'vpn-name':  Associates a name with the service in order to
<       facilitate the identification of the service.
---
>    'vpn-id':
>       An identifier that is used to uniquely identify the L3VPN service
>       within the L3NM scope.
> 
>    'vpn-name':
>       Associates a name with the service in order to facilitate the
>       identification of the service.
715,716c725,726
<    'customer-name':  Indicates the name of the customer who ordered the
<       service.
---
>    'customer-name':
>       Indicates the name of the customer who ordered the service.
718,724c728,735
<    'parent-service-id':  Refers to an identifier of the parent service
<       (e.g., L3SM, IETF network slice, VPN+) that triggered the creation
<       of the VPN service.  This identifier is used to easily correlate
<       the (network) service as built in the network with a service
<       order.  A controller can use that correlation to enrich or
<       populate some fields (e.g., description fields) as a function of
<       local deployments.
---
>    'parent-service-id':
>       Refers to an identifier of the parent service (e.g., L3SM, IETF
>       network slice, VPN+) that triggered the creation of the VPN
>       service.  This identifier is used to easily correlate the
>       (network) service as built in the network with a service order.  A
>       controller can use that correlation to enrich or populate some
>       fields (e.g., description fields) as a function of local
>       deployments.
731,734c742,746
<    'vpn-service-topology':  Indicates the network topology for the
<       service: 'hub-spoke', 'any-to-any', or 'custom'.  The network
<       implementation of this attribute is defined by the correct usage
<       of import and export targets (Section 4.3.5 of [RFC4364]).
---
>    'vpn-service-topology':
>       Indicates the network topology for the service: 'hub-spoke', 'any-
>       to-any', or 'custom'.  The network implementation of this
>       attribute is defined by the correct usage of import and export
>       targets (Section 4.3.5 of [RFC4364]).
873,878c885,892
<    'role':  Indicates the role of the VPN instance profile in the VPN.
<       Role values are defined in [RFC9181] (e.g., 'any-to-any-role',
<       'spoke-role', 'hub-role').
< 
<    'local-as':  Indicates the Autonomous System Number (ASN) that is
<       configured for the VPN node.
---
>    'role':
>       Indicates the role of the VPN instance profile in the VPN.  Role
>       values are defined in [RFC9181] (e.g., 'any-to-any-role', 'spoke-
>       role', 'hub-role').
> 
>    'local-as':
>       Indicates the Autonomous System Number (ASN) that is configured
>       for the VPN node.
885,896c899,912
<       'directly-assigned':  The VPN service provider (service
<          orchestrator) assigns RDs explicitly.  This case will fit with
<          a brownfield scenario where some existing services need to be
<          updated by the VPN service provider.
< 
<       'full-auto':  The network controller auto-assigns RDs.  This can
<          apply for the deployment of new services.
< 
<       'no-rd':  The VPN service provider (service orchestrator)
<          explicitly wants no RD to be assigned.  This case can be used
<          for CE testing within the network or for troubleshooting
<          proposes.
---
>       'directly-assigned':
>          The VPN service provider (service orchestrator) assigns RDs
>          explicitly.  This case will fit with a brownfield scenario
>          where some existing services need to be updated by the VPN
>          service provider.
> 
>       'full-auto':
>          The network controller auto-assigns RDs.  This can apply for
>          the deployment of new services.
> 
>       'no-rd':
>          The VPN service provider (service orchestrator) explicitly
>          wants no RD to be assigned.  This case can be used for CE
>          testing within the network or for troubleshooting proposes.
907,916c923,935
<       'address-family':  Identifies the address family.  It can be set
<          to 'ipv4', 'ipv6', or 'dual-stack'.
< 
<       'vpn-targets':  Specifies RT import/export rules for the VPN
<          service (Section 4.3 of [RFC4364]).
< 
<       'maximum-routes':  Indicates the maximum number of prefixes that
<          the VPN node can accept for a given routing protocol.  If
<          'protocol' is set to 'any', this means that the maximum value
<          applies to each active routing protocol.
---
>       'address-family':
>          Identifies the address family.  It can be set to 'ipv4',
>          'ipv6', or 'dual-stack'.
> 
>       'vpn-targets':
>          Specifies RT import/export rules for the VPN service
>          (Section 4.3 of [RFC4364]).
> 
>       'maximum-routes':
>          Indicates the maximum number of prefixes that the VPN node can
>          accept for a given routing protocol.  If 'protocol' is set to
>          'any', this means that the maximum value applies to each active
>          routing protocol.
996,997c1015,1017
<    'vpn-node-id':  An identifier that uniquely identifies a node that
<       enables a VPN network access.
---
>    'vpn-node-id':
>       An identifier that uniquely identifies a node that enables a VPN
>       network access.
1001,1002c1021,1023
<    'ne-id':  Includes a unique identifier of the network element where
<       the VPN node is deployed.
---
>    'ne-id':
>       Includes a unique identifier of the network element where the VPN
>       node is deployed.
1006,1007c1027,1029
<    'router-id':  Indicates a 32-bit number that is used to uniquely
<       identify a router within an AS.
---
>    'router-id':
>       Indicates a 32-bit number that is used to uniquely identify a
>       router within an AS.
1028,1029c1050,1052
<    'msdp':  For redundancy purposes, the Multicast Source Discovery
<       Protocol (MSDP) [RFC3618] may be enabled and used to share state
---
>    'msdp':
>       For redundancy purposes, the Multicast Source Discovery Protocol
>       (MSDP) [RFC3618] may be enabled and used to share state
1040,1042c1063,1066
<    'status':  Tracks the status of a node involved in a VPN service.
<       Both operational status and administrative status are maintained.
<       A mismatch between the administrative status vs. the operational
---
>    'status':
>       Tracks the status of a node involved in a VPN service.  Both
>       operational status and administrative status are maintained.  A
>       mismatch between the administrative status vs. the operational
1102,1103c1126,1128
<    'interface-id':  Indicates the physical or logical interface on which
<       the VPN network access is bound.
---
>    'interface-id':
>       Indicates the physical or logical interface on which the VPN
>       network access is bound.
1105,1106c1130,1131
<    'description':  Includes a textual description of the VPN network
<       access.
---
>    'description':
>       Includes a textual description of the VPN network access.
1112,1115c1137,1141
<       'point-to-point':  Represents a direct connection between the
<          endpoints.  The controller must keep the association between a
<          logical or physical interface on the device with the 'id' of
<          the 'vpn-network-access'.
---
>       'point-to-point':
>          Represents a direct connection between the endpoints.  The
>          controller must keep the association between a logical or
>          physical interface on the device with the 'id' of the 'vpn-
>          network-access'.
1117,1120c1143,1147
<       'multipoint':  Represents a multipoint connection between the
<          customer site and the PEs.  The controller must keep the
<          association between a logical or physical interface on the
<          device with the 'id' of the 'vpn-network-access'.
---
>       'multipoint':
>          Represents a multipoint connection between the customer site
>          and the PEs.  The controller must keep the association between
>          a logical or physical interface on the device with the 'id' of
>          the 'vpn-network-access'.
1122c1149,1150
<       'irb':  Represents a connection coming from an L2VPN service.  An
---
>       'irb':
>          Represents a connection coming from an L2VPN service.  An
1129,1162c1157,1198
<       'loopback':  Represents the creation of a logical interface on a
<          device.  An example that illustrates how a loopback interface
<          can be used in the L3NM is provided in Appendix A.2.
< 
<    'vpn-instance-profile':  Provides a pointer to an active VPN instance
<       profile at the VPN node level.  Referencing an active VPN instance
<       profile implies that all associated data nodes will be inherited
<       by the VPN network access.  However, some inherited data nodes
<       (e.g., multicast) can be overridden at the VPN network access
<       level.  In such a case, adjusted values take precedence over
<       inherited values.
< 
<    'status':  Indicates both operational status and administrative
<       status of a VPN network access.
< 
<    'connection':  Represents and groups the set of Layer 2 connectivity
<       from where the traffic of the L3VPN in a particular VPN network
<       access is coming.  See Section 7.6.1.
< 
<    'ip-connection':  Contains Layer 3 connectivity information on a VPN
<       network access (e.g., IP addressing).  See Section 7.6.2.
< 
<    'routing-protocols':  Includes the CE-PE routing configuration
<       information.  See Section 7.6.3.
< 
<    'oam':  Specifies the Operations, Administration, and Maintenance
<       (OAM) mechanisms used for a VPN network access.  See
<       Section 7.6.4.
< 
<    'security':  Specifies the authentication and the encryption to be
<       applied for a given VPN network access.  See Section 7.6.5.
< 
<    'service':  Specifies the service parameters (e.g., QoS, multicast)
<       to apply for a given VPN network access.  See Section 7.6.6.
---
>       'loopback':
>          Represents the creation of a logical interface on a device.  An
>          example that illustrates how a loopback interface can be used
>          in the L3NM is provided in Appendix A.2.
> 
>    'vpn-instance-profile':
>       Provides a pointer to an active VPN instance profile at the VPN
>       node level.  Referencing an active VPN instance profile implies
>       that all associated data nodes will be inherited by the VPN
>       network access.  However, some inherited data nodes (e.g.,
>       multicast) can be overridden at the VPN network access level.  In
>       such a case, adjusted values take precedence over inherited
>       values.
> 
>    'status':
>       Indicates both operational status and administrative status of a
>       VPN network access.
> 
>    'connection':
>       Represents and groups the set of Layer 2 connectivity from where
>       the traffic of the L3VPN in a particular VPN network access is
>       coming.  See Section 7.6.1.
> 
>    'ip-connection':
>       Contains Layer 3 connectivity information on a VPN network access
>       (e.g., IP addressing).  See Section 7.6.2.
> 
>    'routing-protocols':
>       Includes the CE-PE routing configuration information.  See
>       Section 7.6.3.
> 
>    'oam':
>       Specifies the Operations, Administration, and Maintenance (OAM)
>       mechanisms used for a VPN network access.  See Section 7.6.4.
> 
>    'security':
>       Specifies the authentication and the encryption to be applied for
>       a given VPN network access.  See Section 7.6.5.
> 
>    'service':
>       Specifies the service parameters (e.g., QoS, multicast) to apply
>       for a given VPN network access.  See Section 7.6.6.
1545,1565c1581,1606
<    'lan-tag':  Indicates a local tag (e.g., "myfavorite-lan") that is
<       used to enforce local policies.
< 
<    'next-hop':  Indicates the next hop to be used for the static route.
<       It can be identified by an IP address, a predefined next-hop type
<       (e.g., 'discard' or 'local-link'), etc.
< 
<    'bfd-enable':  Indicates whether BFD is enabled or disabled for this
<       static route entry.
< 
<    'metric':  Indicates the metric associated with the static route
<       entry.  This metric is used when the route is exported into an
<       IGP.
< 
<    'preference':  Indicates the preference associated with the static
<       route entry.  This preference is used to select a preferred route
<       among routes to the same destination prefix.
< 
<    'status':  Used to convey the status of a static route entry.  This
<       data node can also be used to control the (de)activation of
<       individual static route entries.
---
>    'lan-tag':
>       Indicates a local tag (e.g., "myfavorite-lan") that is used to
>       enforce local policies.
> 
>    'next-hop':
>       Indicates the next hop to be used for the static route.  It can be
>       identified by an IP address, a predefined next-hop type (e.g.,
>       'discard' or 'local-link'), etc.
> 
>    'bfd-enable':
>       Indicates whether BFD is enabled or disabled for this static route
>       entry.
> 
>    'metric':
>       Indicates the metric associated with the static route entry.  This
>       metric is used when the route is exported into an IGP.
> 
>    'preference':
>       Indicates the preference associated with the static route entry.
>       This preference is used to select a preferred route among routes
>       to the same destination prefix.
> 
>    'status':
>       Used to convey the status of a static route entry.  This data node
>       can also be used to control the (de)activation of individual
>       static route entries.
1638,1639c1679,1681
<    'local-as':  Indicates a local AS Number (ASN), if a distinct ASN is
<       required other than the ASN configured at the VPN node level.
---
>    'local-as':
>       Indicates a local AS Number (ASN), if a distinct ASN is required
>       other than the ASN configured at the VPN node level.
1652,1653c1694,1738
<    'local-address':  Specifies an address or a reference to an interface
<       to use when establishing the BGP transport session.
---
>    'local-address':
>       Specifies an address or a reference to an interface to use when
>       establishing the BGP transport session.
> 
>    'neighbor':
>       Can indicate two neighbors (each for a given address family) or
>       one neighbor (if the 'address-family' attribute is set to 'dual-
>       stack').  A list of IP address(es) of the BGP neighbor(s) can then
>       be conveyed in this data node.
> 
>    'multihop':
>       Indicates the number of allowed IP hops between a PE and its BGP
>       peer.
> 
>    'as-override':
>       If set, this parameter indicates whether ASN override is enabled,
>       i.e., replacing the ASN of the customer specified in the AS_PATH
>       BGP attribute with the ASN identified in the 'local-as' attribute.
> 
>    'allow-own-as':
>       Used in some topologies (e.g., hub-and-spoke) to allow the
>       provider's ASN to be included in the AS_PATH BGP attribute
>       received from a CE.  Loops are prevented by setting 'allow-own-as'
>       to a maximum number of the provider's ASN occurrences.  By
>       default, this parameter is set to '0' (that is, reject any AS_PATH
>       attribute that includes the provider's ASN).
> 
>    'prepend-global-as':
>       When distinct ASNs are configured at the VPN node and network
>       access levels, this parameter controls whether the ASN provided at
>       the VPN node level is prepended to the AS_PATH attribute.
> 
>    'send-default-route':
>       Controls whether default routes can be advertised to the peer.
> 
>    'site-of-origin':
>       Meant to uniquely identify the set of routes learned from a site
>       via a particular CE-PE connection.  It is used to prevent routing
>       loops (Section 7 of [RFC4364]).  The Site of Origin attribute is
>       encoded as a Route Origin Extended Community.
> 
>    'ipv6-site-of-origin':
>       Carries an IPv6 Address Specific BGP Extended Community that is
>       used to indicate the Site of Origin for VRF information [RFC5701].
>       It is used to prevent routing loops.
1655,1693c1740,1741
<    'neighbor':  Can indicate two neighbors (each for a given address
<       family) or one neighbor (if the 'address-family' attribute is set
<       to 'dual-stack').  A list of IP address(es) of the BGP neighbor(s)
<       can then be conveyed in this data node.
< 
<    'multihop':  Indicates the number of allowed IP hops between a PE and
<       its BGP peer.
< 
<    'as-override':  If set, this parameter indicates whether ASN override
<       is enabled, i.e., replacing the ASN of the customer specified in
<       the AS_PATH BGP attribute with the ASN identified in the 'local-
<       as' attribute.
< 
<    'allow-own-as':  Used in some topologies (e.g., hub-and-spoke) to
<       allow the provider's ASN to be included in the AS_PATH BGP
<       attribute received from a CE.  Loops are prevented by setting
<       'allow-own-as' to a maximum number of the provider's ASN
<       occurrences.  By default, this parameter is set to '0' (that is,
<       reject any AS_PATH attribute that includes the provider's ASN).
< 
<    'prepend-global-as':  When distinct ASNs are configured at the VPN
<       node and network access levels, this parameter controls whether
<       the ASN provided at the VPN node level is prepended to the AS_PATH
<       attribute.
< 
<    'send-default-route':  Controls whether default routes can be
<       advertised to the peer.
< 
<    'site-of-origin':  Meant to uniquely identify the set of routes
<       learned from a site via a particular CE-PE connection.  It is used
<       to prevent routing loops (Section 7 of [RFC4364]).  The Site of
<       Origin attribute is encoded as a Route Origin Extended Community.
< 
<    'ipv6-site-of-origin':  Carries an IPv6 Address Specific BGP Extended
<       Community that is used to indicate the Site of Origin for VRF
<       information [RFC5701].  It is used to prevent routing loops.
< 
<    'redistribute-connected':  Controls whether the PE-CE link is
<       advertised to other PEs.
---
>    'redistribute-connected':
>       Controls whether the PE-CE link is advertised to other PEs.
1698,1718c1746,1770
<       'max-prefix':  Indicates the maximum number of BGP prefixes
<          allowed in the BGP session.  If the limit is reached, the
<          action indicated in 'violate-action' will be followed.
< 
<       'warning-threshold':  A warning notification is triggered when
<          this limit is reached.
< 
<       'violate-action':  Indicates which action to execute when the
<          maximum number of BGP prefixes is reached.  Examples of such
<          actions include sending a warning message, discarding extra
<          paths from the peer, or restarting the session.
< 
<       'restart-timer':  Indicates, in seconds, the time interval after
<          which the BGP session will be reestablished.
< 
<    'bgp-timers':  Two timers can be captured in this container: (1)
<       'hold-time', which is the time interval that will be used for the
<       Hold Timer (Section 4.2 of [RFC4271]) when establishing a BGP
<       session and (2) 'keepalive', which is the time interval for the
<       KeepaliveTimer between a PE and a BGP peer (Section 4.4 of
<       [RFC4271]).  Both timers are expressed in seconds.
---
>       'max-prefix':
>          Indicates the maximum number of BGP prefixes allowed in the BGP
>          session.  If the limit is reached, the action indicated in
>          'violate-action' will be followed.
> 
>       'warning-threshold':
>          A warning notification is triggered when this limit is reached.
> 
>       'violate-action':
>          Indicates which action to execute when the maximum number of
>          BGP prefixes is reached.  Examples of such actions include
>          sending a warning message, discarding extra paths from the
>          peer, or restarting the session.
> 
>       'restart-timer':
>          Indicates, in seconds, the time interval after which the BGP
>          session will be reestablished.
> 
>    'bgp-timers':
>       Two timers can be captured in this container: (1) 'hold-time',
>       which is the time interval that will be used for the Hold Timer
>       (Section 4.2 of [RFC4271]) when establishing a BGP session and (2)
>       'keepalive', which is the time interval for the KeepaliveTimer
>       between a PE and a BGP peer (Section 4.4 of [RFC4271]).  Both
>       timers are expressed in seconds.
1795,1805c1847,1860
<    'sham-links':  Used to create OSPF sham links between two VPN network
<       accesses sharing the same area and having a backdoor link
<       (Section 4.2.7 of [RFC4577] and Section 5 of [RFC6565]).
< 
<    'max-lsa':  Sets the maximum number of Link State Advertisements
<       (LSAs) that the OSPF instance will accept.
< 
<    'authentication':  Controls the authentication schemes to be enabled
<       for the OSPF instance.  The following options are supported: IPsec
<       for OSPFv3 authentication [RFC4552], and the Authentication
<       Trailer for OSPFv2 [RFC5709] [RFC7474] and OSPFv3 [RFC7166].
---
>    'sham-links':
>       Used to create OSPF sham links between two VPN network accesses
>       sharing the same area and having a backdoor link (Section 4.2.7 of
>       [RFC4577] and Section 5 of [RFC6565]).
> 
>    'max-lsa':
>       Sets the maximum number of Link State Advertisements (LSAs) that
>       the OSPF instance will accept.
> 
>    'authentication':
>       Controls the authentication schemes to be enabled for the OSPF
>       instance.  The following options are supported: IPsec for OSPFv3
>       authentication [RFC4552], and the Authentication Trailer for
>       OSPFv2 [RFC5709] [RFC7474] and OSPFv3 [RFC7166].
1849,1850c1904,1906
<    'address-family':  Indicates whether IPv4, IPv6, or both address
<       families are to be activated.
---
>    'address-family':
>       Indicates whether IPv4, IPv6, or both address families are to be
>       activated.
1854c1910,1911
<    'level':  Indicates the IS-IS level: Level 1, Level 2, or both.
---
>    'level':
>       Indicates the IS-IS level: Level 1, Level 2, or both.
1858c1915,1916
<    'mode':  Indicates the IS-IS interface mode type.  It can be set to
---
>    'mode':
>       Indicates the IS-IS interface mode type.  It can be set to
1863,1866c1921,1925
<    'authentication':  Controls the authentication schemes to be enabled
<       for the IS-IS instance.  Both the specification of a key chain
<       [RFC8177] and the direct specification of key and authentication
<       algorithms are supported.
---
>    'authentication':
>       Controls the authentication schemes to be enabled for the IS-IS
>       instance.  Both the specification of a key chain [RFC8177] and the
>       direct specification of key and authentication algorithms are
>       supported.
1910,1913c1969,1973
<    'address-family':  Indicates whether IPv4, IPv6, or both address
<       families are to be activated.  This parameter is used to determine
<       whether RIPv2 [RFC2453], RIP Next Generation (RIPng), or both are
<       to be enabled [RFC2080].
---
>    'address-family':
>       Indicates whether IPv4, IPv6, or both address families are to be
>       activated.  This parameter is used to determine whether RIPv2
>       [RFC2453], RIP Next Generation (RIPng), or both are to be enabled
>       [RFC2080].
1919,1920c1979,1980
<       'invalid-interval':  The interval before a RIP route is declared
<          invalid.
---
>       'invalid-interval':
>          The interval before a RIP route is declared invalid.
1922,1923c1982,1983
<       'holddown-interval':  The interval before better RIP routes are
<          released.
---
>       'holddown-interval':
>          The interval before better RIP routes are released.
1925,1926c1985,1986
<       'flush-interval':  The interval before a route is removed from the
<          routing table.
---
>       'flush-interval':
>          The interval before a route is removed from the routing table.
1932,1933c1992,1994
<    'authentication':  Controls the authentication schemes to be enabled
<       for the RIP instance.
---
>    'authentication':
>       Controls the authentication schemes to be enabled for the RIP
>       instance.
1966,1968c2027,2030
<    'address-family':  Indicates whether IPv4, IPv6, or both address
<       families are to be activated.  Note that VRRP version 3 [RFC5798]
<       supports both IPv4 and IPv6.
---
>    'address-family':
>       Indicates whether IPv4, IPv6, or both address families are to be
>       activated.  Note that VRRP version 3 [RFC5798] supports both IPv4
>       and IPv6.
1974,1975c2036,2037
<    'virtual-ip-address':  Includes virtual IP addresses for a single
<       VRRP group.
---
>    'virtual-ip-address':
>       Includes virtual IP addresses for a single VRRP group.
1977,1978c2039,2040
<    'priority':  Assigns the VRRP election priority for the backup
<       virtual router.
---
>    'priority':
>       Assigns the VRRP election priority for the backup virtual router.
1980,1981c2042,2043
<    'ping-reply':  Controls whether the VRRP speaker should reply to ping
<       requests.
---
>    'ping-reply':
>       Controls whether the VRRP speaker should reply to ping requests.
2020,2038c2082,2104
<    'session-type':  Indicates which BFD flavor is used to set up the
<       session (e.g., classic BFD [RFC5880], Seamless BFD [RFC7880]).  By
<       default, it is assumed that the BFD session will follow the
<       behavior specified in [RFC5880].
< 
<    'desired-min-tx-interval':  The minimum interval, in microseconds,
<       that a PE would like to use when transmitting BFD Control packets,
<       less any jitter applied.
< 
<    'required-min-rx-interval':  The minimum interval, in microseconds,
<       between received BFD Control packets that a PE is capable of
<       supporting, less any jitter applied by the sender.
< 
<    'local-multiplier':  The negotiated transmit interval, multiplied by
<       this value, provides the detection time for the peer.
< 
<    'holdtime':  Used to indicate the expected BFD holddown time, in
<       milliseconds.  This value may be inherited from the service
<       request (see Section 6.3.2.2.2 of [RFC8299]).
---
>    'session-type':
>       Indicates which BFD flavor is used to set up the session (e.g.,
>       classic BFD [RFC5880], Seamless BFD [RFC7880]).  By default, it is
>       assumed that the BFD session will follow the behavior specified in
>       [RFC5880].
> 
>    'desired-min-tx-interval':
>       The minimum interval, in microseconds, that a PE would like to use
>       when transmitting BFD Control packets, less any jitter applied.
> 
>    'required-min-rx-interval':
>       The minimum interval, in microseconds, between received BFD
>       Control packets that a PE is capable of supporting, less any
>       jitter applied by the sender.
> 
>    'local-multiplier':
>       The negotiated transmit interval, multiplied by this value,
>       provides the detection time for the peer.
> 
>    'holdtime':
>       Used to indicate the expected BFD holddown time, in milliseconds.
>       This value may be inherited from the service request (see
>       Section 6.3.2.2.2 of [RFC8299]).
2044,2047c2110,2114
<    'authentication':  Includes the required information to enable the
<       BFD authentication modes discussed in Section 6.7 of [RFC5880].
<       In particular, 'meticulous' controls the activation of meticulous
<       mode as discussed in Sections 6.7.3 and 6.7.4 of [RFC5880].
---
>    'authentication':
>       Includes the required information to enable the BFD authentication
>       modes discussed in Section 6.7 of [RFC5880].  In particular,
>       'meticulous' controls the activation of meticulous mode as
>       discussed in Sections 6.7.3 and 6.7.4 of [RFC5880].
2123,2129c2190,2197
<    'pe-to-ce-bandwidth':  Indicates, in bits per second (bps), the
<       inbound bandwidth of the connection (i.e., the download bandwidth
<       from the service provider to the site).
< 
<    'ce-to-pe-bandwidth':  Indicates, in bps, the outbound bandwidth of
<       the connection (i.e., the upload bandwidth from the site to the
<       service provider).
---
>    'pe-to-ce-bandwidth':
>       Indicates, in bits per second (bps), the inbound bandwidth of the
>       connection (i.e., the download bandwidth from the service provider
>       to the site).
> 
>    'ce-to-pe-bandwidth':
>       Indicates, in bps, the outbound bandwidth of the connection (i.e.,
>       the upload bandwidth from the site to the service provider).
2133c2201,2202
<    'qos':  Used to define a set of QoS policies to apply on a given
---
>    'qos':
>       Used to define a set of QoS policies to apply on a given
2136,2138c2205,2208
<    'carriers-carrier':  Groups a set of parameters that are used when
<       Carriers' Carriers (CsC) is enabled, such as using BGP for
<       signaling purposes [RFC8277].
---
>    'carriers-carrier':
>       Groups a set of parameters that are used when Carriers' Carriers
>       (CsC) is enabled, such as using BGP for signaling purposes
>       [RFC8277].
2140c2210,2211
<    'ntp':  Time synchronization may be needed in some VPNs, such as
---
>    'ntp':
>       Time synchronization may be needed in some VPNs, such as
2144,2145c2215,2217
<    'multicast':  Specifies the multicast mode and other data nodes, such
<       as the address family.  Refer to Section 7.7.
---
>    'multicast':
>       Specifies the multicast mode and other data nodes, such as the
>       address family.  Refer to Section 7.7.
5665,5675c5737,5749
<    'vpn-profiles':  This container includes a set of sensitive data that
<       influence how the L3VPN service is delivered.  For example, an
<       attacker who has access to these data nodes may be able to
<       manipulate routing policies, QoS policies, or encryption
<       properties.  These data nodes are defined with "nacm:default-deny-
<       write" tagging [RFC9181].
< 
<    'vpn-services':  An attacker who is able to access network nodes can
<       undertake various attacks, such as deleting a running L3VPN
<       service, interrupting all the traffic of a client.  In addition,
<       an attacker may modify the attributes of a running service (e.g.,
---
>    'vpn-profiles':
>       This container includes a set of sensitive data that influence how
>       the L3VPN service is delivered.  For example, an attacker who has
>       access to these data nodes may be able to manipulate routing
>       policies, QoS policies, or encryption properties.  These data
>       nodes are defined with "nacm:default-deny-write" tagging
>       [RFC9181].
> 
>    'vpn-services':
>       An attacker who is able to access network nodes can undertake
>       various attacks, such as deleting a running L3VPN service,
>       interrupting all the traffic of a client.  In addition, an
>       attacker may modify the attributes of a running service (e.g.,
5690,5698c5764,5773
<    'customer-name' and 'ip-connection':  An attacker can retrieve
<       privacy-related information, which can be used to track a
<       customer.  Disclosing such information may be considered a
<       violation of the customer-provider trust relationship.
< 
<    'keying-material':  An attacker can retrieve the cryptographic keys
<       protecting the underlying VPN service (CE-PE routing, in
<       particular).  These keys could be used to inject spoofed routing
<       advertisements.
---
>    'customer-name' and 'ip-connection':
>       An attacker can retrieve privacy-related information, which can be
>       used to track a customer.  Disclosing such information may be
>       considered a violation of the customer-provider trust
>       relationship.
> 
>    'keying-material':
>       An attacker can retrieve the cryptographic keys protecting the
>       underlying VPN service (CE-PE routing, in particular).  These keys
>       could be used to inject spoofed routing advertisements.
6754d6828
< 
6760d6833
< 
6767d6839
< 
6773d6844
< 
6779d6849
< 
6785d6854
< 
6795d6863
< 
6803d6870
< 
6811d6877
< 
6818d6883
< 
6826d6890
< 
