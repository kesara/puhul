196,205c196,207
<    SAIN agent:  A functional component that communicates with a device,
<       a set of devices, or another agent to build an expression graph
<       from a received assurance graph and perform the corresponding
<       computation of the health status and symptoms.  A SAIN agent might
<       be running directly on the device it monitors.
< 
<    Assurance case:  "An assurance case is a structured argument,
<       supported by evidence, intended to justify that a system is
<       acceptably assured relative to a concern (such as safety or
<       security) in the intended operating environment" [Piovesan2017].
---
>    SAIN agent:
>       A functional component that communicates with a device, a set of
>       devices, or another agent to build an expression graph from a
>       received assurance graph and perform the corresponding computation
>       of the health status and symptoms.  A SAIN agent might be running
>       directly on the device it monitors.
> 
>    Assurance case:
>       "An assurance case is a structured argument, supported by
>       evidence, intended to justify that a system is acceptably assured
>       relative to a concern (such as safety or security) in the intended
>       operating environment" [Piovesan2017].
209c211,212
<    Intent:  "A set of operational goals (that a network should meet) and
---
>    Intent:
>       "A set of operational goals (that a network should meet) and
214,225c217,231
<    Subservice:  A part or functionality of the network system that can
<       be independently assured as a single entity in an assurance graph.
< 
<    Assurance graph:  A Directed Acyclic Graph (DAG) representing the
<       assurance case for one or several service instances.  The nodes
<       (also known as vertices in the context of DAG) are the service
<       instances themselves and the subservices; the edges indicate a
<       dependency relation.
< 
<    SAIN collector:  A functional component that fetches or receives the
<       computer-consumable output of the SAIN agent(s) and processes it
<       locally (including displaying it in a user-friendly form).
---
>    Subservice:
>       A part or functionality of the network system that can be
>       independently assured as a single entity in an assurance graph.
> 
>    Assurance graph:
>       A Directed Acyclic Graph (DAG) representing the assurance case for
>       one or several service instances.  The nodes (also known as
>       vertices in the context of DAG) are the service instances
>       themselves and the subservices; the edges indicate a dependency
>       relation.
> 
>    SAIN collector:
>       A functional component that fetches or receives the computer-
>       consumable output of the SAIN agent(s) and processes it locally
>       (including displaying it in a user-friendly form).
248,256c254,265
<    Dependency:  The directed relationship between subservice instances
<       in the assurance graph.
< 
<    Metric:  A piece of information retrieved from the network running
<       the assured service.
< 
<    Metric engine:  A functional component, part of the SAIN agent, that
<       maps metrics to a list of candidate metric implementations,
<       depending on the network element.
---
>    Dependency:
>       The directed relationship between subservice instances in the
>       assurance graph.
> 
>    Metric:
>       A piece of information retrieved from the network running the
>       assured service.
> 
>    Metric engine:
>       A functional component, part of the SAIN agent, that maps metrics
>       to a list of candidate metric implementations, depending on the
>       network element.
261,299c270,313
<    Network Service YANG Module:  The characteristics of a service, as
<       agreed upon with consumers of that service [RFC8199].
< 
<    Service orchestrator:  "Network Service YANG Modules describe the
<       characteristics of a service, as agreed upon with consumers of
<       that service.  That is, a service module does not expose the
<       detailed configuration parameters of all participating network
<       elements and features but describes an abstract model that allows
<       instances of the service to be decomposed into instance data
<       according to the Network Element YANG Modules of the participating
<       network elements.  The service-to-element decomposition is a
<       separate process; the details depend on how the network operator
<       chooses to realize the service.  For the purpose of this document,
<       the term "orchestrator" is used to describe a system implementing
<       such a process" [RFC8199].
< 
<    SAIN orchestrator:  A functional component that is in charge of
<       fetching the configuration specific to each service instance and
<       converting it into an assurance graph.
< 
<    Health status:  The score and symptoms indicating whether a service
<       instance or a subservice is "healthy".  A non-maximal score must
<       always be explained by one or more symptoms.
< 
<    Health score:  An integer ranging from 0 to 100 that indicates the
<       health of a subservice.  A score of 0 means that the subservice is
<       broken, a score of 100 means that the subservice in question is
<       operating as expected, and the special value -1 can be used to
<       specify that no value could be computed for that health score, for
<       instance, if some metric needed for that computation could not be
<       collected.
< 
<    Strongly connected component:  A subset of a directed graph such that
<       there is a (directed) path from any node of the subset to any
<       other node.  A DAG does not contain any strongly connected
<       component.
< 
<    Symptom:  A reason explaining why a service instance or a subservice
<       is not completely healthy.
---
>    Network Service YANG Module:
>       The characteristics of a service, as agreed upon with consumers of
>       that service [RFC8199].
> 
>    Service orchestrator:
>       "Network Service YANG Modules describe the characteristics of a
>       service, as agreed upon with consumers of that service.  That is,
>       a service module does not expose the detailed configuration
>       parameters of all participating network elements and features but
>       describes an abstract model that allows instances of the service
>       to be decomposed into instance data according to the Network
>       Element YANG Modules of the participating network elements.  The
>       service-to-element decomposition is a separate process; the
>       details depend on how the network operator chooses to realize the
>       service.  For the purpose of this document, the term
>       "orchestrator" is used to describe a system implementing such a
>       process" [RFC8199].
> 
>    SAIN orchestrator:
>       A functional component that is in charge of fetching the
>       configuration specific to each service instance and converting it
>       into an assurance graph.
> 
>    Health status:
>       The score and symptoms indicating whether a service instance or a
>       subservice is "healthy".  A non-maximal score must always be
>       explained by one or more symptoms.
> 
>    Health score:
>       An integer ranging from 0 to 100 that indicates the health of a
>       subservice.  A score of 0 means that the subservice is broken, a
>       score of 100 means that the subservice in question is operating as
>       expected, and the special value -1 can be used to specify that no
>       value could be computed for that health score, for instance, if
>       some metric needed for that computation could not be collected.
> 
>    Strongly connected component:
>       A subset of a directed graph such that there is a (directed) path
>       from any node of the subset to any other node.  A DAG does not
>       contain any strongly connected component.
> 
>    Symptom:
>       A reason explaining why a service instance or a subservice is not
>       completely healthy.
