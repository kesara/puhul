176c176
<    +=====================+======+=====+======+=========================+
---
>    +====================+======+=====+======+=========================+
178,184c178,186
<    +=====================+======+=====+======+=========================+
<    |OPTION_ORO (6) Option|      |     |  X   | ietf-dhcpv6-client.yang |
<    |Request Option       |      |     |      |                         |
<    +---------------------+------+-----+------+-------------------------+
<    |OPTION_PREFERENCE (7)|  X   |     |      | ietf-dhcpv6-server.yang |
<    |Preference Option    |      |     |      |                         |
<    +---------------------+------+-----+------+-------------------------+
---
>    +====================+======+=====+======+=========================+
>    |OPTION_ORO (6)      |      |     |  X   | ietf-dhcpv6-client.yang |
>    |Option Request      |      |     |      |                         |
>    |Option              |      |     |      |                         |
>    +--------------------+------+-----+------+-------------------------+
>    |OPTION_PREFERENCE   |  X   |     |      | ietf-dhcpv6-server.yang |
>    |(7) Preference      |      |     |      |                         |
>    |Option              |      |     |      |                         |
>    +--------------------+------+-----+------+-------------------------+
186,187c188,190
<    |Authentication Option|      |     |      |                         |
<    +---------------------+------+-----+------+-------------------------+
---
>    |Authentication      |      |     |      |                         |
>    |Option              |      |     |      |                         |
>    +--------------------+------+-----+------+-------------------------+
189,190c192,194
<    |Server Unicast Option|      |     |      |                         |
<    +---------------------+------+-----+------+-------------------------+
---
>    |Server Unicast      |      |     |      |                         |
>    |Option              |      |     |      |                         |
>    +--------------------+------+-----+------+-------------------------+
194c198
<    +---------------------+------+-----+------+-------------------------+
---
>    +--------------------+------+-----+------+-------------------------+
198c202
<    +---------------------+------+-----+------+-------------------------+
---
>    +--------------------+------+-----+------+-------------------------+
202c206
<    +---------------------+------+-----+------+-------------------------+
---
>    +--------------------+------+-----+------+-------------------------+
206c210
<    +---------------------+------+-----+------+-------------------------+
---
>    +--------------------+------+-----+------+-------------------------+
210c214
<    +---------------------+------+-----+------+-------------------------+
---
>    +--------------------+------+-----+------+-------------------------+
214c218
<    +---------------------+------+-----+------+-------------------------+
---
>    +--------------------+------+-----+------+-------------------------+
218c222
<    +---------------------+------+-----+------+-------------------------+
---
>    +--------------------+------+-----+------+-------------------------+
223c227
<    +---------------------+------+-----+------+-------------------------+
---
>    +--------------------+------+-----+------+-------------------------+
227c231
<    +---------------------+------+-----+------+-------------------------+
---
>    +--------------------+------+-----+------+-------------------------+
231c235
<    +---------------------+------+-----+------+-------------------------+
---
>    +--------------------+------+-----+------+-------------------------+
501c505,506
<       enabled:  This enables/disables the function of the DHCPv6 server.
---
>       enabled:
>          This enables/disables the function of the DHCPv6 server.
503c508,509
<       dhcpv6-server:  This container holds the server's DHCPv6-specific
---
>       dhcpv6-server:
>          This container holds the server's DHCPv6-specific
506,515c512,521
<       server-duid:  Each server must have a DHCP Unique Identifier
<          (DUID) to identify itself to clients.  A DUID consists of a
<          2-octet type field and an arbitrary length (of no more than 128
<          octets) content field.  Currently, there are four DUID types
<          defined in [RFC8415] and [RFC6355].  The DUID may be configured
<          using the format for one of these types or using the
<          'unstructured' format.  The DUID type definitions are imported
<          from the 'ietf-dhcpv6-common.yang' module.
<          [IANA-HARDWARE-TYPES] and [IANA-PEN] are referenced for the
<          relevant DUID types.
---
>       server-duid:
>          Each server must have a DHCP Unique Identifier (DUID) to
>          identify itself to clients.  A DUID consists of a 2-octet type
>          field and an arbitrary length (of no more than 128 octets)
>          content field.  Currently, there are four DUID types defined in
>          [RFC8415] and [RFC6355].  The DUID may be configured using the
>          format for one of these types or using the 'unstructured'
>          format.  The DUID type definitions are imported from the 'ietf-
>          dhcpv6-common.yang' module.  [IANA-HARDWARE-TYPES] and
>          [IANA-PEN] are referenced for the relevant DUID types.
517,535c523,534
<       vendor-config:  This container is provided as a location for
<          additional implementation-specific YANG nodes for the
<          configuration of the device to be augmented.  See Appendix C
<          for an example of such a module.
< 
<       option-sets:  The server can be configured with multiple option-
<          sets.  These are groups of DHCPv6 options with common
<          parameters that may be supplied to clients on request.  The
<          'option-set-id' field is used to reference an option-set
<          elsewhere in the server's configuration.
< 
<       option-set:  This holds configuration parameters for DHCPv6
<          options.  The initial set of applicable option definitions are
<          defined here, and additional options that are also relevant to
<          the relay and/or client are imported from the 'ietf-
<          dhcpv6-common' module.  Where needed, other DHCPv6 option
<          modules can be augmented as they are defined.  The complete
<          list of DHCPV6 options is located at
<          [IANA-DHCPV6-OPTION-CODES].
---
>       vendor-config:
>          This container is provided as a location for additional
>          implementation-specific YANG nodes for the configuration of the
>          device to be augmented.  See Appendix C for an example of such
>          a module.
> 
>       option-sets:
>          The server can be configured with multiple option-sets.  These
>          are groups of DHCPv6 options with common parameters that may be
>          supplied to clients on request.  The 'option-set-id' field is
>          used to reference an option-set elsewhere in the server's
>          configuration.
537,552c536,561
<       class-selector:  This is provided as a location for additional
<          implementation-specific YANG nodes for vendor-specific class
<          selector nodes to be augmented.  See Appendix D for an example
<          of this.
< 
<       allocation-ranges:  A hierarchical model is used for the
<          allocation of addresses and prefixes.  The top-level
<          'allocation-ranges' container holds global configuration
<          parameters.  Under this, the 'allocation-range' list is used
<          for specifying IPv6 prefixes and additional prefix-specific
<          parameters.
< 
<       address-pools:  This is used for Identity Association for Non-
<          temporary Addresses (IA_NA) and Identity Association for
<          Temporary Addresses (IA_TA) pool allocations with a container
<          for defining host reservations.  State information about active
---
>       option-set:
>          This holds configuration parameters for DHCPv6 options.  The
>          initial set of applicable option definitions are defined here,
>          and additional options that are also relevant to the relay and/
>          or client are imported from the 'ietf-dhcpv6-common' module.
>          Where needed, other DHCPv6 option modules can be augmented as
>          they are defined.  The complete list of DHCPV6 options is
>          located at [IANA-DHCPV6-OPTION-CODES].
> 
>       class-selector:
>          This is provided as a location for additional implementation-
>          specific YANG nodes for vendor-specific class selector nodes to
>          be augmented.  See Appendix D for an example of this.
> 
>       allocation-ranges:
>          A hierarchical model is used for the allocation of addresses
>          and prefixes.  The top-level 'allocation-ranges' container
>          holds global configuration parameters.  Under this, the
>          'allocation-range' list is used for specifying IPv6 prefixes
>          and additional prefix-specific parameters.
> 
>       address-pools:
>          This is used for Identity Association for Non-temporary
>          Addresses (IA_NA) and Identity Association for Temporary
>          Addresses (IA_TA) pool allocations with a container for
>          defining host reservations.  State information about active
555,557c564,567
<       prefix-pools:  This defines pools to be used for prefix delegation
<          to clients.  Static host reservations can also be configured.
<          As prefix delegation is not supported by all DHCPv6 server
---
>       prefix-pools:
>          This defines pools to be used for prefix delegation to clients.
>          Static host reservations can also be configured.  As prefix
>          delegation is not supported by all DHCPv6 server
561,569c571,581
<       delete-address-lease:  This allows the deletion of a lease for an
<          individual IPv6 address from the server's lease database.  Per
<          [BCP18], if available, a language identifier should be included
<          in the output message.
< 
<       delete-prefix-lease:  This allows the deletion of a lease for an
<          individual IPv6 prefix from the server's lease database.  Per
<          [BCP18], if available, a language identifier should be included
<          in the output message.
---
>       delete-address-lease:
>          This allows the deletion of a lease for an individual IPv6
>          address from the server's lease database.  Per [BCP18], if
>          available, a language identifier should be included in the
>          output message.
> 
>       delete-prefix-lease:
>          This allows the deletion of a lease for an individual IPv6
>          prefix from the server's lease database.  Per [BCP18], if
>          available, a language identifier should be included in the
>          output message.
572,585c584,599
<       address/prefix-pool-utilization-threshold-exceeded:  This is
<          raised when the number of leased addresses or prefixes in a
<          pool exceeds the configured usage threshold.
< 
<       invalid-client-detected:  This is raised when the server detects
<          an invalid client.  A description of the error and message type
<          that has generated the notification can be included.
< 
<       decline-received:  This is raised when a DHCPv6 Decline message is
<          received from a client.
< 
<       non-success-code-sent:  This is raised when there is a status
<          message for a failure.  Status codes are drawn from
<          [IANA-DHCPV6-STATUS-CODES].
---
>       address/prefix-pool-utilization-threshold-exceeded:
>          This is raised when the number of leased addresses or prefixes
>          in a pool exceeds the configured usage threshold.
> 
>       invalid-client-detected:
>          This is raised when the server detects an invalid client.  A
>          description of the error and message type that has generated
>          the notification can be included.
> 
>       decline-received:
>          This is raised when a DHCPv6 Decline message is received from a
>          client.
> 
>       non-success-code-sent:
>          This is raised when there is a status message for a failure.
>          Status codes are drawn from [IANA-DHCPV6-STATUS-CODES].
696,697c710,711
<       enabled:  This globally enables/disables all DHCPv6 relay
<          functions.
---
>       enabled:
>          This globally enables/disables all DHCPv6 relay functions.
699,700c713,714
<       dhcpv6-relay:  This container holds the relay's DHCPv6-specific
<          configuration.
---
>       dhcpv6-relay:
>          This container holds the relay's DHCPv6-specific configuration.
702,705c716,720
<       relay-if:  As a relay may have multiple client-facing interfaces,
<          they are configured in a list.  The 'if-name' leaf is the key
<          and is an interface-ref to the applicable interface defined by
<          the 'ietf-interfaces' YANG module.
---
>       relay-if:
>          As a relay may have multiple client-facing interfaces, they are
>          configured in a list.  The 'if-name' leaf is the key and is an
>          interface-ref to the applicable interface defined by the 'ietf-
>          interfaces' YANG module.
707c722,723
<       enabled:  This enables/disables all DHCPv6 relay functions for the
---
>       enabled:
>          This enables/disables all DHCPv6 relay functions for the
710,729c726,750
<       destination-addresses:  This defines a list of IPv6 addresses that
<          client messages will be relayed to, which may include unicast
<          or multicast addresses.
< 
<       link-address:  This configures the value that the relay will put
<          into the link-address field of Relay-Forward messages.
< 
<       prefix-delegation:  As prefix delegation is not supported by all
<          DHCPv6 relay implementations, it is enabled by this feature
<          statement where required.
< 
<       pd-leases:  This contains read-only nodes for holding information
<          about active delegated prefix leases.
< 
<       relay-options:  This holds configuration parameters for DHCPv6
<          options that can be sent by the relay.  The initial set of
<          applicable option definitions are defined here, and additional
<          options that are also relevant to the server and/or client are
<          imported from the 'ietf-dhcpv6-common' module.  Information for
<          the Authentication Option (OPTION_AUTH (11)) is drawn from
---
>       destination-addresses:
>          This defines a list of IPv6 addresses that client messages will
>          be relayed to, which may include unicast or multicast
>          addresses.
> 
>       link-address:
>          This configures the value that the relay will put into the
>          link-address field of Relay-Forward messages.
> 
>       prefix-delegation:
>          As prefix delegation is not supported by all DHCPv6 relay
>          implementations, it is enabled by this feature statement where
>          required.
> 
>       pd-leases:
>          This contains read-only nodes for holding information about
>          active delegated prefix leases.
> 
>       relay-options:
>          This holds configuration parameters for DHCPv6 options that can
>          be sent by the relay.  The initial set of applicable option
>          definitions are defined here, and additional options that are
>          also relevant to the server and/or client are imported from the
>          'ietf-dhcpv6-common' module.  Information for the
>          Authentication Option (OPTION_AUTH (11)) is drawn from
736,742c757,770
<       clear-prefix-entry:  This allows the removal of a delegated lease
<          entry from the relay.  Per [BCP18], if available, a language
<          identifier should be included in the output message.
< 
<       clear-client-prefixes:  This allows the removal of all of the
<          delegated lease entries for a single client (referenced by
<          client DUID) from the relay.  Per [BCP18], if available, a
---
>       clear-prefix-entry:
>          This allows the removal of a delegated lease entry from the
>          relay.  Per [BCP18], if available, a language identifier should
>          be included in the output message.
> 
>       clear-client-prefixes:
>          This allows the removal of all of the delegated lease entries
>          for a single client (referenced by client DUID) from the relay.
>          Per [BCP18], if available, a language identifier should be
>          included in the output message.
> 
>       clear-interface-prefixes:
>          This allows the removal of all of the delegated lease entries
>          from an interface on the relay.  Per [BCP18], if available, a
745,749d772
<       clear-interface-prefixes:  This allows the removal of all of the
<          delegated lease entries from an interface on the relay.  Per
<          [BCP18], if available, a language identifier should be included
<          in the output message.
< 
751,753c774,776
<       topology-change:  This is raised when the topology of the relay
<          agent is changed, e.g., a client-facing interface is
<          reconfigured.
---
>       topology-change:
>          This is raised when the topology of the relay agent is changed,
>          e.g., a client-facing interface is reconfigured.
890,891c913,914
<       enabled:  This globally enables/disables all DHCPv6 client
<          functions.
---
>       enabled:
>          This globally enables/disables all DHCPv6 client functions.
893c916,917
<       dhcpv6-client:  This container holds the client's DHCPv6-specific
---
>       dhcpv6-client:
>          This container holds the client's DHCPv6-specific
896c920,921
<       client-if:  As a client may have multiple interfaces requesting
---
>       client-if:
>          As a client may have multiple interfaces requesting
902c927,928
<       enabled:  This enables/disables all DHCPv6 client function for the
---
>       enabled:
>          This enables/disables all DHCPv6 client function for the
905,931c931,958
<       client-duid/interface-duid:  The DUID is used to identify the
<          client to servers and relays.  A DUID consists of a 2-octet
<          type field and an arbitrary length (1-128 octets) content
<          field.  Currently, there are four DUID types defined in
<          [RFC8415] and [RFC6355].  The DUID may be configured using the
<          format for one of these types or using the 'unstructured'
<          format.  The DUID type definitions are imported from the 'ietf-
<          dhcpv6-common.yang' module.  [IANA-HARDWARE-TYPES] and
<          [IANA-PEN] are referenced for the relevant DUID types.  A DUID
<          only needs to be configured if the client is requesting
<          addresses and/or prefixes from the server.  Presence of the
<          'client-duid' or 'interface-duid' leaves is conditional on at
<          least one of the 'non-temp-addr', 'temp-addr', or 'prefix-
<          delegation' features being enabled.  Additionally, if the
<          'anon-profile' [RFC7844] feature is enabled, a unique DUID can
<          be configured per a DHCP-enabled interface using the
<          'interface-duid' leaf; otherwise, there is a global 'client-
<          duid' leaf.
< 
<       client-configured-options:  This holds configuration parameters
<          for DHCPv6 options that can be sent by the client.  The initial
<          set of applicable option definitions are defined here, and
<          additional options that are also relevant to the relay and/or
<          server are imported from the 'ietf-dhcpv6-common' module.
<          Where needed, other DHCPv6 option modules can be augmented as
<          they are defined.  The complete list of DHCPV6 options is
<          located at [IANA-DHCPV6-OPTION-CODES].
---
>       client-duid/interface-duid:
>          The DUID is used to identify the client to servers and relays.
>          A DUID consists of a 2-octet type field and an arbitrary length
>          (1-128 octets) content field.  Currently, there are four DUID
>          types defined in [RFC8415] and [RFC6355].  The DUID may be
>          configured using the format for one of these types or using the
>          'unstructured' format.  The DUID type definitions are imported
>          from the 'ietf-dhcpv6-common.yang' module.
>          [IANA-HARDWARE-TYPES] and [IANA-PEN] are referenced for the
>          relevant DUID types.  A DUID only needs to be configured if the
>          client is requesting addresses and/or prefixes from the server.
>          Presence of the 'client-duid' or 'interface-duid' leaves is
>          conditional on at least one of the 'non-temp-addr', 'temp-
>          addr', or 'prefix-delegation' features being enabled.
>          Additionally, if the 'anon-profile' [RFC7844] feature is
>          enabled, a unique DUID can be configured per a DHCP-enabled
>          interface using the 'interface-duid' leaf; otherwise, there is
>          a global 'client-duid' leaf.
> 
>       client-configured-options:
>          This holds configuration parameters for DHCPv6 options that can
>          be sent by the client.  The initial set of applicable option
>          definitions are defined here, and additional options that are
>          also relevant to the relay and/or server are imported from the
>          'ietf-dhcpv6-common' module.  Where needed, other DHCPv6 option
>          modules can be augmented as they are defined.  The complete
>          list of DHCPV6 options is located at
>          [IANA-DHCPV6-OPTION-CODES].
933,941c960,968
<       ia-na, ia-ta, ia-pd:  These contain configuration nodes relevant
<          for requesting one or more of each of the lease types.  Read-
<          only nodes related to the active leases for each type are also
<          located here, drawing the status codes from
<          [IANA-DHCPV6-STATUS-CODES].  As these lease types may not be
<          supported by all DHCPv6 client implementations, they are
<          enabled via individual feature statements.  Stateless DHCP
<          (Section 6.1 of [RFC8415]) is configured when all address and
<          prefix features are disabled.
---
>       ia-na, ia-ta, ia-pd:
>          These contain configuration nodes relevant for requesting one
>          or more of each of the lease types.  Read-only nodes related to
>          the active leases for each type are also located here, drawing
>          the status codes from [IANA-DHCPV6-STATUS-CODES].  As these
>          lease types may not be supported by all DHCPv6 client
>          implementations, they are enabled via individual feature
>          statements.  Stateless DHCP (Section 6.1 of [RFC8415]) is
>          configured when all address and prefix features are disabled.
944,949c971,978
<       invalid-ia-detected:  This is raised when the identity association
<          of the client can be proved to be invalid.  Possible conditions
<          include duplicated address, illegal address, etc.
< 
<       retransmission-failed:  This is raised when the retransmission
<          mechanism defined in [RFC8415] has failed.
---
>       invalid-ia-detected:
>          This is raised when the identity association of the client can
>          be proved to be invalid.  Possible conditions include
>          duplicated address, illegal address, etc.
> 
>       retransmission-failed:
>          This is raised when the retransmission mechanism defined in
>          [RFC8415] has failed.
