262,291c262,295
<    Application Object:  data that has meaning to the application that
<          uses the ROUTE protocol for delivery of data to receivers,
<          e.g., an Application Object can be a file, a DASH video
<          segment, a WAV audio clip, an MPEG-4 video clip, etc.
< 
<    Delivery Object:  an object on course of delivery to the application
<          from the ROUTE sender to ROUTE receiver.
< 
<    Transport Object:  an object identified by the Transport Object
<          Identifier (TOI) in RFC 5651 [RFC5651].  It MAY be either a
<          source or a repair object, depending on if it is carried by a
<          Source Flow or a Repair Flow, respectively.
< 
<    Transport Session:  a Layered Coding Transport (LCT) channel, as
<          defined by RFC 5651 [RFC5651].  A Transport Session SHALL be
<          uniquely identified by a unique Transport Session Identifier
<          (TSI) value in the LCT header.  The TSI is scoped by the IP
<          address of the sender, and the IP address of the sender
<          together with the TSI uniquely identify the session.  Transport
<          Sessions are a subset of a ROUTE session.  For media delivery,
<          a Transport Session would typically carry a media component,
<          for example, a DASH Representation.  Within each Transport
<          Session, one or more objects are carried, typically objects
<          that are related, e.g., DASH segments associated to one
<          Representation.
< 
<    ROUTE Session:  an ensemble or multiplex of one or more Transport
<          Sessions.  Each ROUTE session is associated with an IP address/
<          port combination.  A ROUTE session typically carries one or
<          more media components of streaming media e.g., Representations
---
>    Application Object:
>          data that has meaning to the application that uses the ROUTE
>          protocol for delivery of data to receivers, e.g., an
>          Application Object can be a file, a DASH video segment, a WAV
>          audio clip, an MPEG-4 video clip, etc.
> 
>    Delivery Object:
>          an object on course of delivery to the application from the
>          ROUTE sender to ROUTE receiver.
> 
>    Transport Object:
>          an object identified by the Transport Object Identifier (TOI)
>          in RFC 5651 [RFC5651].  It MAY be either a source or a repair
>          object, depending on if it is carried by a Source Flow or a
>          Repair Flow, respectively.
> 
>    Transport Session:
>          a Layered Coding Transport (LCT) channel, as defined by RFC
>          5651 [RFC5651].  A Transport Session SHALL be uniquely
>          identified by a unique Transport Session Identifier (TSI) value
>          in the LCT header.  The TSI is scoped by the IP address of the
>          sender, and the IP address of the sender together with the TSI
>          uniquely identify the session.  Transport Sessions are a subset
>          of a ROUTE session.  For media delivery, a Transport Session
>          would typically carry a media component, for example, a DASH
>          Representation.  Within each Transport Session, one or more
>          objects are carried, typically objects that are related, e.g.,
>          DASH segments associated to one Representation.
> 
>    ROUTE Session:
>          an ensemble or multiplex of one or more Transport Sessions.
>          Each ROUTE session is associated with an IP address/port
>          combination.  A ROUTE session typically carries one or more
>          media components of streaming media e.g., Representations
294,295c298,300
<    Source Flow:  a Transport Session carrying source data.  Source Flow
<          is independent of the Repair Flow, i.e., the Source Flow MAY be
---
>    Source Flow:
>          a Transport Session carrying source data.  Source Flow is
>          independent of the Repair Flow, i.e., the Source Flow MAY be
298,299c303,305
<    Repair Flow:  a Transport Session carrying repair data for one or
<          more Source Flows.
---
>    Repair Flow:
>          a Transport Session carrying repair data for one or more Source
>          Flows.
400,402c406,409
<    Version number (V):  This 4-bit field indicates the protocol version
<       number.  The version number SHALL be set to '0001', as specified
<       in RFC 5651 [RFC5651].
---
>    Version number (V):
>       This 4-bit field indicates the protocol version number.  The
>       version number SHALL be set to '0001', as specified in RFC 5651
>       [RFC5651].
407,411c414,419
<    Protocol-Specific Indication (PSI):  The most significant bit of this
<       2-bit flag is called the Source Packet Indicator (SPI) and
<       indicates whether the current packet is a source packet or a FEC
<       repair packet.  The SPI SHALL be set to '1' to indicate a source
<       packet and SHALL bet set to '0' to indicate a repair packet.
---
>    Protocol-Specific Indication (PSI):
>       The most significant bit of this 2-bit flag is called the Source
>       Packet Indicator (SPI) and indicates whether the current packet is
>       a source packet or a FEC repair packet.  The SPI SHALL be set to
>       '1' to indicate a source packet and SHALL bet set to '0' to
>       indicate a repair packet.
423,434c431,442
<    Codepoint (CP):  This 8-bit field is used to indicate the type of the
<       payload that is carried by this packet; for ROUTE, it is defined
<       as shown below to indicate the type of delivery object carried in
<       the payload of the associated ROUTE packet.  The remaining
<       unmapped Codepoint values can be used by a service using ROUTE.
<       In this case, the Codepoint values SHALL follow the semantics
<       specified in the following table.  "IS" stands for Initialization
<       Segment of the media content such as the DASH Initialization
<       Segment [DASH].  The various modes of operation in the table
<       (File/Entity/Package Mode) are specified in Section 4.  The table
<       also lists a Codepoint value range that is reserved for future
<       service-specific uses.
---
>    Codepoint (CP):
>       This 8-bit field is used to indicate the type of the payload that
>       is carried by this packet; for ROUTE, it is defined as shown below
>       to indicate the type of delivery object carried in the payload of
>       the associated ROUTE packet.  The remaining unmapped Codepoint
>       values can be used by a service using ROUTE.  In this case, the
>       Codepoint values SHALL follow the semantics specified in the
>       following table.  "IS" stands for Initialization Segment of the
>       media content such as the DASH Initialization Segment [DASH].  The
>       various modes of operation in the table (File/Entity/Package Mode)
>       are specified in Section 4.  The table also lists a Codepoint
>       value range that is reserved for future service-specific uses.
474,477c482,486
<    Transport Session Identifier (TSI):  This 32-bit field identifies the
<       Transport Session in ROUTE.  The context of the Transport Session
<       is provided by signaling metadata.  The value TSI = 0 SHALL only
<       be used for service-specific signaling.
---
>    Transport Session Identifier (TSI):
>       This 32-bit field identifies the Transport Session in ROUTE.  The
>       context of the Transport Session is provided by signaling
>       metadata.  The value TSI = 0 SHALL only be used for service-
>       specific signaling.
490,492c499,502
<    EXT_TOL:  the length in bytes of the multicast transport object shall
<       be signaled using EXT_TOL as specified by ATSC-ROUTE [ATSCA331]
<       with 24 bits or, if required, 48 bits of Transfer Length.  The
---
>    EXT_TOL:
>       the length in bytes of the multicast transport object shall be
>       signaled using EXT_TOL as specified by ATSC-ROUTE [ATSCA331] with
>       24 bits or, if required, 48 bits of Transfer Length.  The
496a507
>  
551,559c562,571
<    ROUTE version number (m):  the version number of ROUTE used in this
<       session.  The version number conforming to this document SHALL be
<       1.
< 
<    Connection ID (m):  the unique identifier of a Connection, usually
<       consisting of the following 4-tuple: source IP address/source port
<       number, destination IP address/destination port number.  The IP
<       addresses can be IPv4 or IPv6 addresses depending upon which IP
<       version is used by the deployment.
---
>    ROUTE version number (m):
>       the version number of ROUTE used in this session.  The version
>       number conforming to this document SHALL be 1.
> 
>    Connection ID (m):
>       the unique identifier of a Connection, usually consisting of the
>       following 4-tuple: source IP address/source port number,
>       destination IP address/destination port number.  The IP addresses
>       can be IPv4 or IPv6 addresses depending upon which IP version is
>       used by the deployment.
579a592
>  
599,605c612,618
<    applicationMapping (m):  A set of identifiers that provide an
<       application-specific mapping of the received Application Objects
<       to the Source Flows.  For example, for DASH, this would provide
<       the mapping of a Source Flow to a specific DASH Representation
<       from a Media Presentation Description (MPD), the latter identified
<       by its Representation and corresponding Adaptation Set and Period
<       IDs.
---
>    applicationMapping (m):
>       A set of identifiers that provide an application-specific mapping
>       of the received Application Objects to the Source Flows.  For
>       example, for DASH, this would provide the mapping of a Source Flow
>       to a specific DASH Representation from a Media Presentation
>       Description (MPD), the latter identified by its Representation and
>       corresponding Adaptation Set and Period IDs.
623,638c636,652
<    fecOTI (m):  A parameter consisting of the concatenation of Common
<       and Scheme-Specific FEC Object Transmission Information (FEC OTI)
<       as defined in Sections 3.3.2 and 3.3.3 of [RFC6330] and that
<       corresponds to the delivery objects carried in the Source Flow to
<       which this Repair Flow is associated, with the following
<       qualification: the 40-bit Transfer Length (F) field may either
<       represent the actual size of the object, or it is encoded as all
<       zeroes.  In the latter case, the FEC transport object size either
<       is unknown or cannot be represented by this attribute.  In other
<       words, for the all-zeroes format, the delivery objects in the
<       Source Flow correspond to streaming content, either a live Service
<       whereby content encoding has not yet occurred at the time this
<       session data was generated or pre-recorded streaming content whose
<       delivery object sizes, albeit known at the time of session data
<       generation, are variable and cannot be represented as a single
<       value by the fecOTI attribute.
---
>    fecOTI (m):
>       A parameter consisting of the concatenation of Common and Scheme-
>       Specific FEC Object Transmission Information (FEC OTI) as defined
>       in Sections 3.3.2 and 3.3.3 of [RFC6330] and that corresponds to
>       the delivery objects carried in the Source Flow to which this
>       Repair Flow is associated, with the following qualification: the
>       40-bit Transfer Length (F) field may either represent the actual
>       size of the object, or it is encoded as all zeroes.  In the latter
>       case, the FEC transport object size either is unknown or cannot be
>       represented by this attribute.  In other words, for the all-zeroes
>       format, the delivery objects in the Source Flow correspond to
>       streaming content, either a live Service whereby content encoding
>       has not yet occurred at the time this session data was generated
>       or pre-recorded streaming content whose delivery object sizes,
>       albeit known at the time of session data generation, are variable
>       and cannot be represented as a single value by the fecOTI
>       attribute.
643,651c657,667
<    mappingTOIx (o):  Values of the constant X for use in deriving the
<       TOI of the delivery object of each protected Source Flow from the
<       TOI of the FEC (super-)object.  The default value is "1".
<       Multiple mappingTOIx values MAY be provided for each protected
<       Source Flow depending upon the usage of FEC (super-)object.
< 
<    mappingTOIy (o):  The corresponding constant Y to each mappingTOIx,
<       when present, for use in deriving the parent SourceTOI value from
<       the above equation.  The default value is "0".
---
>    mappingTOIx (o):
>       Values of the constant X for use in deriving the TOI of the
>       delivery object of each protected Source Flow from the TOI of the
>       FEC (super-)object.  The default value is "1".  Multiple
>       mappingTOIx values MAY be provided for each protected Source Flow
>       depending upon the usage of FEC (super-)object.
> 
>    mappingTOIy (o):
>       The corresponding constant Y to each mappingTOIx, when present,
>       for use in deriving the parent SourceTOI value from the above
>       equation.  The default value is "0".
679,692c695,709
<    maxExpiresDelta:  Let "tp" represent the wall clock time at the
<       receiver when the receiver acquires the first ROUTE packet
<       carrying data of the object described by this Extended FDT-
<       Instance.  maxExpiresDelta, when present, SHALL represent a time
<       interval that when added to "tp" SHALL represent the expiration
<       time of the associated Extended FDT-Instance "te".  The time
<       interval is expressed in number of seconds.  When maxExpiresDelta
<       is not present, the expiration time of the Extended FDT-Instance
<       SHALL be given by the sum of a) the value of the ERT field in the
<       EXT_TIME LCT header extension in the first ROUTE packet carrying
<       data of that file, and b) the current receiver time when parsing
<       the packet header of that ROUTE packet.  See Sections 5.4 and
<       6.3.3 on additional rules for deriving the Extended FDT-Instance
<       expiration time.  Hence, te = tp + maxExpiresDelta
---
>    maxExpiresDelta:
>       Let "tp" represent the wall clock time at the receiver when the
>       receiver acquires the first ROUTE packet carrying data of the
>       object described by this Extended FDT-Instance.  maxExpiresDelta,
>       when present, SHALL represent a time interval that when added to
>       "tp" SHALL represent the expiration time of the associated
>       Extended FDT-Instance "te".  The time interval is expressed in
>       number of seconds.  When maxExpiresDelta is not present, the
>       expiration time of the Extended FDT-Instance SHALL be given by the
>       sum of a) the value of the ERT field in the EXT_TIME LCT header
>       extension in the first ROUTE packet carrying data of that file,
>       and b) the current receiver time when parsing the packet header of
>       that ROUTE packet.  See Sections 5.4 and 6.3.3 on additional rules
>       for deriving the Extended FDT-Instance expiration time.  Hence, te
>       = tp + maxExpiresDelta
704,710c721,727
<    fileTemplate:  A string value, which when present and in conjunction
<       with parameter substitution, is used in deriving the Content-
<       Location attribute for the delivery object described by this
<       Extended FDT-Instance.  It SHALL include the "$TOI$" identifier.
<       Each identifier MAY be suffixed as needed by specific file names
<       within the enclosing '$' characters following this prototype:
<       %0[width]d
---
>    fileTemplate:
>       A string value, which when present and in conjunction with
>       parameter substitution, is used in deriving the Content-Location
>       attribute for the delivery object described by this Extended FDT-
>       Instance.  It SHALL include the "$TOI$" identifier.  Each
>       identifier MAY be suffixed as needed by specific file names within
>       the enclosing '$' characters following this prototype: %0[width]d
